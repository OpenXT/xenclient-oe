From 5a1e65eca8e12f823694e9c41976eb46c53d4797 Mon Sep 17 00:00:00 2001
From: Tamas K Lengyel <tamas@tklengyel.com>
Date: Fri, 2 Mar 2018 21:17:09 -0700
Subject: [PATCH 5/6] Allow 32-bit images for measurement/verification via
 protocol
---
 Make.defaults |  5 +++++
 shim.c        | 20 +++++++++++---------
 2 files changed, 16 insertions(+), 9 deletions(-)

diff --git a/Make.defaults b/Make.defaults
index ba01917..22939f2 100644
--- a/Make.defaults
+++ b/Make.defaults
@@ -22,6 +22,7 @@ DEBUGSOURCE	?= $(prefix)/src/debug/
 OSLABEL		?= $(EFIDIR)
 DEFAULT_LOADER	?= \\\\grub$(ARCH_SUFFIX).efi
 DASHJ		?= -j$(shell echo $$(($$(grep -c "^model name" /proc/cpuinfo) + 1)))
+ALLOW_32BIT_KERNEL_ON_X64 ?=
 
 ARCH		?= $(shell $(CC) -dumpmachine | cut -f1 -d- | sed s,i[3456789]86,ia32,)
 OBJCOPY_GTE224	= $(shell expr `$(OBJCOPY) --version |grep ^"GNU objcopy" | sed 's/^.*\((.*)\|version\) //g' | cut -f1-2 -d.` \>= 2.24)
@@ -63,6 +64,10 @@ ifneq ($(origin REQUIRE_TPM), undefined)
 	CFLAGS  += -DREQUIRE_TPM
 endif
 
+ifneq ($(origin ALLOW_32BIT_KERNEL_ON_X64), undefined)
+	CFLAGS	+= -DALLOW_32BIT_KERNEL_ON_X64
+endif
+
 ifneq ($(origin KEEP_DISCARDABLE_RELOC), undefined)
     CFLAGS  += -DKEEP_DISCARDABLE_RELOC
 endif
diff --git a/shim.c b/shim.c
index 0a4c201..6c2bd2c 100644
--- a/shim.c
+++ b/shim.c
@@ -185,15 +185,17 @@ static const UINT16 machine_type =
 static int
 image_is_loadable(EFI_IMAGE_OPTIONAL_HEADER_UNION *PEHdr)
 {
-	/* If the machine type doesn't match the binary, bail, unless
-	 * we're in an allowed 64-on-32 scenario */
-	if (PEHdr->Pe32.FileHeader.Machine != machine_type) {
-		if (!(machine_type == IMAGE_FILE_MACHINE_I386 &&
-		      PEHdr->Pe32.FileHeader.Machine == IMAGE_FILE_MACHINE_X64 &&
-		      allow_64_bit())) {
-			return 0;
-		}
-	}
+    if ( !in_protocol ) {
+	    /* If the machine type doesn't match the binary, bail, unless
+	     * we're in an allowed 64-on-32 scenario */
+	    if (PEHdr->Pe32.FileHeader.Machine != machine_type) {
+		    if (!(machine_type == IMAGE_FILE_MACHINE_I386 &&
+		        PEHdr->Pe32.FileHeader.Machine == IMAGE_FILE_MACHINE_X64 &&
+		        allow_64_bit())) {
+			    return 0;
+		    }
+	    }
+    }
 
 	/* If it's not a header type we recognize at all, bail */
 	switch (PEHdr->Pe32Plus.OptionalHeader.Magic) {
-- 
2.17.1

