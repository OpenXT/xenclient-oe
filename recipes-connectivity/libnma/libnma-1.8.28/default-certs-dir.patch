--- a/src/nma-cert-chooser.c
+++ b/src/nma-cert-chooser.c
@@ -597,7 +597,9 @@ constructor (GType type, guint n_constru
 	NMACertChooserPrivate *priv;
 	int i;
 	const gchar *title = NULL;
+	const gchar *default_certs_dir = NULL;
 
+	default_certs_dir = getenv (DEFAULT_CERTS_DIR_ENV);
 	object = G_OBJECT_CLASS (nma_cert_chooser_parent_class)->constructor (type,
 	                                                                      n_construct_properties,
 	                                                                      construct_properties);
@@ -643,6 +643,8 @@ constructor (GType type, guint n_construct_properties, GObjectConstructParam *co
 	priv->vtable->init (cert_chooser);
 	priv->vtable->set_flags (cert_chooser, flags);
 	priv->vtable->set_title (cert_chooser, title);
+	if (default_certs_dir)
+		priv->vtable->set_folder (cert_chooser, default_certs_dir);
 
 	return object;
 }
--- a/src/nma-file-cert-chooser.c
+++ b/src/nma-file-cert-chooser.c
@@ -238,6 +238,15 @@ show_toggled_cb (GtkCheckButton *button,
 }
 
 static void
+set_folder (NMACertChooser *cert_chooser, const gchar *folder)
+{
+	NMAFileCertChooserPrivate *priv = NMA_FILE_CERT_CHOOSER_GET_PRIVATE (cert_chooser);
+
+	if (folder)
+		gtk_file_chooser_set_current_folder (GTK_FILE_CHOOSER (priv->cert_button), folder);
+}
+
+static void
 set_title (NMACertChooser *cert_chooser, const gchar *title)
 {
	NMAFileCertChooserPrivate *priv = NMA_FILE_CERT_CHOOSER_GET_PRIVATE (cert_chooser);
@@ -430,6 +441,7 @@ const NMACertChooserVtable nma_cert_chooser_vtable_file = {
 	.init = init,
 
 	.set_title = set_title,
+	.set_folder = set_folder,
 	.set_flags = set_flags,
 
 	.set_cert_uri = set_cert_uri,
--- a/src/nma-pkcs11-cert-chooser.c
+++ b/src/nma-pkcs11-cert-chooser.c
@@ -354,6 +354,15 @@ show_toggled_cb (GtkCheckButton *button, gpointer user_data)
 		gtk_entry_set_visibility (GTK_ENTRY (priv->key_password), active);
 }
 
+static void
+set_folder (NMACertChooser *cert_chooser, const gchar *folder)
+{
+	NMAPkcs11CertChooserPrivate *priv = NMA_PKCS11_CERT_CHOOSER_GET_PRIVATE (cert_chooser);
+
+	if (folder)
+		gtk_file_chooser_set_current_folder (GTK_FILE_CHOOSER (priv->cert_button), folder);
+}
+
 static void
 set_title (NMACertChooser *cert_chooser, const gchar *title)
 {
@@ -536,6 +553,7 @@ const NMACertChooserVtable nma_cert_chooser_vtable_pkcs11 = {
 	.init = init,
 
 	.set_title = set_title,
+	.set_folder = set_folder,
 	.set_flags = set_flags,
 	.set_cert_uri = set_cert_uri,
 	.get_cert_uri = get_cert_uri,
--- a/shared/nm-default.h
+++ b/shared/nm-default.h
@@ -52,6 +52,9 @@
 
 #include <gtk/gtk.h>
 
+#include <stdlib.h>
+#define DEFAULT_CERTS_DIR_ENV "DEFAULT_CERTS_DIR"
+
 /*****************************************************************************/
 
 #if !((NETWORKMANAGER_COMPILATION) & NM_NETWORKMANAGER_COMPILATION_LIB_LEGACY)
--- a/src/nma-cert-chooser-private.h
+++ b/src/nma-cert-chooser-private.h
@@ -99,6 +99,7 @@ struct _NMACertChooserClass {
  *   password if one is present.
  * @set_title: Setup the title property
  * @set_flags: Setup the flags property
+ * @set_folder: Setup the folder property
  */
 struct _NMACertChooserVtable {
 	void                 (*init)                         (NMACertChooser *cert_chooser);
@@ -147,6 +148,8 @@ struct _NMACertChooserVtable {
 	                                                      const gchar *title);
 	void         (*set_flags)                            (NMACertChooser *cert_chooser,
 	                                                      NMACertChooserFlags flags);
+	void         (*set_folder)                           (NMACertChooser *cert_chooser,
+	                                                      const gchar *folder);
 };
 
 extern const NMACertChooserVtable nma_cert_chooser_vtable_file;
