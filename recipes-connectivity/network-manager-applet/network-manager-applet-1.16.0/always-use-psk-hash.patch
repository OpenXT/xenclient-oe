#OpenXT:Use WPA-PSK mechanism to authenticate on a WLAN connection.
--- a/configure.ac
+++ b/configure.ac
@@ -120,6 +120,10 @@ else
     AC_DEFINE_UNQUOTED([MOBILE_BROADBAND_PROVIDER_INFO_DATABASE],["$prefix/share/mobile-broadband-provider-info/serviceproviders.xml"],[Mobile Broadband Service Provider Information Database location])
 fi
 
+dnl Add libcrypto for PKCS5_PBKDF2_HMAC_SHA1
+dnl OpenXT patch always-use-psk-hash.patch
+PKG_CHECK_MODULES(OPENSSL, libcrypto libssl,, AC_MSG_ERROR([openssl cannot be found.]))
+
 dnl
 dnl API documentation
 dnl
--- a/src/wireless-security/ws-wpa-psk.c
+++ b/src/wireless-security/ws-wpa-psk.c
@@ -29,6 +29,7 @@
 #include "helpers.h"
 #include "nma-ui-utils.h"
 #include "utils.h"
+#include <openssl/evp.h>
 
 #define WPA_PMK_LEN 32
 
@@ -104,6 +105,17 @@ add_to_size_group (WirelessSecurity *par
 	gtk_size_group_add_widget (group, widget);
 }
 
+//adapted from stackoverflow.com/a/22795472
+static void
+PBKDF2_HMAC_SHA_1nat_string (const char* pass, const char* salt, int iterations, unsigned int outputBytes, char* hexResult)
+{
+	unsigned int i;
+	unsigned char digest[outputBytes];
+	PKCS5_PBKDF2_HMAC_SHA1 (pass, strlen (pass), (const unsigned char*) salt, strlen (salt), iterations, outputBytes, digest);
+	for (i = 0; i < sizeof (digest); i++)
+		snprintf (hexResult + (i * 2), 3, "%02x", digest[i]);
+}
+
 static void
 fill_connection (WirelessSecurity *parent, NMConnection *connection)
 {
@@ -130,6 +142,18 @@ fill_connection (WirelessSecurity *paren
 	widget = GTK_WIDGET (gtk_builder_get_object (parent->builder, "wpa_psk_entry"));
 	passwd_entry = widget;
 	key = gtk_entry_get_text (GTK_ENTRY (widget));
+
+	if (strlen (key) < 64) {
+		char keyHash[64 + 1];
+		const GByteArray *ssid = nm_setting_wireless_get_ssid (s_wireless);
+		GString *ssidNullTerminated = g_string_new_len ((const gchar *)ssid->data, ssid->len);
+
+		PBKDF2_HMAC_SHA_1nat_string (key, ssidNullTerminated->str, 4096, 32, keyHash);
+		key = keyHash;
+
+		g_string_free (ssidNullTerminated, TRUE);
+	}
+
 	g_object_set (s_wireless_sec, NM_SETTING_WIRELESS_SECURITY_PSK, key, NULL);
 
 	/* Save PSK_FLAGS to the connection */
--- a/Makefile.am
+++ b/Makefile.am
@@ -298,12 +298,14 @@ src_wireless_security_libwireless_securi
 	"-I$(srcdir)/src/libnma" \
 	-Isrc/libnma \
 	$(GTK3_CFLAGS) \
-	$(LIBNM_CFLAGS)
+	$(LIBNM_CFLAGS) \
+	$(OPENSSL_CFLAGS)
 
 src_wireless_security_libwireless_security_libnm_la_LIBADD = \
 	src/utils/libutils-libnm.la \
 	$(GTK3_LIBS) \
-	$(LIBNM_LIBS)
+	$(LIBNM_LIBS) \
+	$(OPENSSL_LIBS)
 
 $(src_wireless_security_libwireless_security_libnm_la_OBJECTS): $(wireless_security_h_gen)
 
@@ -325,12 +327,14 @@ src_wireless_security_libwireless_securi
 	"-I$(srcdir)/src/utils" \
 	"-I$(srcdir)/src/libnma" \
 	-Isrc/libnma \
-	$(LIBNM_GLIB_CFLAGS)
+	$(LIBNM_GLIB_CFLAGS) \
+	$(OPENSSL_CFLAGS)
 
 src_wireless_security_libwireless_security_libnm_glib_la_LIBADD = \
 	src/utils/libutils-libnm-glib.la \
 	$(GTK3_LIBS) \
-	$(LIBNM_GLIB_LIBS)
+	$(LIBNM_GLIB_LIBS) \
+	$(OPENSSL_LIBS)
 
 $(src_wireless_security_libwireless_security_libnm_glib_la_OBJECTS): $(wireless_security_h_gen)
 
@@ -422,13 +426,15 @@ src_libnm_gtk_libnm_gtk_la_CFLAGS = \
 	-Isrc/libnma \
 	$(GTK3_CFLAGS) \
 	$(LIBNM_GLIB_CFLAGS) \
-	$(GUDEV_CFLAGS)
+	$(GUDEV_CFLAGS) \
+	$(OPENSSL_CFLAGS)
 
 src_libnm_gtk_libnm_gtk_la_LIBADD = \
 	src/wireless-security/libwireless-security-libnm-glib.la \
 	$(GTK3_LIBS) \
 	$(LIBNM_GLIB_LIBS) \
-	$(GUDEV_LIBS)
+	$(GUDEV_LIBS) \
+	$(OPENSSL_LIBS)
 
 EXTRA_src_libnm_gtk_libnm_gtk_la_DEPENDENCIES = src/libnm-gtk/libnm-gtk.ver
 
