#OpenXT:
#       * Disables providing control of ethernet connection, which basically prevents
#       eth0 to be a connection by itself rather than being bridged.
#
#       * Disables submenu for ethernet connection which provides connection metadata.
--- a/src/applet-device-ethernet.c
+++ b/src/applet-device-ethernet.c
@@ -35,29 +35,9 @@ ethernet_new_auto_connection (NMDevice *
                               AppletNewAutoConnectionCallback callback,
                               gpointer callback_data)
 {
-	NMConnection *connection;
-	NMSettingWired *s_wired = NULL;
-	NMSettingConnection *s_con;
-	char *uuid;
-
-	connection = nm_simple_connection_new ();
-
-	s_wired = NM_SETTING_WIRED (nm_setting_wired_new ());
-	nm_connection_add_setting (connection, NM_SETTING (s_wired));
-
-	s_con = NM_SETTING_CONNECTION (nm_setting_connection_new ());
-	uuid = nm_utils_uuid_generate ();
-	g_object_set (s_con,
-	              NM_SETTING_CONNECTION_ID, DEFAULT_ETHERNET_NAME,
-	              NM_SETTING_CONNECTION_TYPE, NM_SETTING_WIRED_SETTING_NAME,
-	              NM_SETTING_CONNECTION_AUTOCONNECT, TRUE,
-	              NM_SETTING_CONNECTION_UUID, uuid,
-	              NULL);
-	g_free (uuid);
-
-	nm_connection_add_setting (connection, NM_SETTING (s_con));
-
-	(*callback) (connection, TRUE, FALSE, callback_data);
+	/* OXT: Don't create and add AUTO connection as this will prevent
+	 * ethernet devices from being a bridged connection.
+	 */
 	return TRUE;
 }
 
@@ -118,8 +98,6 @@ ethernet_add_menu_item (NMDevice *device
 
 		if (connections->len)
 			applet_add_connection_items (device, connections, carrier, active, NMA_ADD_INACTIVE, menu, applet);
-		else
-			applet_add_default_connection_item (device, DEFAULT_ETHERNET_NAME, carrier, menu, applet);
 	}
 }
 
--- a/src/applet.c
+++ b/src/applet.c
@@ -1366,10 +1366,8 @@ nma_menu_device_get_menu_item (NMDevice
 		break;
 	}
 
-	if (!managed) {
-		item = gtk_menu_item_new_with_label (_("device not managed"));
-		gtk_widget_set_sensitive (item, FALSE);
-	}
+	if (!managed)
+		return NULL;
 
 	return item;
 }
@@ -1385,7 +1383,8 @@ add_device_items (NMDeviceType type, con
 	for (i = 0; all_devices && (i < all_devices->len); i++) {
 		NMDevice *device = all_devices->pdata[i];
 
-		if (nm_device_get_device_type (device) == type) {
+		if (nm_device_get_device_type (device) == type &&
+		    nm_device_get_state (device) != NM_DEVICE_STATE_UNMANAGED ) {
 			n_devices++;
 			devices = g_slist_prepend (devices, device);
 		}
