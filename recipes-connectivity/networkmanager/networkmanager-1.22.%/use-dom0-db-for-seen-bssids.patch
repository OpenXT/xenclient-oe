#OpenXT:Seen BSSIDs are populated in database for the purpose of saving them on boot.
#       Reloading of these seen-bssids is done by network-slave on start up.
--- a/src/settings/nm-settings-connection.c
+++ b/src/settings/nm-settings-connection.c
@@ -19,6 +19,8 @@
  * Copyright 2008 - 2014 Red Hat, Inc.
  */
 
+#include <errno.h>
+#include <sys/wait.h>
 #include "nm-default.h"
 
 #include "nm-settings-connection.h"
@@ -2491,6 +2497,26 @@ nm_settings_connection_has_seen_bssid (N
 	return !!g_hash_table_lookup (NM_SETTINGS_CONNECTION_GET_PRIVATE (self)->seen_bssids, bssid);
 }
 
+void
+update_seen_bssids_db (void)
+{
+	char *argv[6] = { "/usr/bin/nm_sync.sh", "-n", "seen-bssids", "-w", NMSTATEDIR "/seen-bssids", NULL };
+	int err, stat_loc;
+
+	err = fork();
+	if (err == -1) {
+		g_warning("%s.%d: cannot fork to nm_sync.sh: %d", __FILE__, __LINE__, errno);
+	} else if (err) {
+		while ((waitpid(err, &stat_loc, 0) == -1) && (errno == EINTR))
+			;
+		err = WEXITSTATUS(stat_loc);
+		if (err)
+			g_warning("%s.%d: nm_sync.sh failed with code: %d", __FILE__, __LINE__, err);
+	} else {
+		_exit(execvp(argv[0], argv));
+	}
+}
+
 /**
  * nm_settings_connection_add_seen_bssid:
  * @self: the #NMSettingsConnection
@@ -2547,6 +2573,7 @@ nm_settings_connection_add_seen_bssid (N
		priv->seen_bssids = _seen_bssids_hash_new ();

	g_hash_table_add (priv->seen_bssids, g_strdup (seen_bssid));
+	update_seen_bssids_db ();

	if (!priv->kf_db_seen_bssids)
		return;
--- a/src/settings/nm-settings-connection.h
+++ b/src/settings/nm-settings-connection.h
@@ -371,5 +371,6 @@ void _nm_settings_connection_emit_signal_updated_internal (NMSettingsConnection
                                                            NMSettingsConnectionUpdateReason update_reason);
 
 void _nm_settings_connection_cleanup_after_remove (NMSettingsConnection *self);
+void update_seen_bssids_db ();
 
 #endif /* __NETWORKMANAGER_SETTINGS_CONNECTION_H__ */
--- a/src/settings/nm-settings.c
+++ b/src/settings/nm-settings.c
@@ -1205,6 +1205,7 @@ _connection_changed_delete (NMSettings *self,
 
 	nm_key_file_db_remove_key (priv->kf_db_timestamps, uuid);
 	nm_key_file_db_remove_key (priv->kf_db_seen_bssids, uuid);
+	update_seen_bssids_db ();
 
 	if (   !priv->started
 	    || priv->startup_complete_idx)
