diff --git a/configure.ac b/configure.ac
index 6380828..790cca0 100644
--- a/configure.ac
+++ b/configure.ac
@@ -156,6 +156,7 @@ AC_ARG_ENABLE(libaudit,AS_HELP_STRING([--enable-libaudit],[build audit daemon su
 AC_ARG_ENABLE(inotify, AS_HELP_STRING([--enable-inotify],[build with inotify support (linux only)]),enable_inotify=$enableval,enable_inotify=auto)
 AC_ARG_ENABLE(kqueue, AS_HELP_STRING([--enable-kqueue],[build with kqueue support]),enable_kqueue=$enableval,enable_kqueue=auto)
 AC_ARG_ENABLE(console-owner-file, AS_HELP_STRING([--enable-console-owner-file],[enable console owner file]),enable_console_owner_file=$enableval,enable_console_owner_file=auto)
+AC_ARG_ENABLE(v4v, AS_HELP_STRING([--enable-v4v],[build with v4v support]),enable_v4v=$enableval,enable_v4v=auto)
 AC_ARG_ENABLE(launchd, AS_HELP_STRING([--enable-launchd],[build with launchd auto-launch support]),enable_launchd=$enableval,enable_launchd=auto)
 AC_ARG_ENABLE(systemd, AS_HELP_STRING([--enable-systemd],[build with systemd at_console support]),enable_systemd=$enableval,enable_systemd=auto)
 
@@ -1247,6 +1248,23 @@ AC_DEFINE_UNQUOTED([DBUS_DEFAULT_MESSAGE_UNIX_FDS],
   [Default for dbus_connection_get_max_message_unix_fds()])
 AC_SUBST([DEFAULT_MESSAGE_UNIX_FDS])
 
+# v4v checks
+if test x$enable_v4v = xno ; then
+    have_v4v=no
+else
+    AC_CHECK_HEADER(libv4v.h, have_v4v=yes, have_v4v=no)
+
+    if test x$enable_v4v = xyes -a x$have_v4v = xno; then
+        AC_MSG_ERROR(v4v support explicitly enabled but not available)
+    fi
+fi
+
+if test x$have_v4v = xyes ; then
+    AC_DEFINE(HAVE_V4V,1,[v4v support])
+fi
+
+AM_CONDITIONAL(HAVE_V4V, test x$have_v4v = xyes)
+
 if test -z "$with_dbus_default_reply_timeout" ; then
     DBUS_DEFAULT_REPLY_TIMEOUT=25000
 else
@@ -1824,6 +1842,7 @@ echo "
         Building X11 code:        ${have_x11}
         Building Doxygen docs:    ${enable_doxygen_docs}
         Building XML docs:        ${enable_xml_docs}
+        Building v4v support:     ${enable_v4v}
         Building launchd support: ${have_launchd}
         Init scripts style:       ${with_init_scripts}
         Default reply timeout:    ${DBUS_DEFAULT_REPLY_TIMEOUT}
diff --git a/dbus/dbus-sysdeps-unix.c b/dbus/dbus-sysdeps-unix.c
index e81e52c..c608541 100644
--- a/dbus/dbus-sysdeps-unix.c
+++ b/dbus/dbus-sysdeps-unix.c
@@ -82,6 +82,10 @@
 
 #include "sd-daemon.h"
 
+#ifdef HAVE_V4V
+#include <libv4v.h>
+#endif
+
 #if !DBUS_USE_SYNC
 #include <pthread.h>
 #endif
@@ -1243,6 +1247,10 @@ _dbus_connect_tcp_socket_with_nonce (const char     *host,
     hints.ai_family = AF_INET;
   else if (!strcmp(family, "ipv6"))
     hints.ai_family = AF_INET6;
+#ifdef HAVE_V4V
+  else if (!strcmp(family, "v4v"))
+    hints.ai_family = AF_UNSPEC;
+#endif
   else
     {
       dbus_set_error (error,
@@ -1266,6 +1274,11 @@ _dbus_connect_tcp_socket_with_nonce (const char     *host,
   tmp = ai;
   while (tmp)
     {
+#ifdef HAVE_V4V
+      if (family && !strcmp(family, "v4v"))
+        tmp->ai_family = PF_XENV4V;
+#endif
+
       if (!_dbus_open_socket (&fd, tmp->ai_family, SOCK_STREAM, 0, error))
         {
           freeaddrinfo(ai);
@@ -1361,6 +1374,10 @@ _dbus_listen_tcp_socket (const char     *host,
     hints.ai_family = AF_INET;
   else if (!strcmp(family, "ipv6"))
     hints.ai_family = AF_INET6;
+#ifdef HAVE_V4V
+  else if (!strcmp(family, "v4v"))
+    hints.ai_family = AF_UNSPEC;
+#endif
   else
     {
       dbus_set_error (error,
@@ -1388,6 +1405,12 @@ _dbus_listen_tcp_socket (const char     *host,
   while (tmp)
     {
       int fd = -1, *newlisten_fd;
+
+#ifdef HAVE_V4V
+      if (family && !strcmp(family, "v4v"))
+        tmp->ai_family = PF_XENV4V;
+#endif
+
       if (!_dbus_open_socket (&fd, tmp->ai_family, SOCK_STREAM, 0, error))
         {
           _DBUS_ASSERT_ERROR_IS_SET(error);
