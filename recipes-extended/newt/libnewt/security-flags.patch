Use CFLAGS to build test programs

This is needed when building with security_flags since otherwise you get
errors like:
ld: showchars.o: relocation R_X86_64_32 against `.rodata.str1.8' can not be used when making a PIE object; recompile with -fPIE

Signed-off-by: Jason Andryuk <jandryuk@gmail.com>

--- a/Makefile.in
+++ b/Makefile.in
@@ -69,19 +69,19 @@ endif
 all:	$(TARGET) _snack.$(SOEXT)
 
 test:	test.o $(LIBNEWT)
-	$(CC) -g -o test test.o $(LIBNEWT) $(LDFLAGS) $(LIBS)
+	$(CC) $(CFLAGS) -g -o test test.o $(LIBNEWT) $(LDFLAGS) $(LIBS)
 
 testgrid:	testgrid.o $(LIBNEWT)
-	$(CC) -g -o testgrid testgrid.o $(LIBNEWT) $(LDFLAGS) $(LIBS)
+	$(CC) $(CFLAGS) -g -o testgrid testgrid.o $(LIBNEWT) $(LDFLAGS) $(LIBS)
 
 testtree:	testtree.o $(LIBNEWT)
-	$(CC) -g -o testtree testtree.o $(LIBNEWT) $(LDFLAGS) $(LIBS)
+	$(CC) $(CFLAGS) -g -o testtree testtree.o $(LIBNEWT) $(LDFLAGS) $(LIBS)
 
 showchars:	showchars.o $(LIBNEWT)
-	$(CC) -g -o showchars showchars.o $(LIBNEWT) $(LDFLAGS) $(LIBS)
+	$(CC) $(CFLAGS) -g -o showchars showchars.o $(LIBNEWT) $(LDFLAGS) $(LIBS)
 
 showkey:	showkey.o $(LIBNEWT)
-	$(CC) -g -o showkey showkey.o $(LIBNEWT) $(LDFLAGS) $(LIBS)
+	$(CC) $(CFLAGS) -g -o showkey showkey.o $(LIBNEWT) $(LDFLAGS) $(LIBS)
 
 _snack.$(SOEXT):   snack.c $(LIBNEWTSH)
 	@[ -n "$(PYTHONVERS)" ] && for ver in $(PYTHONVERS); do \
