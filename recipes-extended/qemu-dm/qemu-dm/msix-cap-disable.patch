################################################################################
SHORT DESCRIPTION: 
################################################################################
Add a compilation flag to hide MSI-X capability from passed through PCI devices
configuration space.

################################################################################
LONG DESCRIPTION: 
################################################################################
Currently we do not support MSI-X setup for PCI devices passed through.

Although the specification mentions that PCI-e devices might implement only
MSI-X there is not a lot of those and mostly none that we have encountered yet.
Considering that, we force devices to use MSI by hiding the MSI-X capability.

################################################################################
CHANGELOG 
################################################################################
Ported to QEMU 2.6.2: Ross Philipson, philipsonr@ainfosec.com, 10/13/2016
Port & documentation: Eric Chanudet, chanudete@ainfosec.com, 17/03/2015
Intial Commit: James McKenzie, james.mckenzie@bromium.com, 16/03/2015

################################################################################
REMOVAL 
################################################################################
This patch can be removed from QEMU once MSI-X setup has been fixed.

################################################################################
UPSTREAM PLAN 
################################################################################
There is no plan to upstream this patch, it is an OpenXT workaround.

################################################################################
INTERNAL DEPENDENCIES 
################################################################################
None

################################################################################
PATCHES 
################################################################################
--- a/configure
+++ b/configure
@@ -455,6 +455,7 @@ surfman="no"
 stubdom="no"
 atapipt="no"
 atapiptargo="no"
+xenpt_hide_msix="yes"
 glusterfs_xlator_opt="no"
 glusterfs_discard="no"
 glusterfs_fallocate="no"
@@ -1385,6 +1386,10 @@ for opt do
   ;;
   --disable-surfman) surfman="no"
   ;;
+  --enable-xenpt-msix) xenpt_hide_msix="no"
+  ;;
+  --disable-xenpt-msix) xenpt_hide_msix="yes"
+  ;;
   --disable-gtk) gtk="no"
   ;;
   --enable-gtk) gtk="yes"
@@ -6146,6 +6151,7 @@ echo "OpenXT stubdomain support $stubdom
 echo "ATAPI PT support  $atapipt"
 echo "ATAPI PT Argo support  $atapiptargo"
 echo "Surfman support   $surfman"
+echo "Hide MSI-X cap with Xen PCI pass through $xenpt_hide_msix"
 echo "TPM support       $tpm"
 echo "libssh2 support   $libssh2"
 echo "TPM passthrough   $tpm_passthrough"
@@ -6832,6 +6838,10 @@ if test "$surfman" = "yes"; then
   echo "CONFIG_SURFMAN=y" >> $config_host_mak
 fi
 
+if test "$xenpt_hide_msix" = "yes"; then
+  echo "CONFIG_XENPT_HIDE_MSIX=y" >> $config_host_mak
+fi
+
 if test "$tpm" = "yes"; then
   echo 'CONFIG_TPM=$(CONFIG_SOFTMMU)' >> $config_host_mak
   # TPM passthrough support?
--- a/hw/xen/xen_pt_config_init.c
+++ b/hw/xen/xen_pt_config_init.c
@@ -1456,6 +1456,7 @@ static XenPTRegInfo xen_pt_emu_reg_msi[]
  * MSI-X Capability
  */
 
+#ifndef CONFIG_XENPT_HIDE_MSIX
 /* Message Control register for MSI-X */
 static int xen_pt_msixctrl_reg_init(XenPCIPassthroughState *s,
                                     XenPTRegInfo *reg, uint32_t real_offset,
@@ -1546,6 +1547,7 @@ static XenPTRegInfo xen_pt_emu_reg_msix[
         .size = 0,
     },
 };
+#endif  /* CONFIG_XENPT_HIDE_MSIX */
 
 static XenPTRegInfo xen_pt_emu_reg_igd_opregion[] = {
     /* Intel IGFX OpRegion reg */
@@ -1682,6 +1684,8 @@ static int xen_pt_msi_size_init(XenPCIPa
     *size = msi_size;
     return 0;
 }
+
+#ifndef CONFIG_XENPT_HIDE_MSIX
 /* get MSI-X Capability Structure register group size */
 static int xen_pt_msix_size_init(XenPCIPassthroughState *s,
                                  const XenPTRegGroupInfo *grp_reg,
@@ -1699,7 +1703,7 @@ static int xen_pt_msix_size_init(XenPCIP
     *size = grp_reg->grp_size;
     return 0;
 }
-
+#endif  /* CONFIG_XENPT_HIDE_MSIX */
 
 static const XenPTRegGroupInfo xen_pt_emu_reg_grps[] = {
     /* Header Type0 reg group */
@@ -1792,6 +1796,7 @@ static const XenPTRegGroupInfo xen_pt_em
         .size_init   = xen_pt_pcie_size_init,
         .emu_regs = xen_pt_emu_reg_pcie,
     },
+#ifndef CONFIG_XENPT_HIDE_MSIX
     /* MSI-X Capability Structure reg group */
     {
         .grp_id      = PCI_CAP_ID_MSIX,
@@ -1800,6 +1805,7 @@ static const XenPTRegGroupInfo xen_pt_em
         .size_init   = xen_pt_msix_size_init,
         .emu_regs = xen_pt_emu_reg_msix,
     },
+#endif /* CONFIG_XENPT_HIDE_MSIX */
     /* Intel IGD Opregion group */
     {
         .grp_id      = XEN_PCI_INTEL_OPREGION,
