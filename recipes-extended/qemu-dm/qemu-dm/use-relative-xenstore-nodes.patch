################################################################################
SHORT DESCRIPTION:
################################################################################
Use relative paths instead of absolute ones for xenstore device model nodes.

################################################################################
LONG DESCRIPTION:
################################################################################
Qemu seems to assume the device model is running in dom0, and therefore harcodes
xenstore device model paths to /local/domain/0.
This doesn't make sense when using a stubdomain.
When a the xenstore path doesn't start with a slash, xenstore automatically
prepends it with "/local/domain/<domid>", where <domid> is the caller domid.
So this patch effectively doesn't change anything for qemu instances running in
dom0, but fixes the paths for other domains.

################################################################################
CHANGELOG
################################################################################
Author: Jed Lejosne, lejosnej@ainfosec.com, 11/17/2016

################################################################################
REMOVAL
################################################################################
If it gets upstreamed.

################################################################################
UPSTREAM PLAN
################################################################################
Yes, to this day, upstream Qemu still uses those bogus absolute paths.

################################################################################
INTERNAL DEPENDENCIES
################################################################################
libxl.
xenvm has been written to work around this bug and won't work with that fix in.

################################################################################
PATCHES
################################################################################
--- a/hw/i386/xen/xen-hvm.c
+++ b/hw/i386/xen/xen-hvm.c
@@ -331,14 +331,14 @@ static int xen_save_physmap(XenIOState *
     char path[80], value[17];
 
     snprintf(path, sizeof(path),
-            "/local/domain/0/device-model/%d/physmap/%"PRIx64"/start_addr",
+            "device-model/%d/physmap/%"PRIx64"/start_addr",
             xen_domid, (uint64_t)physmap->phys_offset);
     snprintf(value, sizeof(value), "%"PRIx64, (uint64_t)physmap->start_addr);
     if (!xs_write(state->xenstore, 0, path, value, strlen(value))) {
         return -1;
     }
     snprintf(path, sizeof(path),
-            "/local/domain/0/device-model/%d/physmap/%"PRIx64"/size",
+            "device-model/%d/physmap/%"PRIx64"/size",
             xen_domid, (uint64_t)physmap->phys_offset);
     snprintf(value, sizeof(value), "%"PRIx64, (uint64_t)physmap->size);
     if (!xs_write(state->xenstore, 0, path, value, strlen(value))) {
@@ -346,7 +346,7 @@ static int xen_save_physmap(XenIOState *
     }
     if (physmap->name) {
         snprintf(path, sizeof(path),
-                "/local/domain/0/device-model/%d/physmap/%"PRIx64"/name",
+                "device-model/%d/physmap/%"PRIx64"/name",
                 xen_domid, (uint64_t)physmap->phys_offset);
         if (!xs_write(state->xenstore, 0, path,
                       physmap->name, strlen(physmap->name))) {
@@ -1309,7 +1309,7 @@ static void xen_read_physmap(XenIOState
     char **entries = NULL;
 
     snprintf(path, sizeof(path),
-            "/local/domain/0/device-model/%d/physmap", xen_domid);
+            "device-model/%d/physmap", xen_domid);
     entries = xs_directory(state->xenstore, 0, path, &num);
     if (entries == NULL)
         return;
@@ -1318,7 +1318,7 @@ static void xen_read_physmap(XenIOState
         physmap = g_malloc(sizeof (XenPhysmap));
         physmap->phys_offset = strtoull(entries[i], NULL, 16);
         snprintf(path, sizeof(path),
-                "/local/domain/0/device-model/%d/physmap/%s/start_addr",
+                "device-model/%d/physmap/%s/start_addr",
                 xen_domid, entries[i]);
         value = xs_read(state->xenstore, 0, path, &len);
         if (value == NULL) {
@@ -1329,7 +1329,7 @@ static void xen_read_physmap(XenIOState
         free(value);
 
         snprintf(path, sizeof(path),
-                "/local/domain/0/device-model/%d/physmap/%s/size",
+                "device-model/%d/physmap/%s/size",
                 xen_domid, entries[i]);
         value = xs_read(state->xenstore, 0, path, &len);
         if (value == NULL) {
@@ -1340,7 +1340,7 @@ static void xen_read_physmap(XenIOState
         free(value);
 
         snprintf(path, sizeof(path),
-                "/local/domain/0/device-model/%d/physmap/%s/name",
+                "device-model/%d/physmap/%s/name",
                 xen_domid, entries[i]);
         physmap->name = xs_read(state->xenstore, 0, path, &len);
 
