################################################################################
SHORT DESCRIPTION: 
################################################################################
Add an IO port range to cache information VGABIOS would normaly store in the
BDA and access during VBE calls.

################################################################################
LONG DESCRIPTION: 
################################################################################
Add an IO range 0x3802-0x383F to cache VGABIOS data in QEMU memory. Using IO
ports directly makes it easier to implement in VGABIOS.

The following registers work in conjunction with the vga-shadow-bda.patch.
VGABIOS will assume to access the following values at their given offsets:

CONTROL_FLAGS 0x3802 /* word */
RESERVED      0x3804 /* word */
ALIGN         0x3806 /* byte */
CURRENT_MODE  0x3807 /* byte */
NB_COLS       0x3808 /* word */
PAGE_SIZE     0x380A /* word */
CURRENT_START 0x380C /* word */
CURSOR_POS    0x380E /* 8 word ports - 16 bytes */
CURSOR_TYPE   0x381E /* word */
CHAR_HEIGHT   0x3820 /* word */
CRTC_ADDRESS  0x3822 /* word */
CURRENT_PAGE  0x3824 /* byte */
CURRENT_MSR   0x3825 /* byte */
CURRENT_PAL   0x3826 /* byte */
NB_ROWS       0x3827 /* byte */
VIDEO_CTL     0x3828 /* byte */
SWITCHES      0x3829 /* byte */
MODESET_CTL   0x382A /* byte */
DCC_INDEX     0x382B /* byte */
VS_POINTER    0x382C /* 2 word ports - 4 bytes */
VBE_FLAG      0x3830 /* word */
VBE_MODE      0x3832 /* word */
VBE_POWER     0x3834 /* byte */

The following 2 registers work in conjunction with the vbe-xenvesa.patch and
are used to hold pointers to the VBE support structure for xenvesa:

VBE_XVTADDR   0x383A /* word */
VBE_XVTSEG    0x383C /* word */

################################################################################
CHANGELOG 
################################################################################
Documented: Eric Chanudet, chanudete@ainfosec.com, 18/03/2015
Port to qemu 1.4.0: Eric Chanudet, chanudete@ainfosec.com, 01/03/2015
Original Author: Ross Philipson, ross.philipson@citrix.com
Port to QEMU 2.6.2: Ross Philipson, philipsonr@ainfosec.com, 10/13/2016

################################################################################
REMOVAL 
################################################################################
VGABIOS currently relies on this patch to access data during VBE calls.
Removing that patch requires the removal of the related patch in VGABIOS.

################################################################################
UPSTREAM PLAN 
################################################################################
This is an OpenXT work-around. There is no plan to upstream this patch.

################################################################################
INTERNAL DEPENDENCIES 
################################################################################
Implemented by VGABIOS: vga-shadow-bda.patch.
Applied after vga-spinlock.patch. 

################################################################################
PATCHES 
################################################################################
--- a/hw/display/vga.c
+++ b/hw/display/vga.c
@@ -2341,8 +2341,22 @@ static void spinlock_ioport_write(void *
     }
 }
 
+static uint32_t shadow_bda_ioport_read(void *opaque, uint32_t addr)
+{
+    VGACommonState *s = opaque;
+    return s->shadow_bda[addr - VGA_OXT_SHADOW_BDA_BASE];
+}
+
+static void shadow_bda_ioport_write(void *opaque, uint32_t addr, uint32_t val)
+{
+    VGACommonState *s = opaque;
+    s->shadow_bda[addr - VGA_OXT_SHADOW_BDA_BASE] = val;
+}
+
 static const MemoryRegionPortio oxt_portio_list[] = {
     { 0, 1, 2, .read = spinlock_ioport_read, .write = spinlock_ioport_write }, /* 0x3800 */
+    { 0x00, VGA_OXT_SHADOW_BDA_SIZE, 1, .read = shadow_bda_ioport_read,
+                                        .write = shadow_bda_ioport_write }, /* 0x3802-0x383F */
     PORTIO_END_OF_LIST(),
 };
 
--- a/hw/display/vga_int.h
+++ b/hw/display/vga_int.h
@@ -39,6 +39,8 @@
 
 #define VGA_OXT_BASE                   0x3800
 #define VGA_OXT_SPINLOCK               VGA_OXT_BASE
+#define VGA_OXT_SHADOW_BDA_BASE        (VGA_OXT_BASE + 0x2)
+#define VGA_OXT_SHADOW_BDA_SIZE        0x3E
 
 struct vga_precise_retrace {
     int64_t ticks_per_char;
@@ -155,6 +157,8 @@ typedef struct VGACommonState {
     uint8_t is_vbe_vmstate;
     /* ioport spinlock */
     int locked;
+    /* shadow BDA */
+    uint8_t shadow_bda[VGA_OXT_SHADOW_BDA_SIZE];
 } VGACommonState;
 
 static inline int c6_to_8(int v)
