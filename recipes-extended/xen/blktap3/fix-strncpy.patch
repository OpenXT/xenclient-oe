--- a/lvm/lvm-util.c
+++ b/lvm/lvm-util.c
@@ -68,7 +68,7 @@ lvm_copy_name(char *dst, const char *src
 	if (strnlen(src, size) == size)
 		return -ENAMETOOLONG;
 
-	safe_strncpy(dst, src, size);
+	strncpy(dst, src, size);
 	return 0;
 }
 
@@ -102,7 +102,7 @@ lvm_parse_pv(struct vg *vg, const char *
 	if (i == pvs)
 		return -ENOMEM;
 
-	err = lvm_copy_name(pv->name, name, sizeof(pv->name) - 1);
+	err = lvm_copy_name(pv->name, name, sizeof(pv->name));
 	if (err)
 		return err;
 
@@ -286,7 +286,7 @@ lvm_scan_lvs(struct vg *vg)
 		lv->segments      = segs;
 		lv->first_segment = seg;
 
-		err = lvm_copy_name(lv->name, name, sizeof(lv->name) - 1);
+		err = lvm_copy_name(lv->name, name, sizeof(lv->name));
 		if (err)
 			goto out;
 		err = -EINVAL;
--- a/vhd/lib/libvhd.c
+++ b/vhd/lib/libvhd.c
@@ -2879,7 +2879,10 @@ vhd_initialize_footer(vhd_context_t *ctx
 	ctx->footer.type         = type;
 	ctx->footer.saved        = 0;
 	ctx->footer.data_offset  = 0xFFFFFFFFFFFFFFFFULL;
-	safe_strncpy(ctx->footer.crtr_app, "tap", sizeof(ctx->footer.crtr_app));
+	ctx->footer.crtr_app[0]  = 't';
+	ctx->footer.crtr_app[1]  = 'a';
+	ctx->footer.crtr_app[2]  = 'p';
+	ctx->footer.crtr_app[3]  = '\0';
 	uuid_generate(ctx->footer.uuid);
 }
 
--- a/drivers/block-crypto.c
+++ b/drivers/block-crypto.c
@@ -42,6 +42,7 @@
 #include "libvhd.h"
 #include "tapdisk.h"
 #include "vhd-util.h"
+#include "util.h"
 
 #include "crypto/compat-crypto-openssl.h"
 #include "crypto/xts_aes.h"
 
