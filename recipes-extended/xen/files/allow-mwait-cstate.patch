################################################################################
SHORT DESCRIPTION:
################################################################################
Allow PV guests to see the MWAIT CPU feature

################################################################################
LONG DESCRIPTION:
################################################################################
Possibly related to power reduction optimization?

################################################################################
CHANGELOG
################################################################################
Xen 4.8 uprev: Extracted from hvm-cpuid-multicore.patch as unrelated to other
functionality in that patch and then rewritten since upstream Xen CPUID code
changed significantly since Xen 4.6.

Xen 4.9 uprev: upstream reworked CPUID so the point of code change is different.

################################################################################
REMOVAL
################################################################################

################################################################################
UPSTREAM PLAN
################################################################################
Not as is. This is a targetted override rather than full integration with the
pv_featureset flag calculator.

################################################################################
INTERNAL DEPENDENCIES
################################################################################

################################################################################
PATCHES
################################################################################
--- a/xen/arch/x86/cpuid.c
+++ b/xen/arch/x86/cpuid.c
@@ -799,33 +799,36 @@ void guest_cpuid(const struct vcpu *v, u
              *
              * These leaks are retained for backwards compatibility, but
              * restricted to the hardware domains kernel only.
+             *
+             * OpenXT-specific: allow all PV domains to see MONITOR.
+             */
+
+            /*
+             * MONITOR never leaked into PV guests, as PV guests cannot
+             * use the MONITOR/MWAIT instructions.  As such, they require
+             * the feature to not being present in emulated CPUID.
+             *
+             * Modern PVOPS Linux try to be cunning and use native CPUID
+             * to see if the hardware actually supports MONITOR, and by
+             * extension, deep C states.
+             *
+             * If the feature is seen, deep-C state information is
+             * obtained from the DSDT and handed back to Xen via the
+             * XENPF_set_processor_pminfo hypercall.
+             *
+             * This mechanism is incompatible with an HVM-based hardware
+             * domain, and also with CPUID Faulting.
+             *
+             * Luckily, Xen can be just as 'cunning', and distinguish an
+             * emulated CPUID from a faulted CPUID by whether a #UD or #GP
+             * fault is currently being serviced.  Yuck...
              */
+            if ( cpu_has_monitor && regs->entry_vector == TRAP_gp_fault )
+                res->c |= cpufeat_mask(X86_FEATURE_MONITOR);
+
             if ( is_hardware_domain(d) && guest_kernel_mode(v, regs) )
             {
                 /*
-                 * MONITOR never leaked into PV guests, as PV guests cannot
-                 * use the MONITOR/MWAIT instructions.  As such, they require
-                 * the feature to not being present in emulated CPUID.
-                 *
-                 * Modern PVOPS Linux try to be cunning and use native CPUID
-                 * to see if the hardware actually supports MONITOR, and by
-                 * extension, deep C states.
-                 *
-                 * If the feature is seen, deep-C state information is
-                 * obtained from the DSDT and handed back to Xen via the
-                 * XENPF_set_processor_pminfo hypercall.
-                 *
-                 * This mechanism is incompatible with an HVM-based hardware
-                 * domain, and also with CPUID Faulting.
-                 *
-                 * Luckily, Xen can be just as 'cunning', and distinguish an
-                 * emulated CPUID from a faulted CPUID by whether a #UD or #GP
-                 * fault is currently being serviced.  Yuck...
-                 */
-                if ( cpu_has_monitor && regs->entry_vector == TRAP_gp_fault )
-                    res->c |= cpufeat_mask(X86_FEATURE_MONITOR);
-
-                /*
                  * While MONITOR never leaked into PV guests, EIST always used
                  * to.
                  *
