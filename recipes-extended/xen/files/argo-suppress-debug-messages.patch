################################################################################
SHORT DESCRIPTION: 
################################################################################
Suppress some frequently occurring argo debug messages by default. Only
print if argo DEBUG is enabled.

################################################################################
LONG DESCRIPTION: 
################################################################################

################################################################################
CHANGELOG 
################################################################################

################################################################################
REMOVAL 
################################################################################
Remove when changes are merged upstream.

################################################################################
UPSTREAM PLAN
################################################################################
This patch has been submitted upstream and is pending approval.

################################################################################
INTERNAL DEPENDENCIES 
################################################################################
None.

################################################################################
PATCHES 
################################################################################
--- a/xen/common/argo.c
+++ b/xen/common/argo.c
@@ -1465,7 +1465,7 @@ find_ring_mfns(struct domain *d, struct
     if ( ring_info->mfns )
     {
         /* Ring already existed: drop the previous mapping. */
-        gprintk(XENLOG_INFO, "argo: vm%u re-register existing ring "
+        argo_dprintk("argo: vm%u re-register existing ring "
                 "(vm%u:%x vm%u) clears mapping\n",
                 d->domain_id, ring_info->id.domain_id,
                 ring_info->id.aport, ring_info->id.partner_id);
@@ -1525,7 +1525,7 @@ find_ring_mfns(struct domain *d, struct
     {
         ASSERT(ring_info->nmfns == NPAGES_RING(len));
 
-        gprintk(XENLOG_DEBUG, "argo: vm%u ring (vm%u:%x vm%u) %p "
+        argo_dprintk("argo: vm%u ring (vm%u:%x vm%u) %p "
                 "mfn_mapping %p len %u nmfns %u\n",
                 d->domain_id, ring_info->id.domain_id,
                 ring_info->id.aport, ring_info->id.partner_id, ring_info,
@@ -1739,7 +1739,7 @@ register_ring(struct domain *currd,
         list_add(&ring_info->node,
                  &currd->argo->ring_hash[hash_index(&ring_info->id)]);
 
-        gprintk(XENLOG_DEBUG, "argo: vm%u registering ring (vm%u:%x vm%u)\n",
+        argo_dprintk("argo: vm%u registering ring (vm%u:%x vm%u)\n",
                 currd->domain_id, ring_id.domain_id, ring_id.aport,
                 ring_id.partner_id);
     }
@@ -1779,7 +1779,7 @@ register_ring(struct domain *currd,
             goto out_unlock2;
         }
 
-        gprintk(XENLOG_DEBUG,
+        argo_dprintk(
                 "argo: vm%u re-registering existing ring (vm%u:%x vm%u)\n",
                 currd->domain_id, ring_id.domain_id, ring_id.aport,
                 ring_id.partner_id);
