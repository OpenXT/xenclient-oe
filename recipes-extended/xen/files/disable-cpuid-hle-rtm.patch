################################################################################
SHORT DESCRIPTION:
################################################################################
Unbreak Haswell systems by suppressing HLE, RTM features from CPUID.

################################################################################
LONG DESCRIPTION:
################################################################################
The upgrade from Xen 4.6 to Xen 4.8 includes changes to CPUID capabilities
reported to guests, which enables exposing HLE and RTM processor features.

HLE : Hardware Lock Elision
RTM : Restricted Transactional Memory

Unfortunately these instructions explode on Haswell systems and Intel retired
them via updated microcode. However, Xen 4.8 loads the updated microcode
_after_ it performs the CPUID feature detection, which causes it to incorrectly
report HLE and RTM as available on Haswell systems and so crash any software
that tries to execute the instructions.
eg. affecting anything that links the pthreads library (eg. 'sort').

Since HLE and RTM have never been exposed to any OpenXT guests before,
this patch continues suppression of those two features.

refs:
http://www.odi.ch/weblog/posting.php?posting=690
https://bugs.gentoo.org/show_bug.cgi?id=528712

################################################################################
CHANGELOG
################################################################################
Patch written for OpenXT in Xen 4.8 uprev.

################################################################################
REMOVAL
################################################################################
Upstream Xen community is aware of the problem. A cleaner method of addressing
this will hopefully be available in a later version of Xen.

################################################################################
UPSTREAM PLAN
################################################################################
Not as is. A general CPUID flag manipulation feature would be appropriate.
CPU feature detection needs to be performed after loading CPU microcode.

################################################################################
INTERNAL DEPENDENCIES
################################################################################
None.

################################################################################
PATCHES
################################################################################

--- a/xen/arch/x86/cpu/intel.c
+++ b/xen/arch/x86/cpu/intel.c
@@ -343,6 +343,9 @@ static void init_intel(struct cpuinfo_x8
 	     ( c->cpuid_level >= 0x00000006 ) &&
 	     ( cpuid_eax(0x00000006) & (1u<<2) ) )
 		__set_bit(X86_FEATURE_ARAT, c->x86_capability);
+
+    __clear_bit(X86_FEATURE_HLE, c->x86_capability);
+    __clear_bit(X86_FEATURE_RTM, c->x86_capability);
 }
 
 static const struct cpu_dev intel_cpu_dev = {
