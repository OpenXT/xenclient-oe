################################################################################
SHORT DESCRIPTION: 
################################################################################
Pull in SEABIOS ROM from out of tree and load extra OROMs.

################################################################################
LONG DESCRIPTION: 
################################################################################
This patch allows SEABIOS to be built and pulled in from outside the Xen tree.
It also introduces a new function to layout the legacy guest firmware for the
SEABIOS ROM, the selected VGA BIOS and the Ethernet/PXE OROM.

Note the patch does not pop without being forced because it touches the
tools/firmare/Makefile file that is modified by the configure step.

################################################################################
CHANGELOG 
################################################################################

################################################################################
REMOVAL 
################################################################################

################################################################################
UPSTREAM PLAN
################################################################################
None

################################################################################
INTERNAL DEPENDENCIES 
################################################################################

################################################################################
PATCHES 
################################################################################
--- a/tools/firmware/Makefile
+++ b/tools/firmware/Makefile
@@ -12,7 +12,7 @@ DEBG_DIR := $(DESTDIR)$(DEBUG_DIR)$(XENF
 
 SUBDIRS-y :=
 SUBDIRS-$(CONFIG_OVMF) += ovmf-dir
-SUBDIRS-$(CONFIG_SEABIOS) += seabios-dir
+#SUBDIRS-$(CONFIG_SEABIOS) += seabios-dir
 SUBDIRS-$(CONFIG_ROMBIOS) += rombios
 SUBDIRS-$(CONFIG_ROMBIOS) += vgabios
 SUBDIRS-$(CONFIG_ROMBIOS) += etherboot
@@ -22,11 +22,11 @@ SUBDIRS-y += hvmloader
 LD32BIT-$(CONFIG_FreeBSD) := LD32BIT_FLAG=-melf_i386_fbsd
 
 ovmf-dir:
-	GIT=$(GIT) $(XEN_ROOT)/scripts/git-checkout.sh $(OVMF_UPSTREAM_URL) $(OVMF_UPSTREAM_REVISION) ovmf-dir
+	GIT="$(GIT)" $(XEN_ROOT)/scripts/git-checkout.sh $(OVMF_UPSTREAM_URL) $(OVMF_UPSTREAM_REVISION) ovmf-dir
 	cp ovmf-makefile ovmf-dir/Makefile;
 
 seabios-dir:
-	GIT=$(GIT) $(XEN_ROOT)/scripts/git-checkout.sh $(SEABIOS_UPSTREAM_URL) $(SEABIOS_UPSTREAM_REVISION) seabios-dir
+	GIT="$(GIT)" $(XEN_ROOT)/scripts/git-checkout.sh $(SEABIOS_UPSTREAM_URL) $(SEABIOS_UPSTREAM_REVISION) seabios-dir
 	cp seabios-config seabios-dir/.config;
 	$(MAKE) -C seabios-dir olddefconfig
 
@@ -41,7 +41,7 @@ ifeq ($(CONFIG_ROMBIOS),y)
 	false ; \
 	fi
 endif
-	$(MAKE) $(LD32BIT-y) CC=$(CC) PYTHON=$(PYTHON) subdirs-$@
+	$(MAKE) $(LD32BIT-y) CC="$(CC)" PYTHON="$(PYTHON)" subdirs-$@
 
 
 .PHONY: install
--- a/tools/firmware/hvmloader/Makefile
+++ b/tools/firmware/hvmloader/Makefile
@@ -35,7 +35,7 @@ OBJS  = hvmloader.o mp_tables.o util.o s
 OBJS += smp.o cacheattr.o xenbus.o vnuma.o
 OBJS += e820.o pci.o pir.o ctype.o
 OBJS += hvm_param.o
-OBJS += ovmf.o seabios.o
+OBJS += ovmf.o seabios.o optionroms.o
 ifeq ($(debug),y)
 OBJS += tests.o
 endif
@@ -77,6 +77,7 @@ acpi:
 	$(MAKE) -C $(ACPI_PATH)  ACPI_BUILD_DIR=$(CURDIR) DSDT_FILES="$(DSDT_FILES)"
 
 rombios.o: roms.inc
+seabios.o: roms.inc
 smbios.o: CFLAGS += -D__SMBIOS_DATE__="\"$(SMBIOS_REL_DATE)\""
 
 ACPI_PATH = ../../libacpi
--- a/tools/misc/mkhex
+++ b/tools/misc/mkhex
@@ -19,7 +19,7 @@
 # this program; If not, see <http://www.gnu.org/licenses/>.
 #
 
-echo "unsigned $1[] = {"
+echo "static unsigned $1[] = {"
 shift
 od -v -t x $@ | sed 's/^[0-9]*  */0x/' | sed 's/  */, 0x/g' | sed 's/$/,/' | sed 's/0x,//' | sed 's/^[0-9]*,//'
 echo "};"
--- a/tools/firmware/hvmloader/seabios.c
+++ b/tools/firmware/hvmloader/seabios.c
@@ -25,10 +25,22 @@
 #include "util.h"
 
 #include "smbios_types.h"
+#include "option_rom.h"
 
+#include <xen/hvm/params.h>
 #include <acpi2_0.h>
 #include <libacpi.h>
 
+#define ROM_INCLUDE_ROMBIOS
+#define ROM_INCLUDE_VGABIOS
+#define ROM_INCLUDE_ETHERBOOT
+
+/* dont complain about unused rombios variable */
+#pragma GCC diagnostic warning "-Wunused-variable"
+#include "roms.inc"
+
+#define SEABIOS_OPTIONROM_PHYSICAL_END 0x000EA000
+
 struct seabios_info {
     char signature[14]; /* XenHVMSeaBIOS\0 */
     uint8_t length;     /* Length of this struct */
@@ -141,10 +153,66 @@ static void seabios_load(const struct bi
     seabios_config.image_size = bios_length;
 }
 
+static void seabios_load_roms(void)
+{
+    int option_rom_sz = 0, vgabios_sz = 0, etherboot_sz = 0;
+    uint32_t etherboot_phys_addr = 0, option_rom_phys_addr = 0;
+    const char *load;
+    load = xenstore_read("hvmloader/seabios-legacy-load-roms", "0");
+    if (strcmp(load, "1") != 0)
+        return;
+    switch ( virtual_vga )
+    {
+    case VGA_cirrus:
+        printf("Loading Cirrus VGABIOS ...\n");
+        memcpy((void *)VGABIOS_PHYSICAL_ADDRESS,
+               vgabios_cirrusvga, sizeof(vgabios_cirrusvga));
+        vgabios_sz = round_option_rom(sizeof(vgabios_cirrusvga));
+        break;
+    case VGA_std:
+        printf("Loading Standard VGABIOS ...\n");
+        memcpy((void *)VGABIOS_PHYSICAL_ADDRESS,
+               vgabios_stdvga, sizeof(vgabios_stdvga));
+        vgabios_sz = round_option_rom(sizeof(vgabios_stdvga));
+        break;
+    case VGA_pt:
+        printf("Loading VGABIOS of passthroughed gfx ...\n");
+        vgabios_sz =
+            round_option_rom((*(uint8_t *)(VGABIOS_PHYSICAL_ADDRESS+2)) * 512);
+        break;
+    default:
+        printf("No emulated VGA adaptor ...\n");
+        break;
+    }
+
+    etherboot_phys_addr = VGABIOS_PHYSICAL_ADDRESS + vgabios_sz;
+    /* round address at 2k boundary for BIOS ROM scanning */
+    etherboot_phys_addr = (etherboot_phys_addr + 0x7ff) & ~0x7ff;
+    memcpy((void *)etherboot_phys_addr, etherboot, sizeof (etherboot));
+    etherboot_sz = sizeof (etherboot);
+
+    option_rom_phys_addr = etherboot_phys_addr + etherboot_sz;
+    option_rom_sz = pci_load_option_roms(SEABIOS_OPTIONROM_PHYSICAL_END, option_rom_phys_addr);
+
+    printf("Option ROMs:\n");
+    if ( vgabios_sz )
+        printf(" %05x-%05x: VGA BIOS\n",
+               VGABIOS_PHYSICAL_ADDRESS,
+               VGABIOS_PHYSICAL_ADDRESS + vgabios_sz - 1);
+    if ( etherboot_sz )
+        printf(" %05x-%05x: Etherboot ROM\n",
+               etherboot_phys_addr,
+               etherboot_phys_addr + etherboot_sz - 1);
+    if ( option_rom_sz )
+        printf(" %05x-%05x: PCI Option ROMs\n",
+               option_rom_phys_addr,
+               option_rom_phys_addr + option_rom_sz - 1);
+}
+
 struct bios_config seabios_config = {
     .name = "SeaBIOS",
 
-    .load_roms = NULL,
+    .load_roms = seabios_load_roms,
 
     .bios_load = seabios_load,
 
