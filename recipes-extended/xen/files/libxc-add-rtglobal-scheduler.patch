diff --git a/tools/libxc/Makefile b/tools/libxc/Makefile
index 512a994..0fa4fbb 100644
--- a/tools/libxc/Makefile
+++ b/tools/libxc/Makefile
@@ -20,6 +20,7 @@ CTRL_SRCS-y       += xc_sedf.c
 CTRL_SRCS-y       += xc_csched.c
 CTRL_SRCS-y       += xc_csched2.c
 CTRL_SRCS-y       += xc_arinc653.c
+CTRL_SRCS-y       += xc_rtglobal.c
 CTRL_SRCS-y       += xc_tbuf.c
 CTRL_SRCS-y       += xc_pm.c
 CTRL_SRCS-y       += xc_cpu_hotplug.c
diff --git a/tools/libxc/xc_rtglobal.c b/tools/libxc/xc_rtglobal.c
new file mode 100644
index 0000000..61f0a7a
--- /dev/null
+++ b/tools/libxc/xc_rtglobal.c
@@ -0,0 +1,64 @@
+/****************************************************************************
+ * (C) 2006 - Emmanuel Ackaouy - XenSource Inc.
+ ****************************************************************************
+ *
+ *        File: xc_rtglobal.c
+ *      Author: Sisu Xi
+ *
+ * Description: XC Interface to the rtglobal scheduler
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation;
+ * version 2.1 of the License.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ */
+
+#include "xc_private.h"
+
+int
+xc_sched_rtglobal_domain_set(
+	xc_interface *xch,
+    uint32_t domid,
+    struct xen_domctl_sched_rtglobal *sdom)
+{
+	int rc;
+	DECLARE_DOMCTL;
+
+	domctl.cmd = XEN_DOMCTL_scheduler_op;
+	domctl.domain = (domid_t) domid;
+	domctl.u.scheduler_op.sched_id = XEN_SCHEDULER_RTGLOBAL;
+	domctl.u.scheduler_op.cmd = XEN_DOMCTL_SCHEDOP_putinfo;
+	domctl.u.scheduler_op.u.rtglobal.period = sdom->period;
+	domctl.u.scheduler_op.u.rtglobal.budget = sdom->budget;
+	domctl.u.scheduler_op.u.rtglobal.vcpu = sdom->vcpu;
+	domctl.u.scheduler_op.u.rtglobal.rt = sdom->rt;
+
+	rc = do_domctl(xch, &domctl);
+	return rc;
+}
+
+int
+xc_sched_rtglobal_domain_get(
+    xc_interface *xch,
+    uint32_t domid,
+    struct xen_domctl_sched_rtglobal *sdom)
+{
+	DECLARE_DOMCTL;
+	int err;
+
+	domctl.cmd = XEN_DOMCTL_scheduler_op;
+	domctl.domain = (domid_t) domid;
+	domctl.u.scheduler_op.sched_id = XEN_SCHEDULER_RTGLOBAL;
+	domctl.u.scheduler_op.cmd = XEN_DOMCTL_SCHEDOP_getinfo;
+
+	err = do_domctl(xch, &domctl);
+	if(err == 0)
+		*sdom = domctl.u.scheduler_op.u.rtglobal;
+
+	return err;
+}
diff --git a/tools/libxc/xenctrl.h b/tools/libxc/xenctrl.h
index 388a9c3..72d2354 100644
--- a/tools/libxc/xenctrl.h
+++ b/tools/libxc/xenctrl.h
@@ -763,6 +763,15 @@ xc_sched_arinc653_schedule_get(
     xc_interface *xch,
     struct xen_sysctl_arinc653_schedule *schedule);
 
+int xc_sched_rtglobal_domain_set(xc_interface *xch,
+				 uint32_t domid,
+				 struct xen_domctl_sched_rtglobal *sdom);
+
+int xc_sched_rtglobal_domain_get(xc_interface *xch,
+				 uint32_t domid,
+				 struct xen_domctl_sched_rtglobal *sdom);
+
+
 /**
  * This function sends a trigger to a domain.
  *
