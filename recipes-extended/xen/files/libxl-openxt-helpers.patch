################################################################################
SHORT DESCRIPTION:
################################################################################
LibXL support for OpenXT helpers

################################################################################
LONG DESCRIPTION:
################################################################################
In OpenXT, to give Linux stubdomains indirect access to dom0 resources, we use
"helpers".
They communicate with the QEMU instance in the stubdom via V4V.
Guests that use a stubdom need 2 helpers:
* atapi-pt-helper, for CDROM access
* audio-helper, for sound in/out
* qmp-helper, for QMP interactions with the QEMU instance within the stubdom.

################################################################################
CHANGELOG
################################################################################
Authors:
Jed Lejosne <lejosnej@ainfosec.com>

################################################################################
REMOVAL
################################################################################
Probably not desired.

################################################################################
UPSTREAM PLAN
################################################################################
This is specific to OpenXT.
However, if the Xen community first adopts V4V and Linux stubdomain, they may be
interested in these helpers.

################################################################################
INTERNAL DEPENDENCIES
################################################################################
libxl-RFC-*.patch
atapi_pt_helper and qmp_helper

################################################################################
PATCHES
################################################################################
--- a/tools/libxl/libxl_dm.c
+++ b/tools/libxl/libxl_dm.c
@@ -25,6 +25,10 @@
 #include <pwd.h>
 #include <grp.h>
 
+static bool need_qmp_helper = false;
+static bool need_atapi_helper = false;
+static bool need_audio_helper = false;
+
 static const char *libxl_tapif_script(libxl__gc *gc,
                                       const libxl_domain_build_info *info)
 {
@@ -1447,6 +1451,7 @@ static int libxl__build_device_model_arg
         }
         if (b_info->u.hvm.soundhw) {
             flexarray_vappend(dm_args, "-soundhw", b_info->u.hvm.soundhw, NULL);
+            need_audio_helper = true;
         }
         if (!libxl__acpi_defbool_val(b_info)) {
             flexarray_append(dm_args, "-no-acpi");
@@ -2115,6 +2120,25 @@ char *libxl__stub_dm_name(libxl__gc *gc,
     return GCSPRINTF("%s-dm", guest_name);
 }
 
+static void fork_helper(libxl__gc *gc, const char *helper_path,
+                        const char *xs_pid_key, int guest_domid, int dm_domid)
+{
+    pid_t pid;
+
+    pid = fork();
+    if (pid == -1)
+        LOG(ERROR, "Failed to fork");
+    else if (pid == 0)
+        execl(helper_path, helper_path, GCSPRINTF("%d", guest_domid),
+              GCSPRINTF("%d", dm_domid), NULL);
+    else
+        libxl__xs_printf(gc, XBT_NULL,
+                         GCSPRINTF("%s/%s",
+                                   libxl__xs_get_dompath(gc, dm_domid),
+                                   xs_pid_key),
+                         "%d", pid);
+}
+
 void libxl__spawn_stub_dm(libxl__egc *egc, libxl__stub_dm_spawn_state *sdss)
 {
     STATE_AO_GC(sdss->dm.spawn.ao);
@@ -2253,6 +2277,22 @@ void libxl__spawn_stub_dm(libxl__egc *eg
         goto out;
     }
 
+    if (need_qmp_helper) {
+        /* OpenXT: Start the QMP helper */
+        fork_helper(gc, QMP_HELPER_PATH, XS_QMP_PID, guest_domid, dm_domid);
+    }
+
+    if (need_atapi_helper) {
+        /* OpenXT: Start the ATAPI helper */
+        fork_helper(gc, ATAPI_PT_HELPER_PATH, XS_ATAPI_PT_PID, guest_domid,
+                    dm_domid);
+    }
+
+    if (need_audio_helper) {
+        /* OpenXT: Start the audio helper */
+        fork_helper(gc, AUDIO_HELPER_PATH, XS_AUDIO_PID, guest_domid, dm_domid);
+    }
+
     libxl__store_libxl_entry(gc, guest_domid, "dm-version",
         libxl_device_model_version_to_string(dm_config->b_info.device_model_version));
     libxl__store_libxl_entry(gc, dm_domid, "stubdom-version",
--- a/tools/libxl/libxl_domain.c
+++ b/tools/libxl/libxl_domain.c
@@ -1020,11 +1020,15 @@ static void domain_destroy_domid_cb(libx
                                     libxl__ev_child *destroyer,
                                     pid_t pid, int status);
 
+/* OpenXT functions */
+static void kill_openxt_helpers(libxl__gc * gc, uint32_t dm_domid);
+
 void libxl__destroy_domid(libxl__egc *egc, libxl__destroy_domid_state *dis)
 {
     STATE_AO_GC(dis->ao);
     libxl_ctx *ctx = CTX;
     uint32_t domid = dis->domid;
+    uint32_t stubdom_id;
     char *dom_path;
     int rc, dm_present;
 
@@ -1042,7 +1046,8 @@ void libxl__destroy_domid(libxl__egc *eg
 
     switch (libxl__domain_type(gc, domid)) {
     case LIBXL_DOMAIN_TYPE_HVM:
-        if (libxl_get_stubdom_id(CTX, domid)) {
+        stubdom_id = libxl_get_stubdom_id(CTX, domid);
+        if (stubdom_id) {
             dm_present = 0;
             break;
         }
@@ -1079,6 +1084,8 @@ void libxl__destroy_domid(libxl__egc *eg
         libxl__destroy_device_model(egc, &dis->ddms);
         return;
     } else {
+        /* OpenXT: if the domain has a stubdom, we kill the stubdom helpers here */
+        kill_openxt_helpers(gc, stubdom_id);
         dm_destroy_cb(egc, &dis->ddms, 0);
         return;
     }
@@ -1107,6 +1117,34 @@ static void dm_destroy_cb(libxl__egc *eg
     libxl__devices_destroy(egc, &dis->drs);
 }
 
+static void kill_openxt_helpers(libxl__gc *gc, uint32_t dm_domid) {
+    char *pid;
+
+    /* Kill qmp-helper */
+    pid = libxl__xs_read(gc, XBT_NULL,
+                         GCSPRINTF("/local/domain/%d/"XS_QMP_PID, dm_domid));
+    if (!pid)
+        LOG(ERROR, "Cannot get qmp_helper pid for domain %d", dm_domid);
+    else
+        kill(strtol(pid, NULL, 10), SIGKILL);
+
+    /* Kill atapi-pt-helper */
+    pid = libxl__xs_read(gc, XBT_NULL,
+                         GCSPRINTF("/local/domain/%d/"XS_ATAPI_PT_PID, dm_domid));
+    if (!pid)
+        LOG(ERROR, "Cannot get atapi-pt_helper pid for domain %d", dm_domid);
+    else
+        kill(strtol(pid, NULL, 10), SIGKILL);
+
+    /* Kill audio-helper */
+    pid = libxl__xs_read(gc, XBT_NULL,
+                         GCSPRINTF("/local/domain/%d/"XS_AUDIO_PID, dm_domid));
+    if (!pid)
+        LOG(ERROR, "Cannot get audio_helper pid for domain %d", dm_domid);
+    else
+        kill(strtol(pid, NULL, 10), SIGKILL);
+}
+
 static void devices_destroy_cb(libxl__egc *egc,
                                libxl__devices_remove_state *drs,
                                int rc)
--- a/tools/libxl/libxl_internal.h
+++ b/tools/libxl/libxl_internal.h
@@ -134,6 +134,13 @@
 #define MB(_mb)     (_AC(_mb, ULL) << 20)
 #define GB(_gb)     (_AC(_gb, ULL) << 30)
 
+#define QMP_HELPER_PATH "/usr/lib/xen/bin/qmp_helper"
+#define ATAPI_PT_HELPER_PATH "/usr/lib/xen/bin/atapi_pt_helper"
+#define AUDIO_HELPER_PATH "/usr/lib/xen/bin/audio_helper_start"
+#define XS_QMP_PID "qmp-helper-pid"
+#define XS_ATAPI_PT_PID "atapi-pt-helper-pid"
+#define XS_AUDIO_PID "audio-helper-pid"
+
 #define ROUNDUP(_val, _order)                                           \
     (((unsigned long)(_val)+(1UL<<(_order))-1) & ~((1UL<<(_order))-1))
 
--- a/tools/libxl/libxl_create.c
+++ b/tools/libxl/libxl_create.c
@@ -1570,12 +1570,10 @@ static void domcreate_devmodel_started(l
     if (dcs->sdss.dm.guest_domid) {
         if (d_config->b_info.device_model_version
             == LIBXL_DEVICE_MODEL_VERSION_QEMU_XEN) {
-            if (!libxl_defbool_val(d_config->b_info.device_model_stubdomain)) {
-                libxl__qmp_initializations(gc, domid, d_config);
-            } else {
-                int stubdom_domid = dcs->dmss.pvqemu.guest_domid;
-                libxl__qmp_initializations(gc, stubdom_domid, d_config);
-            }
+            /* OpenXT: for stubdom-enabled guests, qmp_helper creates the same
+             * unix socket than QEMU would for non-stubdom guests.
+             * Therefore there's no need to dissociate the two cases */
+            libxl__qmp_initializations(gc, domid, d_config);
         }
     }
 
