################################################################################
SHORT DESCRIPTION:
################################################################################
LibXL support for OpenXT helpers

################################################################################
LONG DESCRIPTION:
################################################################################
In OpenXT, to give Linux stubdomains indirect access to dom0 resources, we use
"helpers".
They communicate with the QEMU instance in the stubdom via Argo.
Guests that use a stubdom need 2 helpers:
* atapi-pt-helper, for CDROM access
* audio-helper, for sound in/out

################################################################################
CHANGELOG
################################################################################
Authors:
Jed Lejosne <lejosnej@ainfosec.com>

################################################################################
REMOVAL
################################################################################
Probably not desired.

################################################################################
UPSTREAM PLAN
################################################################################
This is specific to OpenXT.
However, if the Xen community first adopts Argo and Linux stubdomain, they may be
interested in these helpers.

################################################################################
INTERNAL DEPENDENCIES
################################################################################
libxl-RFC-*.patch
atapi_pt_helper

################################################################################
PATCHES
################################################################################
--- a/tools/libs/light/libxl_dm.c
+++ b/tools/libs/light/libxl_dm.c
@@ -24,6 +24,9 @@
 #include <pwd.h>
 #include <grp.h>
 
+static bool need_atapi_helper = false;
+static bool need_audio_helper = false;
+
 static const char *libxl_tapif_script(libxl__gc *gc)
 {
 #if defined(__linux__) || defined(__FreeBSD__)
@@ -1514,6 +1517,7 @@ static int libxl__build_device_model_arg
         }
         if (b_info->u.hvm.soundhw) {
             flexarray_vappend(dm_args, "-soundhw", b_info->u.hvm.soundhw, NULL);
+            need_audio_helper = true;
         }
         if (!libxl__acpi_defbool_val(b_info)) {
             flexarray_append(dm_args, "-no-acpi");
@@ -2258,6 +2262,25 @@ char *libxl__stub_dm_name(libxl__gc *gc,
     return GCSPRINTF("%s-dm", guest_name);
 }
 
+static void fork_helper(libxl__gc *gc, const char *helper_path,
+                        const char *xs_pid_key, int guest_domid, int dm_domid)
+{
+    pid_t pid;
+
+    pid = fork();
+    if (pid == -1)
+        LOG(ERROR, "Failed to fork");
+    else if (pid == 0)
+        execl(helper_path, helper_path, GCSPRINTF("%d", guest_domid),
+              GCSPRINTF("%d", dm_domid), NULL);
+    else
+        libxl__xs_printf(gc, XBT_NULL,
+                         GCSPRINTF("%s/%s",
+                                   libxl__xs_get_dompath(gc, dm_domid),
+                                   xs_pid_key),
+                         "%d", pid);
+}
+
 void libxl__spawn_stub_dm(libxl__egc *egc, libxl__stub_dm_spawn_state *sdss)
 {
     STATE_AO_GC(sdss->dm.spawn.ao);
@@ -2382,6 +2405,22 @@ void libxl__spawn_stub_dm(libxl__egc *eg
         goto out;
     }
 
+    if (need_atapi_helper) {
+        /* OpenXT: Start the ATAPI helper */
+        fork_helper(gc, ATAPI_PT_HELPER_PATH, XS_ATAPI_PT_PID, guest_domid,
+                    dm_domid);
+    }
+
+    if (need_audio_helper) {
+        /* OpenXT: Start the audio helper */
+        fork_helper(gc, AUDIO_HELPER_PATH, XS_AUDIO_PID, guest_domid, dm_domid);
+    }
+
     libxl__store_libxl_entry(gc, guest_domid, "dm-version",
         libxl_device_model_version_to_string(dm_config->b_info.device_model_version));
 
--- a/tools/libs/light/libxl_domain.c
+++ b/tools/libs/light/libxl_domain.c
@@ -1166,6 +1166,30 @@ static void domain_destroy_domid_cb(libx
                                     libxl__ev_child *destroyer,
                                     pid_t pid, int status);
 
+static void kill_openxt_helpers(libxl__gc *gc, uint32_t dm_domid)
+{
+    char *pid;
+    int rc;
+
+    /* Kill atapi-pt-helper */
+    pid = libxl__xs_read(gc, XBT_NULL,
+                         GCSPRINTF("/local/domain/%d/"XS_ATAPI_PT_PID, dm_domid));
+    if (pid) {
+        rc = kill(strtol(pid, NULL, 10), SIGKILL);
+        if (rc < 0)
+            LOG(ERROR, "Failed to kill atapi-pt_helper for domain %d", dm_domid);
+    }
+
+    /* Kill audio-helper */
+    pid = libxl__xs_read(gc, XBT_NULL,
+                         GCSPRINTF("/local/domain/%d/"XS_AUDIO_PID, dm_domid));
+    if (pid) {
+        rc = kill(strtol(pid, NULL, 10), SIGKILL);
+        if (rc < 0)
+            LOG(ERROR, "Failed to kill audio_helper for domain %d", dm_domid);
+    }
+}
+
 void libxl__destroy_domid(libxl__egc *egc, libxl__destroy_domid_state *dis)
 {
     STATE_AO_GC(dis->ao);
@@ -1203,6 +1237,7 @@ static void destroy_domid_pci_done(libxl
     STATE_AO_GC(multidev->ao);
     libxl__destroy_domid_state *dis =
         CONTAINER_OF(multidev, *dis, multidev);
+    uint32_t stubdom_id;
     int dm_present;
     int r;
 
@@ -1222,7 +1247,8 @@ static void destroy_domid_pci_done(libxl
 
     switch (libxl__domain_type(gc, domid)) {
     case LIBXL_DOMAIN_TYPE_HVM:
-        if (libxl_get_stubdom_id(CTX, domid)) {
+        stubdom_id = libxl_get_stubdom_id(CTX, domid);
+        if (stubdom_id) {
             dm_present = 0;
             break;
         }
@@ -1246,6 +1272,9 @@ static void destroy_domid_pci_done(libxl
         libxl__destroy_device_model(egc, &dis->ddms);
         return;
     } else {
+        /* OpenXT: if the domain has a stubdom, we kill the stubdom helpers here */
+        if (stubdom_id)
+            kill_openxt_helpers(gc, stubdom_id);
         dm_destroy_cb(egc, &dis->ddms, 0);
         return;
     }
--- a/tools/libs/light/libxl_internal.h
+++ b/tools/libs/light/libxl_internal.h
@@ -134,6 +134,11 @@
 #define MB(_mb)     (_AC(_mb, ULL) << 20)
 #define GB(_gb)     (_AC(_gb, ULL) << 30)
 
+#define ATAPI_PT_HELPER_PATH "/usr/lib/xen/bin/atapi_pt_helper"
+#define AUDIO_HELPER_PATH "/usr/lib/xen/bin/audio_helper_start"
+#define XS_ATAPI_PT_PID "atapi-pt-helper-pid"
+#define XS_AUDIO_PID "audio-helper-pid"
+
 #define DIV_ROUNDUP(n, d) (((n) + (d) - 1) / (d))
 
 #define MASK_EXTR(v, m) (((v) & (m)) / ((m) & -(m)))
