################################################################################
SHORT DESCRIPTION:
################################################################################
LibXL modifications specific to OpenXT

################################################################################
LONG DESCRIPTION:
################################################################################
* Write a couple of xenstore nodes
* Use a pty as the console backend
* Fix domain unpause for disk-less Linux stubdomains

################################################################################
CHANGELOG
################################################################################
Authors:
Martin Osterloh <osterlohm@ainfosec.com>

################################################################################
REMOVAL
################################################################################
Probably not desired.

################################################################################
UPSTREAM PLAN
################################################################################
This is specific to OpenXT, nothing to upstream here.

################################################################################
INTERNAL DEPENDENCIES
################################################################################
libxl-RFC-*.patch

################################################################################
PATCHES
################################################################################
Index: xen-4.6.4/tools/libxl/libxl_dm.c
===================================================================
--- xen-4.6.4.orig/tools/libxl/libxl_dm.c
+++ xen-4.6.4/tools/libxl/libxl_dm.c
@@ -1595,6 +1595,11 @@ void libxl__spawn_stub_dm(libxl__egc *eg
                                        libxl__xs_get_dompath(gc, guest_domid)),
                         "%s",
                         libxl_bios_type_to_string(LIBXL_BIOS_TYPE_SEABIOS));
+        /* OpenXT: We use legacy roms, which is disabled by default in sebios */
+        libxl__xs_write(gc, XBT_NULL,
+                        libxl__sprintf(gc, "%s/hvmloader/seabios-legacy-load-roms",
+                                       libxl__xs_get_dompath(gc, guest_domid)),
+                        "1");
     }
     ret = xc_domain_set_target(ctx->xch, dm_domid, guest_domid);
     if (ret<0) {
@@ -1622,6 +1627,12 @@ retry_transaction:
         if (errno == EAGAIN)
             goto retry_transaction;
 
+    /* OpenXT: We add the device models extended power management type to enable acpi.
+     * We do this here since we need the permission above.
+     */
+    libxl__xs_write(gc, XBT_NULL,
+                    libxl__device_model_xs_path(gc, dm_domid, guest_domid, "/xen_extended_power_mgmt"), "2");
+
     libxl__multidev_begin(ao, &sdss->multidev);
     sdss->multidev.callback = spawn_stub_launch_dm;
     /* OpenXT: Again, no disk for the stubdom itself */
@@ -1640,7 +1651,6 @@ static void spawn_stub_launch_dm(libxl__
 {
     libxl__stub_dm_spawn_state *sdss = CONTAINER_OF(multidev, *sdss, multidev);
     STATE_AO_GC(sdss->dm.spawn.ao);
-    libxl_ctx *ctx = libxl__gc_owner(gc);
     int i, num_console = STUBDOM_SPECIAL_CONSOLES;
     libxl__device_console *console;
 
@@ -1685,21 +1695,16 @@ static void spawn_stub_launch_dm(libxl__
     for (i = 0; i < num_console; i++) {
         libxl__device device;
         console[i].devid = i;
-        console[i].consback = LIBXL__CONSOLE_BACKEND_IOEMU;
+        /* OpenXT: our console backend is xenconsoled */
+        console[i].consback = LIBXL__CONSOLE_BACKEND_XENCONSOLED;
         /* STUBDOM_CONSOLE_LOGGING (console 0) is for minios logging
          * STUBDOM_CONSOLE_SAVE (console 1) is for writing the save file
          * STUBDOM_CONSOLE_RESTORE (console 2) is for reading the save file
          */
         switch (i) {
-            char *filename;
-            char *name;
+            /* OpenXT: we don't log to a file but to a pty */
             case STUBDOM_CONSOLE_LOGGING:
-                name = libxl__sprintf(gc, "qemu-dm-%s",
-                                      libxl_domid_to_name(ctx, guest_domid));
-                ret = libxl_create_logfile(ctx, name, &filename);
-                if (ret) goto out;
-                console[i].output = libxl__sprintf(gc, "file:%s", filename);
-                free(filename);
+                console[i].output = "pty";
                 break;
             case STUBDOM_CONSOLE_SAVE:
                 if (guest_config->b_info.stubdomain_version
@@ -1779,7 +1784,6 @@ static void stubdom_pvqemu_cb(libxl__egc
     libxl__stub_dm_spawn_state *sdss = CONTAINER_OF(multidev, *sdss, multidev);
     STATE_AO_GC(sdss->dm.spawn.ao);
     uint32_t dm_domid = sdss->pvqemu.guest_domid;
-    libxl__xswait_state *xswait = &sdss->pvqemu.spawn.xswait;
 
     libxl__xswait_init(&sdss->xswait);
 
@@ -1906,6 +1910,17 @@ void libxl__spawn_local_dm(libxl__egc *e
                         b_info->device_model_version==LIBXL_DEVICE_MODEL_VERSION_QEMU_XEN_TRADITIONAL &&
                         !libxl__vnuma_configured(b_info));
         free(path);
+        /* OpenXT: We use legacy roms, which is disabled by default in sebios */
+        libxl__xs_write(gc, XBT_NULL,
+                        libxl__sprintf(gc, "%s/hvmloader/seabios-legacy-load-roms",
+                                       libxl__xs_get_dompath(gc, domid)),
+                        "1");
+        /* OpenXT: We add the device models extended power management type to enable acpi.
+         * We do this here since we need the permission above.
+         */
+        libxl__xs_write(gc, XBT_NULL,
+                        libxl__device_model_xs_path(gc, 0, domid, "/xen_extended_power_mgmt"), "2");
+
     }
 
     path = libxl__device_model_xs_path(gc, LIBXL_TOOLSTACK_DOMID, domid, "");
Index: xen-4.6.4/tools/libxl/libxl.c
===================================================================
--- xen-4.6.4.orig/tools/libxl/libxl.c
+++ xen-4.6.4/tools/libxl/libxl.c
@@ -1048,7 +1048,8 @@ int libxl_domain_unpause(libxl_ctx *ctx,
         if (rc < 0) {
             LOG(ERROR, "failed to unpause device model for domain %u:%d",
                 domid, rc);
-            goto out;
+            /* OpenXT: This is not fatal, xc_domain_unpause() is enough */
+            /* goto out; */
         }
     }
     ret = xc_domain_unpause(ctx->xch, domid);
