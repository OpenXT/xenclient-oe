################################################################################
SHORT DESCRIPTION:
################################################################################
Support read-only disks for HVM VMs.

################################################################################
LONG DESCRIPTION:
################################################################################
Generates the correct qemu command line to connect disks as read-only.

################################################################################
CHANGELOG
################################################################################
Rebased for Xen 4.8, 4.9 upgrades

################################################################################
REMOVAL
################################################################################

################################################################################
UPSTREAM PLAN
################################################################################
Yes

################################################################################
INTERNAL DEPENDENCIES
################################################################################

################################################################################
PATCHES
################################################################################
--- a/tools/libxl/libxl_dm.c
+++ b/tools/libxl/libxl_dm.c
@@ -850,8 +850,6 @@ static char *qemu_disk_ide_drive_string(
     const char *active_disk = disk->active_disk;
     const char *hidden_disk = disk->hidden_disk;
 
-    assert(disk->readwrite); /* should have been checked earlier */
-
     switch (colo_mode) {
     case LIBXL__COLO_NONE:
         drive = GCSPRINTF
@@ -869,13 +867,13 @@ static char *qemu_disk_ide_drive_string(
          *  vote-threshold=1
          */
         drive = GCSPRINTF(
-            "if=ide,index=%d,media=disk,cache=writeback,driver=quorum,"
+            "if=ide,index=%d,media=disk,readonly=%s,cache=writeback,driver=quorum,"
             "id=%s,"
             "children.0.file.filename=%s,"
             "children.0.driver=%s,"
             "read-pattern=fifo,"
             "vote-threshold=1",
-             unit, exportname, target_path, format);
+            unit, disk->readwrite ? "off" : "on", exportname, target_path, format);
         break;
     case LIBXL__COLO_SECONDARY:
         /*
@@ -889,7 +887,7 @@ static char *qemu_disk_ide_drive_string(
          *  file.backing.backing=exportname,
          */
         drive = GCSPRINTF(
-            "if=ide,index=%d,id=top-colo,media=disk,cache=writeback,"
+            "if=ide,index=%d,id=top-colo,media=disk,readonly=%s,cache=writeback,"
             "driver=replication,"
             "mode=secondary,"
             "top-id=top-colo,"
@@ -898,7 +896,7 @@ static char *qemu_disk_ide_drive_string(
             "file.backing.driver=qcow2,"
             "file.backing.file.filename=%s,"
             "file.backing.backing=%s",
-            unit, active_disk, hidden_disk, exportname);
+            unit, disk->readwrite ? "off" : "on", active_disk, hidden_disk, exportname);
         break;
     default:
          abort();
@@ -1616,11 +1614,6 @@ static int libxl__build_device_model_arg
                         disk, disk), NULL);
                     continue;
                 } else if (disk < 4) {
-                    if (!disks[i].readwrite) {
-                        LOGD(ERROR, guest_domid,
-                             "qemu-xen doesn't support read-only IDE disk drivers");
-                        return ERROR_INVAL;
-                    }
                     if (b_info->stubdomain_version == LIBXL_STUBDOMAIN_VERSION_LINUX) {
                         target_path = (char *[]) {"/dev/xvda",
                                                   "/dev/xvdb",
