################################################################################
SHORT DESCRIPTION:
################################################################################
Debug CPUID signature option to control guest PV driver behaviour.

################################################################################
LONG DESCRIPTION:
################################################################################
XciVMMXciVMM signature was used by our old custom Linux PV drivers to get them
to load instead of standard pvops ones. We keep this feature because it is
very useful for debugging. By enabling this CPUID you can force a pvops guest
to not load its standard PV drivers.

################################################################################
CHANGELOG
################################################################################
Part of former hvm-cpuid-multicore.patch

################################################################################
REMOVAL
################################################################################
Keep but perhaps disable on the production build configuration since this
feature is to support debugging.

################################################################################
UPSTREAM PLAN
################################################################################
No

################################################################################
INTERNAL DEPENDENCIES
################################################################################

################################################################################
PATCHES
################################################################################
--- a/tools/firmware/hvmloader/hvmloader.c
+++ b/tools/firmware/hvmloader/hvmloader.c
@@ -133,11 +133,13 @@ static void init_hypercalls(void)
         *(uint32_t *)(signature + 8) = edx;
         signature[12] = '\0';
 
-        if ( !strcmp("XenVMMXenVMM", signature) )
+        if ( !strcmp("XenVMMXenVMM", signature) ||
+             !strcmp("XciVMMXciVMM", signature) )
             break;
     }
 
-    BUG_ON(strcmp("XenVMMXenVMM", signature) || ((eax - base) < 2));
+    BUG_ON((   strcmp("XenVMMXenVMM", signature)
+            && strcmp("XciVMMXciVMM", signature) )|| ((eax - base) < 2));
 
     /* Fill in hypercall transfer pages. */
     cpuid(base + 2, &eax, &ebx, &ecx, &edx);
--- a/xen/arch/x86/hvm/hvm.c
+++ b/xen/arch/x86/hvm/hvm.c
@@ -4162,6 +4162,10 @@ static int hvmop_set_param(
              !(a.value & HVMPV_base_freq) )
             rc = -EINVAL;
         break;
+    case HVM_PARAM_XCI_CPUID_SIGNATURE:
+        if ( a.value > 1 )
+            rc = -EINVAL;
+        break;
     case HVM_PARAM_IDENT_PT:
         /*
          * Only actually required for VT-x lacking unrestricted_guest
--- a/xen/arch/x86/traps.c
+++ b/xen/arch/x86/traps.c
@@ -862,10 +862,18 @@ void cpuid_hypervisor_leaves(const struc
     switch ( idx )
     {
     case 0:
-        res->a = base + limit; /* Largest leaf */
-        res->b = XEN_CPUID_SIGNATURE_EBX;
-        res->c = XEN_CPUID_SIGNATURE_ECX;
-        res->d = XEN_CPUID_SIGNATURE_EDX;
+        /* possibly use XenClient cpuid signature */
+        if (is_hvm_domain(d) && (d->arch.hvm.params[HVM_PARAM_XCI_CPUID_SIGNATURE])) {
+            res->a = base + limit; /* Largest leaf */
+            res->b = XCI_CPUID_SIGNATURE_EBX;
+            res->c = XCI_CPUID_SIGNATURE_ECX;
+            res->d = XCI_CPUID_SIGNATURE_EDX;
+        } else {
+            res->a = base + limit; /* Largest leaf */
+            res->b = XEN_CPUID_SIGNATURE_EBX;
+            res->c = XEN_CPUID_SIGNATURE_ECX;
+            res->d = XEN_CPUID_SIGNATURE_EDX;
+        }
         break;
 
     case 1:
--- a/xen/include/public/arch-x86/cpuid.h
+++ b/xen/include/public/arch-x86/cpuid.h
@@ -42,6 +42,11 @@
 #define XEN_CPUID_FIRST_LEAF 0x40000000
 #define XEN_CPUID_LEAF(i)    (XEN_CPUID_FIRST_LEAF + (i))
 
+/* alternate XenClient cpuid signature */
+#define XCI_CPUID_SIGNATURE_EBX 0x56696358 /* "XciV" */
+#define XCI_CPUID_SIGNATURE_ECX 0x63584d4d /* "MMXc" */
+#define XCI_CPUID_SIGNATURE_EDX 0x4d4d5669 /* "iVMM" */
+
 /*
  * Leaf 1 (0x40000x00)
  * EAX: Largest Xen-information leaf. All leaves up to an including @EAX
--- a/xen/include/public/hvm/params.h
+++ b/xen/include/public/hvm/params.h
@@ -288,6 +288,10 @@
 #define XEN_HVM_MCA_CAP_LMCE   (xen_mk_ullong(1) << 0)
 #define XEN_HVM_MCA_CAP_MASK   XEN_HVM_MCA_CAP_LMCE
 
-#define HVM_NR_PARAMS 39
+/* XenClient specific hvm params */
+/* use Xci cpuid signature instead of standard Xen one */
+#define HVM_PARAM_XCI_CPUID_SIGNATURE 39
+
+#define HVM_NR_PARAMS 40
 
 #endif /* __XEN_PUBLIC_HVM_PARAMS_H__ */
