From 20e21fcb462c3e480b95f16b411200ee62774ea4 Mon Sep 17 00:00:00 2001
From: Tamas K Lengyel <tamas@tklengyel.com>
Date: Fri, 2 Feb 2018 17:39:56 -0700
Subject: [PATCH 3/3] Shim lock measure

---
 xen/common/efi/boot.c | 37 +++++++++++++++++++++++++++++++------
 1 file changed, 31 insertions(+), 6 deletions(-)

--- a/xen/common/efi/boot.c
+++ b/xen/common/efi/boot.c
@@ -46,8 +46,17 @@ typedef EFI_STATUS
     IN VOID *Buffer,
     IN UINT32 Size);
 
+typedef EFI_STATUS
+(/* _not_ EFIAPI */ *EFI_SHIM_LOCK_MEASURE) (
+    IN VOID *Buffer,
+    IN UINT32 Size,
+    IN UINT8 Pcr);
+
 typedef struct {
     EFI_SHIM_LOCK_VERIFY Verify;
+    void* Hash;
+    void* Context;
+    EFI_SHIM_LOCK_MEASURE Measure;
 } EFI_SHIM_LOCK_PROTOCOL;
 
 struct _EFI_APPLE_PROPERTIES;
@@ -1105,12 +1114,12 @@ efi_start(EFI_HANDLE ImageHandle, EFI_SY
     unsigned int i, argc;
     CHAR16 **argv, *file_name, *cfg_file_name = L"openxt.cfg", *options = NULL;
     UINTN gop_mode = ~0;
-    EFI_SHIM_LOCK_PROTOCOL *shim_lock;
+    EFI_SHIM_LOCK_PROTOCOL *shim_lock = NULL;
     EFI_GRAPHICS_OUTPUT_PROTOCOL *gop = NULL;
     union string section = { NULL }, name;
     bool_t base_video = 0;
     char *option_str;
-    bool_t use_cfg_file;
+    bool_t use_cfg_file, elo_active;
 
     __set_bit(EFI_BOOT, &efi_flags);
     __set_bit(EFI_LOADER, &efi_flags);
@@ -1225,6 +1234,13 @@ efi_start(EFI_HANDLE ImageHandle, EFI_SY
         }
         else if ( !read_file(dir_handle, cfg_file_name, &cfg, NULL) )
             blexit(L"Configuration file not found.");
+
+        efi_bs->LocateProtocol(&shim_lock_guid, NULL, (void **)&shim_lock);
+
+        if ( shim_lock &&
+            (status = shim_lock->Measure(cfg.ptr, cfg.size, 8)) != EFI_SUCCESS )
+                PrintErrMesg(L"Configuration file could not be measured", status);
+
         pre_parse(&cfg);
 
         if ( section.w )
@@ -1262,16 +1278,20 @@ efi_start(EFI_HANDLE ImageHandle, EFI_SY
         read_file(dir_handle, s2w(&name), &kernel, option_str);
         efi_bs->FreePool(name.w);
 
-        if ( !EFI_ERROR(efi_bs->LocateProtocol(&shim_lock_guid, NULL,
-                        (void **)&shim_lock)) &&
-             (status = shim_lock->Verify(kernel.ptr, kernel.size)) != EFI_SUCCESS )
-            PrintErrMesg(L"Dom0 kernel image could not be verified", status);
+        if ( shim_lock &&
+            (status = shim_lock->Measure(kernel.ptr, kernel.size, 4)) != EFI_SUCCESS )
+            PrintErrMesg(L"Dom0 kernel image could not be measured", status);
 
         name.s = get_value(&cfg, section.s, "ramdisk");
         if ( name.s )
         {
             read_file(dir_handle, s2w(&name), &ramdisk, NULL);
             efi_bs->FreePool(name.w);
+
+            if ( shim_lock &&
+                (status = shim_lock->Measure(ramdisk.ptr, ramdisk.size, 8))
+                 != EFI_SUCCESS )
+                    PrintErrMesg(L"ramdisk could not be measured", status);
         }
 
         name.s = get_value(&cfg, section.s, "xsm");
@@ -1279,6 +1299,11 @@ efi_start(EFI_HANDLE ImageHandle, EFI_SY
         {
             read_file(dir_handle, s2w(&name), &xsm, NULL);
             efi_bs->FreePool(name.w);
+
+            if ( shim_lock &&
+                (status = shim_lock->Measure(xsm.ptr, xsm.size, 8))
+                 != EFI_SUCCESS)
+                    PrintErrMesg(L"XSM policy could not be measured", status);
         }
 
         name.s = get_value(&cfg, section.s, "options");
