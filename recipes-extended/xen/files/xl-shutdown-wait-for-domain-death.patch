################################################################################
SHORT DESCRIPTION:
################################################################################
Wait for domain death during shutdown.

################################################################################
LONG DESCRIPTION:
################################################################################
While waiting on shutdown, domain death (DOMAIN_DEATH) depicts complete domain
annhilation whereas shutdown domain (SHUTDOWN_DOMAIN) depicts just the beginning
of domain destruction. So, it is only required to wait on domain death which is
more meaningful and correct.

################################################################################
CHANGELOG
################################################################################
Contributions by:
Mahantesh Salimath <salimathm@ainfosec.com>

################################################################################
UPSTREAM PLAN
################################################################################
To be upstreamed

################################################################################
PATCHES
################################################################################
--- a/tools/xl/xl_vmcontrol.c
+++ b/tools/xl/xl_vmcontrol.c
@@ -232,12 +232,6 @@ static void wait_for_domain_deaths(libxl
             libxl_evdisable_domain_death(ctx, deathws[event->for_user]);
             count++;
             break;
-        case LIBXL_EVENT_TYPE_DOMAIN_SHUTDOWN:
-            LOG("Domain %d has been shut down, reason code %d",
-                event->domid, event->u.domain_shutdown.shutdown_reason);
-            libxl_evdisable_domain_death(ctx, deathws[event->for_user]);
-            count++;
-            break;
         default:
             LOG("Unexpected event type %d", event->type);
             break;
