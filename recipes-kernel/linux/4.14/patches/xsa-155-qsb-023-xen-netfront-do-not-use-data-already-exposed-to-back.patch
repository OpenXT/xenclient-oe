################################################################################
SHORT DESCRIPTION: 
################################################################################
QSB-023 (https://github.com/QubesOS/qubes-secpack/blob/master/QSBs/qsb-023-2015)
XSA-155 additional patches for the Xen network and block frontends from Qubes
OS Project.

################################################################################
LONG DESCRIPTION: 
################################################################################
Source: https://github.com/QubesOS/qubes-linux-kernel/tree/stable-3.18/patches.xen
Patch: xsa155-linux318-0010-xen-netfront-do-not-use-data-already-exposed-to-back.patch

Backend may freely modify anything on shared page, so use data which was
supposed to be written there, instead of reading it back from the shared pckend
may freely modify anything on shared page, so use data which was supposed to be
written there, instead of reading it back from the shared page.

################################################################################
PATCHES 
################################################################################
--- a/drivers/net/xen-netfront.c
+++ b/drivers/net/xen-netfront.c
@@ -460,7 +460,7 @@ static void xennet_tx_setup_grant(unsign
 	tx->flags = 0;
 
 	info->tx = tx;
-	info->size += tx->size;
+	info->size += len;
 }
 
 static struct xen_netif_tx_request *xennet_make_first_txreq(
@@ -576,7 +576,7 @@ static int xennet_start_xmit(struct sk_b
 	int slots;
 	struct page *page;
 	unsigned int offset;
-	unsigned int len;
+	unsigned int len, this_len;
 	unsigned long flags;
 	struct netfront_queue *queue = NULL;
 	unsigned int num_queues = dev->real_num_tx_queues;
@@ -636,14 +636,15 @@ static int xennet_start_xmit(struct sk_b
 	}
 
 	/* First request for the linear area. */
+	this_len = min_t(unsigned int, PAGE_SIZE - offset, len);
 	first_tx = tx = xennet_make_first_txreq(queue, skb,
 						page, offset, len);
-	offset += tx->size;
+	offset += this_len;
 	if (offset == PAGE_SIZE) {
 		page++;
 		offset = 0;
 	}
-	len -= tx->size;
+	len -= this_len;
 
 	if (skb->ip_summed == CHECKSUM_PARTIAL)
 		/* local packet? */
