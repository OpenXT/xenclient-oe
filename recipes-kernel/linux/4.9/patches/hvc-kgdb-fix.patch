################################################################################
SHORT DESCRIPTION: 
################################################################################
Fall back to cons_ops if tty->driver_data is not ready.

################################################################################
LONG DESCRIPTION: 
################################################################################
See http://lists.xen.org/archives/html/xen-devel/2012-06/msg00484.html.

Use tty->driver_data, if available or fall back to using cons_ops.

################################################################################
CHANGELOG 
################################################################################
Original Author: Ben Guthro <ben@xxxxxxxxxx>
Port to 3.18: Eric Chanudet <chanudete@ainfosec.com>

################################################################################
REMOVAL 
################################################################################
Until fixed upstream.

################################################################################
UPSTREAM PLAN
################################################################################
None.

################################################################################
INTERNAL DEPENDENCIES 
################################################################################
None, allows kgdb over hvc for debugging.

################################################################################
PATCHES 
################################################################################
Index: linux-4.9.6/drivers/tty/hvc/hvc_console.c
===================================================================
--- linux-4.9.6.orig/drivers/tty/hvc/hvc_console.c
+++ linux-4.9.6/drivers/tty/hvc/hvc_console.c
@@ -808,11 +808,13 @@ static int hvc_poll_init(struct tty_driv
 static int hvc_poll_get_char(struct tty_driver *driver, int line)
 {
 	struct tty_struct *tty = driver->ttys[0];
-	struct hvc_struct *hp = tty->driver_data;
+	struct hvc_struct *hp = tty ? tty->driver_data : NULL;
+	struct hv_ops *ops = (hp && hp->ops) ? hp->ops : cons_ops[last_hvc];
+	uint32_t vtno = hp ? hp->vtermno : vtermnos[last_hvc];
 	int n;
 	char ch;
 
-	n = hp->ops->get_chars(hp->vtermno, &ch, 1);
+	n = ops->get_chars(vtno, &ch, 1);
 
 	if (n <= 0)
 		return NO_POLL_CHAR;
@@ -823,11 +825,14 @@ static int hvc_poll_get_char(struct tty_
 static void hvc_poll_put_char(struct tty_driver *driver, int line, char ch)
 {
 	struct tty_struct *tty = driver->ttys[0];
-	struct hvc_struct *hp = tty->driver_data;
+	struct hvc_struct *hp = tty ? tty->driver_data : NULL;
+	struct hv_ops *ops = (hp && hp->ops) ? hp->ops : cons_ops[last_hvc];
+	uint32_t vtno = hp ? hp->vtermno : vtermnos[last_hvc];
+
 	int n;
 
 	do {
-		n = hp->ops->put_chars(hp->vtermno, &ch, 1);
+		n = ops->put_chars(vtno, &ch, 1);
 	} while (n <= 0);
 }
 #endif
Index: linux-4.9.6/kernel/debug/debug_core.c
===================================================================
--- linux-4.9.6.orig/kernel/debug/debug_core.c
+++ linux-4.9.6/kernel/debug/debug_core.c
@@ -595,6 +595,7 @@ return_normal:
 		kgdb_roundup_cpus(flags);
 #endif
 
+#ifndef CONFIG_XEN
 	/*
 	 * Wait for the other CPUs to be notified and be waiting for us:
 	 */
@@ -605,6 +606,7 @@ return_normal:
 		udelay(1000);
 	if (!time_left)
 		pr_crit("Timed out waiting for secondary CPUs.\n");
+#endif
 
 	/*
 	 * At this point the primary processor is completely
