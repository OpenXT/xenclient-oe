################################################################################
SHORT DESCRIPTION: 
################################################################################
Fall back to cons_ops if tty->driver_data is not ready.

################################################################################
LONG DESCRIPTION: 
################################################################################
See http://lists.xen.org/archives/html/xen-devel/2012-06/msg00484.html.

Use tty->driver_data, if available or fall back to using cons_ops.

################################################################################
CHANGELOG 
################################################################################
Original Author: Ben Guthro <ben@xxxxxxxxxx>
Port to 3.18: Eric Chanudet <chanudete@ainfosec.com>

################################################################################
REMOVAL 
################################################################################
Until fixed upstream.

################################################################################
UPSTREAM PLAN
################################################################################
None.

################################################################################
INTERNAL DEPENDENCIES 
################################################################################
None, allows kgdb over hvc for debugging.

################################################################################
PATCHES 
################################################################################
Index: linux-3.18.24/drivers/tty/hvc/hvc_console.c
===================================================================
--- linux-3.18.24.orig/drivers/tty/hvc/hvc_console.c	2015-11-05 04:18:25.330280584 +0100
+++ linux-3.18.24/drivers/tty/hvc/hvc_console.c	2015-11-05 04:18:35.843472420 +0100
@@ -807,11 +807,13 @@
 static int hvc_poll_get_char(struct tty_driver *driver, int line)
 {
 	struct tty_struct *tty = driver->ttys[0];
-	struct hvc_struct *hp = tty->driver_data;
+	struct hvc_struct *hp = tty ? tty->driver_data : NULL;
+	struct hv_ops *ops = (hp && hp->ops) ? hp->ops : cons_ops[last_hvc];
+	uint32_t vtno = hp ? hp->vtermno : vtermnos[last_hvc];
 	int n;
 	char ch;
 
-	n = hp->ops->get_chars(hp->vtermno, &ch, 1);
+	n = ops->get_chars(vtno, &ch, 1);
 
 	if (n == 0)
 		return NO_POLL_CHAR;
@@ -822,11 +824,14 @@
 static void hvc_poll_put_char(struct tty_driver *driver, int line, char ch)
 {
 	struct tty_struct *tty = driver->ttys[0];
-	struct hvc_struct *hp = tty->driver_data;
+	struct hvc_struct *hp = tty ? tty->driver_data : NULL;
+	struct hv_ops *ops = (hp && hp->ops) ? hp->ops : cons_ops[last_hvc];
+	uint32_t vtno = hp ? hp->vtermno : vtermnos[last_hvc];
+
 	int n;
 
 	do {
-		n = hp->ops->put_chars(hp->vtermno, &ch, 1);
+		n = ops->put_chars(vtno, &ch, 1);
 	} while (n <= 0);
 }
 #endif
Index: linux-3.18.24/kernel/debug/debug_core.c
===================================================================
--- linux-3.18.24.orig/kernel/debug/debug_core.c	2015-11-05 04:18:25.330280584 +0100
+++ linux-3.18.24/kernel/debug/debug_core.c	2015-11-05 04:18:35.843472420 +0100
@@ -592,12 +592,14 @@
 		kgdb_roundup_cpus(flags);
 #endif
 
+#ifndef CONFIG_XEN
 	/*
 	 * Wait for the other CPUs to be notified and be waiting for us:
 	 */
 	while (kgdb_do_roundup && (atomic_read(&masters_in_kgdb) +
 				atomic_read(&slaves_in_kgdb)) != online_cpus)
 		cpu_relax();
+#endif
 
 	/*
 	 * At this point the primary processor is completely
