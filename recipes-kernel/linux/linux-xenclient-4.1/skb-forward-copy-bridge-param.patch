################################################################################
SHORT DESCRIPTION: 
################################################################################
Add a module parameter to enable skb forward copy.

################################################################################
LONG DESCRIPTION: 
################################################################################
When the parameter is enabled, the bridge will pass copy of the skb and release
the initial one.

################################################################################
CHANGELOG 
################################################################################
Original author: Ross Phillipson <philipsonr@ainfosec.com>
Port to 3.18: Eric Chanudet <chanudete@ainfosec.com>

################################################################################
REMOVAL 
################################################################################
?

################################################################################
UPSTREAM PLAN
################################################################################
None.

################################################################################
INTERNAL DEPENDENCIES 
################################################################################
None.

################################################################################
PATCHES 
################################################################################
Index: linux-4.1.6/net/bridge/br_forward.c
===================================================================
--- linux-4.1.6.orig/net/bridge/br_forward.c	2015-09-11 15:18:57.810591918 +0200
+++ linux-4.1.6/net/bridge/br_forward.c	2015-09-11 15:19:25.930209911 +0200
@@ -11,6 +11,7 @@
  *	2 of the License, or (at your option) any later version.
  */
 
+#include <linux/module.h>
 #include <linux/err.h>
 #include <linux/slab.h>
 #include <linux/kernel.h>
@@ -21,6 +22,10 @@
 #include <linux/netfilter_bridge.h>
 #include "br_private.h"
 
+static int br_skb_forward_copy = 0;
+module_param_named(skb_forward_copy, br_skb_forward_copy, uint, S_IRUGO);
+MODULE_PARM_DESC(skb_forward_copy, "Enable or disable SKB copying on forward path");
+
 static int deliver_clone(const struct net_bridge_port *prev,
 			 struct sk_buff *skb,
 			 void (*__packet_hook)(const struct net_bridge_port *p,
@@ -37,12 +42,22 @@
 
 int br_dev_queue_push_xmit(struct sock *sk, struct sk_buff *skb)
 {
+	struct sk_buff *new_skb;
+
 	if (!is_skb_forwardable(skb->dev, skb)) {
 		kfree_skb(skb);
 	} else {
 		skb_push(skb, ETH_HLEN);
 		br_drop_fake_rtable(skb);
-		dev_queue_xmit(skb);
+		if (!br_skb_forward_copy)
+			dev_queue_xmit(skb);
+		else {
+			new_skb = skb_copy(skb, GFP_ATOMIC);
+			if (new_skb) {
+				dev_queue_xmit(new_skb);
+				kfree_skb(skb);
+			}
+		}
 	}
 
 	return 0;
