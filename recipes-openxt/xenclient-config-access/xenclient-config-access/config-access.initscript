#! /bin/sh
#
# Copyright (c) 2012 Citrix Systems, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

#
# Setup config partition
#

. /etc/init.d/functions

RAMDIR=/mnt/secure
KEYFILE="${RAMDIR}/hardware.key"
CONFIG_LV=xenclient-config

access () {
sig=$(dd if="/dev/mapper/${CONFIG_LV}" bs=4 count=1 2>/dev/null)
case "$sig" in
LUKS)
	keycmd="get-config-key"
	eval $keycmd | cryptsetup -q -d - luksOpen \
	    "/dev/mapper/${CONFIG_LV}" config >/dev/null 2>&1 || {
	    {
		clear
		echo '** ERROR: Unauthorized system modification detected! **'
		echo ""
		echo "Contact your system administrator or enter the administrative"
		echo "passphrase now to certify these changes."
		while true
		do
		    # read -p ignores the output redirection
		    echo -e -n "\nEnter administrative passphrase to proceed: "
		    read -s pw
		    echo
		    echo -n "$pw" | cryptsetup -q -d - luksOpen \
		        "/dev/mapper/${CONFIG_LV}" \
		        config >/dev/null 2>&1 && {
                                echo -n "Would you like to reseal the device with the current configuration ? [y/N] "
                                read opt
                                [ "$opt" == "y" ] && reseal_requested=yes
                                break
                        }
		    echo Incorrect password
		done
	    }
	}
	[ -n "$reseal_requested" ] && {
	    echo "Resealing..."

	    eval $keycmd > $KEYFILE

	    echo -n "$pw" |  cryptsetup -q -d - luksKillSlot \
		"/dev/mapper/${CONFIG_LV}" 0 || {
		echo "cryptsetup luksKillSlot failed: $?"
	    }

	    echo -n "$pw" | cryptsetup -q -i 600 -d - -S $slot luksAddKey \
		"/dev/mapper/${CONFIG_LV}" $KEYFILE || {
		echo "cryptsetup luksAddKey failed: $?"
	    }

	    rm $KEYFILE

	    echo "Resealing DONE."
	    sleep 3
	}
	;;
*)
	# We want to do this (for some sort of ref counting)
	# but the lvm/dm versions used don't allow this (anymore).
	# secs=$(dmsetup table "${CONFIG_LV}" | cut -f2 -d\ )
	# echo 0 ${secs} linear "/dev/mapper/${CONFIG_LV}" 0 | dmsetup create config
	# Instead make a symlink:
	ln -fs xenclient-config /dev/mapper/config
	;;
esac

}

case "$1" in
start|"")
	[ -e /dev/mapper/config ] && {
		echo "there is already a /dev/mapper/config, exiting."
		restore_mount_firstboot /config
		exit 0
	}	

	access

	# fail loudly and early...
	while true; do
		mount -t ext4 -o errors=remount-ro /dev/mapper/config /config && break
		echo "mount failed, will retry"
	done
	restore_mount_firstboot /config
	;;

stop)
	umount /dev/mapper/config
	sig=$(dd if="/dev/mapper/${CONFIG_LV}" bs=4 count=1 2>/dev/null)
	case "$sig" in
	LUKS)
		cryptsetup -q luksClose config >/dev/null
		;;
	*)
		# See above
		# dmsetup remove config
		rm -f /dev/mapper/config
		;;
	esac
	;;
*)
	echo "Usage: config {start|stop}" >&2
	exit 1
	;;
esac
