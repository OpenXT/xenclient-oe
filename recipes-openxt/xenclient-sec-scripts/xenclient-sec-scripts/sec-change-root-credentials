#! /bin/sh
#
# Copyright (c) 2012 Citrix Systems, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

newpassfile="$1"
oldpassfile="$2"

exec 3>&2
[ -z "$V" ] && exec >/dev/null 2>&1
err () { echo >&3 "$@"; }

RAMDIR=/mnt/secure
CONFIG=/dev/xenclient/config
KEYDIR=/boot/system/config
RECOVERY_PRIVATE_KEY=${KEYDIR}/recovery-private-key.conf
RECOVERY_PUBLIC_KEY=${KEYDIR}/recovery-public-key.conf
RECOVERY_DISK_KEY=${KEYDIR}/recovery-disk-key.ssl

KEY=${RAMDIR}/disk.key
TMPPRIV=${RAMDIR}/recovery-private-key
TMPPUB=${RAMDIR}/recovery-public-key
TMPRECOVERYKEY=${RAMDIR}/recovery-disk-key.ssl

cleanup()
{
    dd if=/dev/zero bs=2048 count=1 of=${newpassfile}
    dd if=/dev/zero bs=2048 count=1 of=${oldpassfile}
    dd if=/dev/zero bs=2048 count=1 of=${KEY}
    dd if=/dev/zero bs=2048 count=1 of=${TMPPRIV}
    dd if=/dev/zero bs=2048 count=1 of=${TMPPUB}
    dd if=/dev/zero bs=2048 count=1 of=${TMPRECOVERYKEY}
    sync
    rm -f ${KEY} ${TMPPRIV} ${TMPPUB} ${TMPRECOVERYKEY} ${newpassfile} ${oldpassfile}
    sync
}

# Generate recovery key pair
openssl genrsa -des3 -out "${TMPPRIV}" -passout file:"${newpassfile}" 2048 || {
    err $0: generating private key failed: $?
    cleanup
    exit 2
  }

openssl rsa -des3 -pubout -out "${TMPPUB}" -in "${TMPPRIV}" -passin file:"${newpassfile}" || {
    err $0: generating public key failed: $?
    cleanup
    exit 3
  }

# Decrypt & reencrypt disk key
if [ $# -eq 2 ]; then
    openssl rsautl -decrypt -inkey "${RECOVERY_PRIVATE_KEY}" -in "${RECOVERY_DISK_KEY}" -out "${KEY}" -passin file:"${oldpassfile}" || {
	err $0: decrypting disk key failed: $?
	cleanup
	exit 4
    }
else
    openssl rsautl -decrypt -inkey "${RECOVERY_PRIVATE_KEY}" -in "${RECOVERY_DISK_KEY}" -out "${KEY}" || {
	err $0: decrypting disk key failed: $?
	cleanup
	exit 4
    }
fi


openssl rsautl -encrypt -inkey "${TMPPUB}" -pubin -in ${KEY} -out "${TMPRECOVERYKEY}" || {
    err $0: encrypting disk key failed: $?
    cleanup
    exit 5
  }

# TODO: replace this by PAM module. Set root pass.
(cat "$oldpassfile" && echo -n -e "\nroot:" && cat "$newpassfile") | chpasswd || {
    err $0: failed to change root password: $?
    cleanup
    exit 6
  }

rm -f ${KEY}

dd if=/dev/zero bs=2048 count=1 of=${RECOVERY_PUBLIC_KEY}
dd if=/dev/zero bs=2048 count=1 of=${RECOVERY_PRIVATE_KEY}

sync

cp ${TMPPRIV}        ${RECOVERY_PRIVATE_KEY}
cp ${TMPPUB}         ${RECOVERY_PUBLIC_KEY}
cp ${TMPRECOVERYKEY} ${RECOVERY_DISK_KEY}

cleanup

exit 0

