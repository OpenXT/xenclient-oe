#!/bin/sh

# fix broken $UID on some system...
if test "x$UID" = "x"; then
  if test -x /usr/xpg4/bin/id; then
    UID=`/usr/xpg4/bin/id -u`;
  else
    UID=`id -u`;
  fi
fi

# set $XDG_MENU_PREFIX to "xfce-" so that "xfce-applications.menu" is picked
# over "applications.menu" in all Xfce applications.
if test "x$XDG_MENU_PREFIX" = "x"; then
  XDG_MENU_PREFIX="xfce-"
  export XDG_MENU_PREFIX
fi

# set DESKTOP_SESSION so that one can detect easily if an Xfce session is running
if test "x$DESKTOP_SESSION" = "x"; then
  DESKTOP_SESSION="xfce"
  export DESKTOP_SESSION
fi

# set XDG_CURRENT_DESKTOP so that Qt 5 applications can identify user set Xfce theme
if test "x$XDG_CURRENT_DESKTOP" = "x"; then
  XDG_CURRENT_DESKTOP="XFCE"
  export XDG_CURRENT_DESKTOP
fi

# $XDG_CONFIG_HOME defines the base directory relative to which user specific
# configuration files should be stored. If $XDG_CONFIG_HOME is either not set
# or empty, a default equal to $HOME/.config should be used.
if test "x$XDG_CONFIG_HOME" = "x" ; then
  XDG_CONFIG_HOME=$HOME/.config
fi
[ -d "$XDG_CONFIG_HOME" ] || mkdir "$XDG_CONFIG_HOME"

# $XDG_CACHE_HOME defines the base directory relative to which user specific
# non-essential data files should be stored. If $XDG_CACHE_HOME is either not
# set or empty, a default equal to $HOME/.cache should be used.
if test "x$XDG_CACHE_HOME" = "x" ; then
  XDG_CACHE_HOME=$HOME/.cache
fi
[ -d "$XDG_CACHE_HOME" ] || mkdir "$XDG_CACHE_HOME"

# set up XDG user directores.  see
# http://freedesktop.org/wiki/Software/xdg-user-dirs
if which xdg-user-dirs-update >/dev/null 2>&1; then
    xdg-user-dirs-update
fi

# Modify libglade and glade environment variables so that
# it will find the files installed by Xfce
GLADE_CATALOG_PATH="$GLADE_CATALOG_PATH:"
GLADE_PIXMAP_PATH="$GLADE_PIXMAP_PATH:"
GLADE_MODULE_PATH="$GLADE_MODULE_PATH:"
export GLADE_CATALOG_PATH
export GLADE_PIXMAP_PATH
export GLADE_MODULE_PATH

# For now, start with an empty list
XRESOURCES=""

# Has to go prior to merging Xft.xrdb, as its the "Defaults" file
test -r "/etc/xdg/xfce4/Xft.xrdb" && XRESOURCES="$XRESOURCES /etc/xdg/xfce4/Xft.xrdb"
test -r $HOME/.Xdefaults && XRESOURCES="$XRESOURCES $HOME/.Xdefaults"

BASEDIR=$XDG_CONFIG_HOME/xfce4
if test -r "$BASEDIR/Xft.xrdb"; then
  XRESOURCES="$XRESOURCES $BASEDIR/Xft.xrdb"
elif test -r "$XFCE4HOME/Xft.xrdb"; then
  mkdir -p "$BASEDIR"
  cp "$XFCE4HOME/Xft.xrdb" "$BASEDIR"/
  XRESOURCES="$XRESOURCES $BASEDIR/Xft.xrdb"
fi

# merge in X cursor settings
test -r "$BASEDIR/Xcursor.xrdb" && XRESOURCES="$XRESOURCES $BASEDIR/Xcursor.xrdb"

# ~/.Xresources contains overrides to the above
test -r "$HOME/.Xresources" && XRESOURCES="$XRESOURCES $HOME/.Xresources"

# load all X resources (adds /dev/null to avoid an empty list that would hang the process)
cat /dev/null $XRESOURCES | xrdb -nocpp -merge -

# load local modmap
test -r $HOME/.Xmodmap && xmodmap $HOME/.Xmodmap

# xfce4-session will very likely use iceauth. Handle the read-only rootfs case
# using the volatile tmpfs.
# WARNING: This cannot be a link as libICE will link(2) "${ICEAUTHORITY}"-c and
# "${ICEAUTHORITY}"-l files during IceLockAuthFile() and IceUnlockAuthFile().
if which iceauth >/dev/null ; then
  if grep -q '\sro[\s,]' /proc/mounts ; then
    ICEAUTHORITY="/var/volatile/ICEauthority-$UID"
  else
    ICEAUTHORITY="$HOME/.ICEauthority"
  fi
  export ICEAUTHORITY
fi

# Use dbus-launch if installed.
if test x"$DBUS_SESSION_BUS_ADDRESS" = x""; then
  if which dbus-launch >/dev/null 2>&1; then
    eval `dbus-launch --sh-syntax --exit-with-session`
    # some older versions of dbus don't export the var properly
    export DBUS_SESSION_BUS_ADDRESS
  else
    echo "Could not find dbus-launch; Xfce will not work properly" >&2
    fi
fi

xfwm4 --daemon
resized &
xfsettingsd --no-daemon --replace &
sleep 1 # Because proper behaviour no longer matter.
INET_IS_ARGO=1 LD_PRELOAD=/usr/lib/libargo-1.0.so.0 surf -bdFgKnp 1.0.0.0 &

# Launch nm-applet unless clearly specified in the db.
# Means bounce DBus calls over argo to xenmgr in Dom0.
DISABLE_NM=$( \
  DBUS_SYSTEM_BUS_ADDRESS=tcp:host=1.0.0.0,port=5555 \
  LD_PRELOAD=/usr/lib/libargo-1.0.so.0 \
  INET_IS_ARGO=1 \
    dbus-send \
      --system \
      --dest=com.citrix.xenclient.xenmgr \
      --print-reply \
      / org.freedesktop.DBus.Properties.Get \
        string:"com.citrix.xenclient.xenmgr.config" \
        string:"guest-only-networking" \
    | awk 'END{print $3}')

if test x"$DISABLE_NM" = x"true" ; then
  # Suspend xinit to keep X alive... Beauty is dead.
  read
else
  keymap-agent &
  nm-applets-agent &
  uim-toolbar-gtk-agent &
fi

# Wait until something dies and terminate other subprocess.
# This will leverage /etc/inittab:
#   x:5:respawn:/bin/su - root -c /usr/bin/startxfce4
# and restart the UI if any of the previous
# sub-process fails.
wait -n
pkill -P $$
