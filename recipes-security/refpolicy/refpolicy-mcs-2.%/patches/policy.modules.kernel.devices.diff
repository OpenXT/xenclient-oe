--- a/policy/modules/kernel/devices.fc
+++ b/policy/modules/kernel/devices.fc
@@ -178,7 +178,10 @@ ifdef(`distro_suse', `
 /dev/usb/mdc800.*	-c	gen_context(system_u:object_r:scanner_device_t,s0)
 /dev/usb/scanner.*	-c	gen_context(system_u:object_r:scanner_device_t,s0)
 
+/dev/xen-acpi-wmi	-c	gen_context(system_u:object_r:xen_device_t,s0)
 /dev/xen/blktap.*	-c	gen_context(system_u:object_r:xen_device_t,s0)
+/dev/xen/tapdev.*	-b	gen_context(system_u:object_r:xen_device_t,s0)
+/dev/xen/eventchn	-l	gen_context(system_u:object_r:xen_device_t,s0)
 /dev/xen/evtchn		-c	gen_context(system_u:object_r:xen_device_t,s0)
 /dev/xen/gntdev		-c	gen_context(system_u:object_r:xen_device_t,s0)
 /dev/xen/gntalloc	-c	gen_context(system_u:object_r:xen_device_t,s0)
--- a/policy/modules/kernel/devices.if
+++ b/policy/modules/kernel/devices.if
@@ -4186,6 +4186,24 @@ interface(`dev_rw_sysfs',`
 
 ########################################
 ## <summary>
+##	Allow caller to create sysfs nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_create_sysfs_nodes',`
+	gen_require(`
+		type sysfs_t;
+	')
+
+	allow $1 sysfs_t:file create;
+')
+
+########################################
+## <summary>
 ##	Relabel from/to all sysfs types.
 ## </summary>
 ## <param name="domain">
@@ -4349,7 +4367,7 @@ interface(`dev_setattr_generic_usb_dev',
 #
 interface(`dev_read_generic_usb_dev',`
 	gen_require(`
-		type usb_device_t;
+		type device_t, usb_device_t;
 	')
 
 	read_chr_files_pattern($1, device_t, usb_device_t)
@@ -4887,6 +4905,8 @@ interface(`dev_rw_xen',`
 		type device_t, xen_device_t;
 	')
 
+	rw_blk_files_pattern($1, device_t, xen_device_t)
+	dev_read_lnk_xen($1)
 	rw_chr_files_pattern($1, device_t, xen_device_t)
 ')
 
@@ -4905,6 +4925,10 @@ interface(`dev_manage_xen',`
 		type device_t, xen_device_t;
 	')
 
+	dev_read_lnk_xen($1)
+	add_entry_dirs_pattern($1, device_t, xen_device_t)
+	manage_lnk_files_pattern($1, device_t, xen_device_t)
+	manage_blk_files_pattern($1, device_t, xen_device_t)
 	manage_chr_files_pattern($1, device_t, xen_device_t)
 ')
 
@@ -4929,7 +4953,34 @@ interface(`dev_filetrans_xen',`
 		type device_t, xen_device_t;
 	')
 
-	filetrans_pattern($1, device_t, xen_device_t, chr_file, $2)
+	filetrans_pattern($1, device_t, xen_device_t, { chr_file blk_file }, $2)
+')
+
+########################################
+## <summary>
+##	Automatic type transition to the type
+##	for blktap directory when created in /dev/xen
+##	for blktap device nodes when created in /dev/xen/<blktap-directory>
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="dirname" optional="true">
+##	<summary>
+##	The name of the directory object being created.
+##	</summary>
+## </param>
+#
+interface(`dev_filetrans_blktap',`
+	gen_require(`
+		type device_t, xen_device_t, blktap_device_t;
+	')
+
+	filetrans_pattern($1, device_t, xen_device_t, { dir }, $2)
+	create_dirs_pattern($1, xen_device_t, xen_device_t)
+	filetrans_pattern($1, xen_device_t, blktap_device_t, { chr_file blk_file })
 ')
 
 ########################################
@@ -5102,3 +5153,171 @@ interface(`dev_unconfined',`
 
 	typeattribute $1 devices_unconfined_type;
 ')
+
+########################################
+## <summary>
+##     Create generic fifo files.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`dev_create_generic_fifo_files',`
+       gen_require(`
+               type device_t;
+       ')
+
+       create_fifo_files_pattern($1, device_t, device_t)
+')
+
+########################################
+## <summary>
+##     Create, read, and write device nodes. The node
+##     will be transitioned to the type provided.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+## <param name="file">
+##     <summary>
+##     Type to which the created node will be transitioned.
+##     </summary>
+## </param>
+## <param name="objectclass(es)">
+##     <summary>
+##     Object class(es) (single or set including {}) for which this
+##     the transition will occur.
+##     </summary>
+## </param>
+#
+interface(`dev_ranged_filetrans',`
+       gen_require(`
+               type device_t;
+       ')
+
+       filetrans_pattern($1, device_t, $2, $3)
+
+       fs_associate_tmpfs($2)
+       files_associate_tmp($2)
+
+       ifdef(`enable_mcs',`
+               range_transition $1 device_t:$3 $4;
+       ')
+
+       ifdef(`enable_mls',`
+               range_transition $1 device_t:$3 $4;
+       ')
+')
+
+########################################
+## <summary>
+##     Dontaudit attemps to write to the usbfs directory.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     The process type writing to usbfs_t
+##     </summary>
+## </param>
+#
+interface(`dev_dontaudit_write_usbfs',`
+       gen_require(`
+               type usbfs_t;
+       ')
+
+       dontaudit $1 usbfs_t:dir write;
+')
+
+########################################
+## <summary>
+##     Read symlinks to Xen devices.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`dev_read_lnk_xen',`
+       gen_require(`
+               type device_t, xen_device_t;
+       ')
+
+       read_lnk_files_pattern($1, device_t, xen_device_t)
+')
+
+########################################
+## <summary>
+##     Search Xen devices.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`dev_search_xen',`
+       gen_require(`
+               type device_t, xen_device_t;
+       ')
+
+       search_dirs_pattern($1, device_t, xen_device_t)
+')
+
+########################################
+## <summary>
+##     Get attributes of Xen devices.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`dev_getattr_xen',`
+       gen_require(`
+               type device_t, xen_device_t;
+       ')
+
+       getattr_blk_files_pattern($1, device_t, xen_device_t)
+       getattr_chr_files_pattern($1, device_t, xen_device_t)
+')
+
+########################################
+## <summary>
+##      Unconfined readonly access to devices.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`dev_unconfined_readonly',`
+        gen_require(`
+                attribute devices_unconfined_readonly_type;
+        ')
+
+        typeattribute $1 devices_unconfined_readonly_type;
+')
+
+########################################
+## <summary>
+##      Read and write the loop devices.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`dev_rw_loop_device',`
+        gen_require(`
+                type device_t, loop_control_device_t;
+        ')
+
+        rw_chr_files_pattern($1, device_t, loop_control_device_t)
+')
--- a/policy/modules/kernel/devices.te
+++ b/policy/modules/kernel/devices.te
@@ -9,6 +9,7 @@ attribute device_node;
 attribute memory_raw_read;
 attribute memory_raw_write;
 attribute devices_unconfined_type;
+attribute devices_unconfined_readonly_type;
 attribute sysfs_types;
 
 #
@@ -333,3 +334,11 @@ files_associate_tmp(device_node)
 allow devices_unconfined_type self:capability sys_rawio;
 allow devices_unconfined_type device_node:{ blk_file chr_file } *;
 allow devices_unconfined_type mtrr_device_t:file *;
+
+########################################
+#
+# Unconfined readonly access to this module
+#
+allow devices_unconfined_readonly_type device_node:{ blk_file chr_file } { read getattr open ioctl lock};
+allow devices_unconfined_readonly_type device_node: lnk_file read_lnk_file_perms;
+allow devices_unconfined_readonly_type mtrr_device_t:file { read getattr };
