--- a/policy/modules/kernel/filesystem.if
+++ b/policy/modules/kernel/filesystem.if
@@ -4463,6 +4463,41 @@ interface(`fs_tmpfs_filetrans',`
 
 ########################################
 ## <summary>
+##	Create an object in a tmpfs filesystem, with a specified MCS range.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="private type">
+##	<summary>
+##	The type of the object to be created.
+##	</summary>
+## </param>
+## <param name="object">
+##	<summary>
+##	The object class of the object being created.
+##	</summary>
+## </param>
+## <param name="range">
+##	<summary>
+##	The range transition to perform.
+##	</summary>
+## </param>
+#
+interface(`fs_tmpfs_rangetrans',`
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	ifdef(`enable_mcs',`
+        	range_transition $1 tmpfs_t:$2 $3;
+	')
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to getattr
 ##	generic tmpfs files.
 ## </summary>
@@ -5002,7 +5037,24 @@ interface(`fs_manage_xenfs_files',`
 
 	manage_files_pattern($1, xenfs_t, xenfs_t)
 ')
+########################################
+## <summary>
+##      Read, write files on a XENFS filesystem.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+## <rolecap/>
+#
+interface(`fs_rw_xenfs_files',`
+        gen_require(`
+                type xenfs_t;
+        ')
 
+        rw_files_pattern($1, xenfs_t, xenfs_t)
+')
 ########################################
 ## <summary>
 ##	Do not audit attempts to create,
@@ -5060,6 +5112,24 @@ interface(`fs_remount_all_fs',`
 	allow $1 filesystem_type:filesystem remount;
 ')
 
+######################################
+## <summary>
+##      Unconfined readonly access to filesystems
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`fs_unconfined_readonly',`
+        gen_require(`
+                attribute filesystem_unconfined_readonly_type;
+        ')
+
+        typeattribute $1 filesystem_unconfined_readonly_type;
+')
+
 ########################################
 ## <summary>
 ##	Unmount all filesystems.
--- a/policy/modules/kernel/filesystem.te
+++ b/policy/modules/kernel/filesystem.te
@@ -7,6 +7,7 @@ policy_module(filesystem, 1.25.0)
 
 attribute filesystem_type;
 attribute filesystem_unconfined_type;
+attribute filesystem_unconfined_readonly_type;
 attribute noxattrfs;
 attribute xattrfs;
 
@@ -47,6 +48,7 @@ fs_use_xattr zfs gen_context(system_u:ob
 fs_use_task eventpollfs gen_context(system_u:object_r:fs_t,s0);
 fs_use_task pipefs gen_context(system_u:object_r:fs_t,s0);
 fs_use_task sockfs gen_context(system_u:object_r:fs_t,s0);
+fs_use_task argofs gen_context(system_u:object_r:fs_t,s0);
 
 ##############################
 #
@@ -208,6 +210,7 @@ fs_use_trans shm gen_context(system_u:ob
 fs_use_trans tmpfs gen_context(system_u:object_r:tmpfs_t,s0);
 
 allow tmpfs_t noxattrfs:filesystem associate;
+dev_associate(tmpfs_t)
 
 type xenfs_t;
 fs_noxattr_type(xenfs_t)
@@ -328,3 +331,16 @@ allow filesystem_unconfined_type filesys
 allow filesystem_unconfined_type filesystem_type:blk_file { manage_blk_file_perms relabelfrom relabelto map execute swapon quotaon mounton audit_access execmod };
 allow filesystem_unconfined_type filesystem_type:chr_file { manage_chr_file_perms relabelfrom relabelto map execute swapon quotaon mounton execute_no_trans entrypoint audit_access execmod };
 allow filesystem_unconfined_type filesystem_type:dir { manage_dir_perms relabelfrom relabelto append map execute swapon quotaon mounton add_name remove_name reparent search rmdir audit_access execmod };
+
+########################################
+#
+# Unconfined readonly access to this module
+#
+allow filesystem_unconfined_readonly_type filesystem_type:filesystem { getattr };
+
+# Read access to other files. fs_type is to pick up various
+# pseudo filesystem types that are applied to both the filesystem
+# and its files.
+allow filesystem_unconfined_readonly_type filesystem_type:{ file sock_file fifo_file chr_file blk_file } { getattr open };
+allow filesystem_unconfined_readonly_type filesystem_type: lnk_file { read_lnk_file_perms getattr_lnk_file_perms };
+allow filesystem_unconfined_readonly_type filesystem_type: dir { search_dir_perms list_dir_perms getattr_dir_perms };
