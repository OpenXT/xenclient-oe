#############################################################################
#
# Copyright (C) 2014 Citrix Systems, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#############################################################################

policy_module(dbd, 0.1)

###########################
#
#  Types and Transitions
#

type dbd_t;
type dbd_exec_t;
init_daemon_domain(dbd_t, dbd_exec_t)

type dbd_db_t;
files_type(dbd_db_t)

type dbd_tmp_t;
files_tmp_file(dbd_tmp_t)
files_tmp_filetrans(dbd_t, dbd_tmp_t, file)

type db_upgrade_t;
type db_upgrade_exec_t;
application_domain(db_upgrade_t, db_upgrade_exec_t)
role system_r types db_upgrade_t;

type db_backup_t;
files_type(db_backup_t)
xc_config_filetrans(db_upgrade_t, db_backup_t, dir)

################################
#
#  Permissions for dbd_t
#

dbus_connect_system_bus(dbd_t)
dbus_system_bus_client(dbd_t)

xc_config_filetrans(dbd_t, dbd_db_t, { file dir });
xc_files_rw_argo_chr(dbd_t)

manage_files_pattern(dbd_t, dbd_db_t, dbd_db_t)
logging_send_syslog_msg(dbd_t)
fs_search_tmpfs(dbd_t)
corecmd_search_bin(dbd_t)
#corecmd_exec_bin(dbd_t)

xen_stream_connect_xenstore(dbd_t)

allow dbd_t dbd_db_t:dir manage_dir_perms;
allow dbd_t dbd_db_t:file manage_file_perms;
allow dbd_t dbd_tmp_t:file manage_file_perms;
allow dbd_t self:unix_dgram_socket create_socket_perms;

################################
#
#  Permissions for db_upgrade_t
#
auth_use_nsswitch(db_upgrade_t)
auth_getattr_shadow(db_upgrade_t)
corecmd_exec_bin(db_upgrade_t)
corecmd_exec_shell(db_upgrade_t)
db_manage_files(db_upgrade_t)
dev_search_sysfs(db_upgrade_t)

files_read_etc_files(db_upgrade_t)
files_read_etc_runtime_files(db_upgrade_t)
files_read_all_files(db_upgrade_t)
files_read_all_symlinks(db_upgrade_t)
files_search_boot(db_upgrade_t)
init_use_fds(db_upgrade_t)
input_server_read_config(db_upgrade_t)
kernel_read_system_state(db_upgrade_t)
lvm_read_config(db_upgrade_t)
lvm_search_metadata_dirs(db_upgrade_t)
rsync_exec(db_upgrade_t)
term_read_console(db_upgrade_t)
term_write_console(db_upgrade_t)
xc_read_config_files(db_upgrade_t)
xc_config_sec_dir_list(db_upgrade_t)
xc_read_etc_files(db_upgrade_t)
xc_list_config_key_dirs(db_upgrade_t)
xc_read_config_key_files(db_upgrade_t)
xc_list_vhd_key_dirs(db_upgrade_t)
xc_read_vhd_key_files(db_upgrade_t)
xc_read_repo_config_file(db_upgrade_t)
xc_config_sec_files_read(db_upgrade_t)
xc_config_files_read(db_upgrade_t)
xc_config_files_write(db_upgrade_t)
xc_config_socks_manage(db_upgrade_t)
xc_list_storage(db_upgrade_t)
# remove flag files created by init.root-ro
init_delete_flag_files(db_upgrade_t)

# direct access to shadow
auth_read_shadow(db_upgrade_t)
auth_can_read_shadow_passwords(db_upgrade_t)

optional_policy(`
	unconfined_domain(db_upgrade_t)
')

#pidof
domain_read_all_domains_state(db_upgrade_t)
domain_dontaudit_ptrace_all_domains(db_upgrade_t)
allow db_upgrade_t self:capability { chown dac_override fowner fsetid sys_ptrace };
allow db_upgrade_t self:process signal;

allow db_upgrade_t self:fifo_file manage_fifo_file_perms;

allow db_upgrade_t db_backup_t:dir manage_dir_perms;
allow db_upgrade_t db_backup_t:file manage_file_perms;
allow db_upgrade_t db_backup_t:lnk_file manage_lnk_file_perms;
allow db_upgrade_t db_backup_t:sock_file manage_sock_file_perms;
