#############################################################################
#
# Copyright (C) 2014 Citrix Systems, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#############################################################################

policy_module(vusb, 0.2)

########################################
#
# Declarations
#
type vusbd_t;
type vusbd_exec_t;
init_daemon_domain(vusbd_t,vusbd_exec_t)

type vusbc_t;
type vusbc_exec_t;
application_type(vusbc_t)
domain_entry_file(vusbc_t,vusbc_exec_t)
role system_r types vusbc_t;
xen_domtrans(vusbc_t,vusbc_exec_t)

type vusbd_etc_t;
files_config_file(vusbd_etc_t)

#######################################
#
# vusb daemon local policy
#
files_search_etc(vusbd_t)
files_read_etc_files(vusbd_t)
files_search_usr(vusbd_t)
libs_use_ld_so(vusbd_t)
dev_rw_usbfs(vusbd_t)
xc_config_dir_search(vusbd_t)
dbus_connect_system_bus(vusbd_t)
dbus_system_bus_client(vusbd_t)
dbd_dbus_chat(vusbd_t)
xen_dbus_send(vusbd_t)
qemu_sigchld(vusbd_t)
dev_search_sysfs(vusbd_t)
dev_rw_sysfs(vusbd_t)
dev_rw_generic_usb_dev(vusbd_t)
dev_read_rand(vusbd_t)
logging_send_syslog_msg(vusbd_t)
fs_list_inotifyfs(vusbd_t)
miscfiles_read_localization(vusbd_t)
kernel_search_debugfs(vusbd_t)
kernel_read_system_state(vusbd_t)
kernel_read_xen_state(vusbd_t)
kernel_write_xen_state(vusbd_t)
kernel_write_xen_state(vusbd_t)
xen_stream_connect_xenstore(vusbd_t)
udev_read_db(vusbd_t)
# For /var/run/udev/queue.bin
udev_read_pid_files(vusbd_t)

corecmd_search_bin(vusbd_t)
vusbc_exec_domtrans(vusbd_t)

# why dac_override?
allow vusbd_t self:capability dac_override;
allow vusbd_t self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr append bind connect getopt setopt shutdown } };
allow vusbd_t self:process { getsched signal };
allow vusbd_t self:fifo_file manage_fifo_file_perms;

files_etc_filetrans(vusbd_t, vusbd_etc_t, file)
allow vusbd_t vusbd_etc_t:lnk_file read_lnk_file_perms;
allow vusbd_t vusbd_etc_t:file manage_file_perms;

#######################################
#
# vusb command line tool policy
#
dev_rw_sysfs(vusbc_t)
dev_rw_generic_usb_dev(vusbc_t)
fs_list_inotifyfs(vusbc_t)
kernel_read_system_state(vusbc_t)
logging_send_syslog_msg(vusbc_t)
xen_dontaudit_rw_unix_stream_sockets(vusbc_t)
xen_stream_connect_xenstore(vusbc_t)
xen_write_tmp(vusbc_t)
fs_rw_xenfs_files(vusbc_t)
files_read_etc_files(vusbc_t)
udev_read_db(vusbc_t)

allow vusbc_t self:capability dac_override;
allow vusbc_t self:process { getsched signal };
