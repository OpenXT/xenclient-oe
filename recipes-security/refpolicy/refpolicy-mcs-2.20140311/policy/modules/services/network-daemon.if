#############################################################################
#
# Copyright (C) 2014 Citrix Systems, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#############################################################################

## <summary>XenClient daemon for managing network backends.</summary>

#######################################
## <summary>
##	Exchange messages with network_slave over dbus.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process chatting with network_slave over dbus.
##	</summary>
## </param>
#
interface(`network_slave_dbus_chat',`
	gen_require(`
		type network_slave_t;
		class dbus send_msg;
	')
	
	allow $1 network_slave_t:dbus	send_msg;
	allow network_slave_t $1:dbus	send_msg;
')

#######################################
## <summary>
##	Read and write network slave unix stream sockets
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process chatting with network_slave over dbus.
##	</summary>
## </param>
#
interface(`network_slave_rw_stream_sockets',`
	gen_require(`
		type network_slave_t;
	')
	
	allow $1 network_slave_t:unix_stream_socket rw_socket_perms;
')

########################################
## <summary>
##	Read and write to network slave fifos.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`network_slave_rw_fifo_files',`
	gen_require(`
		type network_slave_t;
	')

	allow $1 network_slave_t:fifo_file rw_fifo_file_perms;
')

########################################
## <summary>
##	Inherit and use a file descriptor from network slave.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`network_slave_use_fds',`
	gen_require(`
		type network_slave_t;
	')

	allow $1 network_slave_t:fd use;
')

########################################
## <summary>
##      Execute network-slave with a domain transition.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed to transition.
##      </summary>
## </param>
#
interface(`network_slave_domtrans',`
        gen_require(`
                type network_slave_t, network_slave_exec_t;
        ')

        corecmd_search_bin($1)
        domtrans_pattern($1, network_slave_exec_t, network_slave_t)
')
#######################################
## <summary>
##      Exchange messages with network_daemon over dbus.
## </summary>
## <param name="domain">
##      <summary>
##      The type of the process chatting with network_daemon over dbus.
##      </summary>
## </param>
#
interface(`network_daemon_dbus_chat',`
        gen_require(`
                type network_daemon_t;
                class dbus send_msg;
        ')

        allow $1 network_daemon_t:dbus   send_msg;
        allow network_daemon_t $1:dbus   send_msg;
')
