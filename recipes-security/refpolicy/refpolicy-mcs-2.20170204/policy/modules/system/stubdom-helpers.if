#############################################################################
#
# Copyright (C) 2014 Citrix Systems, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#############################################################################

## <summary>XenClient stubdom helper programs.</summary>

########################################
## <summary>
##	Execute a domain transition to run atapi_pt_helper.
## </summary>
## <param name="domain">
## 	<summary>
##	Domain allowed to transition.
## 	</summary>
## </param>
#
interface(`atapi_helper_domtrans',`
	gen_require(`
		type atapi_helper_t, atapi_helper_exec_t;
	')

	domtrans_pattern($1, atapi_helper_exec_t, atapi_helper_t)

	ifdef(`enable_mcs',`
		range_transition $1 atapi_helper_exec_t:process s0;
	')

	ifdef(`enable_mls',`
		range_transition $1 atapi_helper_exec_t:process s0;
		mls_rangetrans_target($1)
	')
')
########################################
## <summary>
##	Execute a domain transition to run audio_helper.
## </summary>
## <param name="domain">
## 	<summary>
##	Domain allowed to transition.
## 	</summary>
## </param>
#
interface(`audio_helper_domtrans',`
	gen_require(`
		type audio_helper_t, audio_helper_exec_t;
	')

	domtrans_pattern($1, audio_helper_exec_t, audio_helper_t)

	ifdef(`enable_mcs',`
		range_transition $1 audio_helper_exec_t:process s0;
	')

	ifdef(`enable_mls',`
		range_transition $1 audio_helper_exec_t:process s0;
		mls_rangetrans_target($1)
	')
')
########################################
## <summary>
##     Communicate with the audio_helper over shared memory.
## </summary>
## <desc>
## <p>
## This allows the audio_helper and qemu to access shared memory
## belonging to eachother as well as files on the tmpfs and semaphores.
## </p>
## </desc>
## <param name="domain">
##     <summary>
##     Domain allowed access.
##     </summary>
## </param>
## <param name="tmp_type">
##     <summary>
##     Type of files on the tmpfs belonging to the parameter domain.
##     </summary>
## </param>
#
interface(`audio_helper_communicate',`
	gen_require(`
		type audio_helper_t, audio_helper_tmpfs_t;
	')

	allow $1 audio_helper_t:shm { rw_shm_perms destroy setattr };
	allow $1 audio_helper_t:sem { rw_sem_perms destroy setattr };
	allow $1 audio_helper_tmpfs_t:file rw_file_perms;
	allow audio_helper_t $1:shm { rw_shm_perms setattr };
	allow audio_helper_t $1:sem { rw_sem_perms setattr };
	allow audio_helper_t $2:file rw_file_perms;
')
########################################
## <summary>
##	Send generic signals to the audio_helper.
## </summary>
## <param name="domain">
## 	<summary>
##	Domain allowed access.
## 	</summary>
## </param>
#
interface(`audio_helper_signal',`
	gen_require(`
		type audio_helper_t;
	')

	allow $1 audio_helper_t:process signal;
')
########################################
## <summary>
##	Send generic signals to the atapi_helper.
## </summary>
## <param name="domain">
## 	<summary>
##	Domain allowed access.
## 	</summary>
## </param>
#
interface(`atapi_helper_signal',`
	gen_require(`
		type atapi_helper_t;
	')

	allow $1 atapi_helper_t:process signal;
')
########################################
## <summary>
##	Read and write lock files belonging to the atapi_helper.
## </summary>
## <param name="domain">
## 	<summary>
##	Domain allowed access.
## 	</summary>
## </param>
#
interface(`atapi_helper_rw_lock_files',`
	gen_require(`
		type atapi_helper_lock_t;
	')

	files_search_locks($1)
	allow $1 atapi_helper_lock_t:file rw_file_perms;
')
########################################
## <summary>
##	Read and write tmpfs files belonging to the atapi_helper.
## </summary>
## <param name="domain">
## 	<summary>
##	Domain allowed access.
## 	</summary>
## </param>
#
interface(`atapi_helper_rw_tmpfs_files',`
	gen_require(`
		type atapi_helper_tmpfs_t;
	')

	fs_search_tmpfs($1)
	allow $1 atapi_helper_tmpfs_t:file rw_file_perms;
')
