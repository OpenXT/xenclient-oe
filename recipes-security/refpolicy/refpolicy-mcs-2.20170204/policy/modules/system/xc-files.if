#############################################################################
#
# Copyright (C) 2014 Citrix Systems, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#############################################################################

## <summary>Policy for XenClient system files.</summary>

########################################
## <summary>
##	Create an object in the XC config directory with a private type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="private type">
##	<summary>
##	The type of the object to be created.
##	</summary>
## </param>
## <param name="object">
##	<summary>
##	The object class of the object being created.
##	</summary>
## </param>
#
interface(`xc_config_filetrans',`
	gen_require(`
		type xc_config_t;
	')

	filetrans_pattern($1, xc_config_t, $2, $3)
')

########################################
## <summary>
##	Dont audit attempts to read config files.
##      This is a work around for XC-7647.
## </summary>
## <param name="domain">
##	<summary>
##	Dont audit failed accesses by this domain.
##	</summary>
## </param>
#
interface(`xc_dontaudit_read_etc_files',`
	gen_require(`
		type xc_etc_t;
        ')

        dontaudit $1 xc_etc_t:file read_file_perms;
')

########################################
## <summary>
##	Read config files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_etc_files',`
	gen_require(`
		type xc_etc_t;
        ')

	files_list_etc($1)
        allow $1 xc_etc_t:file read_file_perms;
')

########################################
## <summary>
##	Dont audit attempts to read and write to the argo sockets.
##	Xenmgr leaks these to its children.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_dontaudit_rw_argo_chr',`
	gen_require(`
		type argo_t, insmod_t;
		
	')

	dontaudit $1 argo_t:chr_file rw_chr_file_perms;
	dontaudit $1 self:dir rw_dir_perms;
')

########################################
## <summary>
##	Read and write to the argo sockets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_files_rw_argo_chr',`
	gen_require(`
		type argo_t, insmod_t;
		
	')

	dev_list_all_dev_nodes($1)
	allow $1 argo_t:chr_file rw_chr_file_perms;
	# TODO: related to argofs labeling, see socketfs as example
	allow $1 self:dir	rw_dir_perms;
')

########################################
## <summary>
##	Read from the ACPI video character device.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_video_device',`
	gen_require(`
		type xc_video_t;
	')

        allow $1 xc_video_t:chr_file read_chr_file_perms;
')

########################################
## <summary>
##	Read and write from / to the framebuffer tap character device.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_rw_fbtap_device',`
	gen_require(`
		type xc_fbtap_t;
	')

        allow $1 xc_fbtap_t:chr_file rw_chr_file_perms;
')

########################################
## <summary>
##	Search the contents of /storage directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_search_storage',`
	gen_require(`
		type xc_storage_t;
	')

	allow $1 xc_storage_t:dir search_dir_perms;
')

########################################
## <summary>
##	Dontaudit attempts to search the contents of /storage directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_dontaudit_search_storage',`
	gen_require(`
		type xc_storage_t;
	')

	dontaudit $1 xc_storage_t:dir search_dir_perms;
')

########################################
## <summary>
##	List the contents of /storage directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_list_storage',`
	gen_require(`
		type xc_storage_t;
	')

	allow $1 xc_storage_t:dir list_dir_perms;
')

########################################
## <summary>
##	Create entries in the /storage directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_create_storage_files',`
	gen_require(`
		type xc_storage_t;
	')

	create_files_pattern($1, xc_storage_t, xc_storage_t)
')

########################################
## <summary>
##	Write to entries in the /storage directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_write_storage_files',`
	gen_require(`
		type xc_storage_t;
	')

	write_files_pattern($1, xc_storage_t, xc_storage_t)
')

########################################
## <summary>
##	Dontaudit attempts to write to the /storage directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_dontaudit_write_storage_dirs',` 
	gen_require(`
		type xc_storage_t;
	')

	dontaudit $1 xc_storage_t:dir write;
')

########################################
## <summary>
##	Create an object in the XenClient storage directory, with a private
##	type using a type transition.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="private type">
##	<summary>
##	The type of the object to be created.
##	</summary>
## </param>
## <param name="object">
##	<summary>
##	The object class of the object being created.
##	</summary>
## </param>
#
interface(`xc_storage_filetrans',`
	gen_require(`
		type xc_storage_t;
	')

	filetrans_pattern($1, xc_storage_t, $2, $3)
')

########################################
## <summary>
##	Declare a type usable as a XC VM disk.
## </summary>
## <param name="type">
##	<summary>
##	Disk type.
##	</summary>
## </param>
#
interface(`xc_disk_type',`
	gen_require(`
		attribute xc_disk;
	')

	files_type($1)
	typeattribute $1 xc_disk;
')
########################################
## <summary>
##	Declare a type usable as a XC iso.
## </summary>
## <param name="type">
##	<summary>
##	Disk type.
##	</summary>
## </param>
#
interface(`xc_iso_type',`
	gen_require(`
		attribute xc_iso;
	')

	files_type($1)
	typeattribute $1 xc_iso;
')

########################################
## <summary>
##	Manage XC disk files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_manage_all_disks',`
	gen_require(`
		attribute xc_disk;
	')

	manage_files_pattern($1, xc_disk, xc_disk)
')

########################################
## <summary>
##      Read XC disk files.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_read_all_disks',`
        gen_require(`
                attribute xc_disk;
        ')

        read_files_pattern($1, xc_disk, xc_disk)
')

########################################
## <summary>
##      Write XC disk files.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_write_all_disks',`
        gen_require(`
                attribute xc_disk;
        ')

        write_files_pattern($1, xc_disk, xc_disk)
')

########################################
## <summary>
##	Create the /storage/disks directory with proper type.
##      Has the side effect of causing any directories created
##      in the /storage to have the same type.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_create_disks_dir',`
	gen_require(`
		type xc_storage_t, xc_client_disk_t;
	')

	xc_storage_filetrans($1, xc_client_disk_t, dir)
        create_dirs_pattern($1, xc_storage_t, xc_client_disk_t)
')

########################################
## <summary>
##	Search in the client virtual disk directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_search_client_disk_files',`
	gen_require(`
		type xc_storage_t, xc_client_disk_t;
	')

        search_dirs_pattern($1, xc_storage_t, xc_client_disk_t)
')

########################################
## <summary>
##	List the contents of the client virtual disk directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_list_client_disk_files',`
	gen_require(`
		type xc_storage_t, xc_client_disk_t;
	')

        list_dirs_pattern($1, xc_storage_t, xc_client_disk_t)
')

########################################
## <summary>
##	Create client virtual disk files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_create_client_disk_files',`
	gen_require(`
		type xc_client_disk_t;
	')

        xc_search_client_disk_files($1)
	create_files_pattern($1, xc_client_disk_t, xc_client_disk_t)
')

########################################
## <summary>
##	Read client virtual disk files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_client_disk_files',`
	gen_require(`
		type xc_client_disk_t;
	')
	
	xc_search_client_disk_files($1)
	read_files_pattern($1, xc_client_disk_t, xc_client_disk_t)
')

########################################
## <summary>
##	Write client virtual disk files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_write_client_disk_files',`
	gen_require(`
		type xc_client_disk_t;
	')

	write_files_pattern($1, xc_client_disk_t, xc_client_disk_t)
')

########################################
## <summary>
##	Delete client virtual disk files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_delete_client_disk_files',`
	gen_require(`
		type xc_client_disk_t;
	')

	delete_files_pattern($1, xc_client_disk_t, xc_client_disk_t)
')

########################################
## <summary>
##	Manage client virtual disk files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_manage_client_disk_files',`
	gen_require(`
		type xc_client_disk_t;
	')

        xc_search_client_disk_files($1)
	manage_files_pattern($1, xc_client_disk_t, xc_client_disk_t)
')

########################################
## <summary>
##      Manage sync client virtual disk files.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_manage_sync_client_disk_files',`
        gen_require(`
                type xc_sync_client_disk_t;
        ')

        xc_search_sync_client_disk_files($1)
        manage_files_pattern($1, xc_sync_client_disk_t, xc_sync_client_disk_t)
')

########################################
## <summary>
##      Create the /storage/disks/sync/[SYNCVM-NAME] 
##      or /storage/sync/[SYNCVM-NAME]/disks directory with proper type.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_create_sync_disks_dir',`
        gen_require(`
                type xc_storage_t, xc_sync_client_disk_t;
        ')

        xc_storage_filetrans($1, xc_sync_client_disk_t, dir)
        create_dirs_pattern($1, xc_storage_t, xc_sync_client_disk_t)
')

########################################
## <summary>
##      Search in the sync client virtual disk directory.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_search_sync_client_disk_files',`
        gen_require(`
                type xc_storage_t, xc_sync_client_disk_t;
        ')

        search_dirs_pattern($1, xc_storage_t, xc_sync_client_disk_t)
')

########################################
## <summary>
##      Read sync client VM disk files.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_read_sync_client_disk_files',`
        gen_require(`
                type xc_sync_client_disk_t;
        ')

        xc_search_sync_client_disk_dir($1)
        read_files_pattern($1, xc_sync_client_disk_t, xc_sync_client_disk_t)
')

########################################
## <summary>
##      Search in the sync client VM disk directories.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_search_sync_client_disk_dir',`
        gen_require(`
                type xc_sync_client_disk_t;
        ')

        allow $1 xc_sync_client_disk_t:dir search_dir_perms;
')

########################################
## <summary>
##      Read sync client config files in /config/sync/[SYNCVM-NAME]
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_read_sync_client_config_files',`
        gen_require(`
                type xc_sync_client_config_t;
        ')

        allow $1 xc_sync_client_config_t:dir search_dir_perms;
        allow $1 xc_sync_client_config_t:file read_file_perms; 
')

########################################
## <summary>
##      Get attributes of sync client config files in the /config/sync/[SYNCVM-NAME] directory.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_getattr_sync_client_config_files',`
        gen_require(`
                type xc_sync_client_config_t;
        ')

        allow $1 xc_sync_client_config_t:file getattr;
')

########################################
## <summary>
##      Write sync client  config files in the /config/sync/[SYNCVM-NAME] directory.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_write_sync_client_config_files',`
        gen_require(`
                type xc_sync_client_config_t;
        ')

        write_files_pattern($1, xc_sync_client_config_t, xc_sync_client_config_t)
')

########################################
## <summary>
##      Manage sync client dirs in the /config/sync/[SYNCVM-NAME] directory.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_manage_sync_client_config_dirs',`
        gen_require(`
                type xc_sync_client_config_t;
        ')

        allow $1 xc_sync_client_config_t:dir manage_dir_perms;
')

########################################
## <summary>
##      Manage sync client config files in the /config/sync/[SYNCVM-NAME] directory.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`xc_manage_sync_client_config_files',`
        gen_require(`
                type xc_sync_client_config_t;
        ')

        allow $1 xc_sync_client_config_t:file manage_file_perms;
')

########################################
## <summary>
##	Get attributes of the /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_config_dir_getattr',`
	gen_require(`
		type xc_config_t;
	')

	allow $1 xc_config_t:dir getattr;
')

########################################
## <summary>
##	Read symlinks in /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_config_symlinks',`
	gen_require(`
		type xc_config_t;
	')

	read_lnk_files_pattern($1, xc_config_t, xc_config_t)
')

########################################
## <summary>
##	Search the contents of /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_config_dir_search',`
	gen_require(`
		type xc_config_t;
	')

	allow $1 xc_config_t:dir search_dir_perms;
')

########################################
## <summary>
##	Dontaudit attempts to search the contents of /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_dontaudit_search_config_dir',`
	gen_require(`
		type xc_config_t;
	')

	dontaudit $1 xc_config_t:dir search_dir_perms;
')

########################################
## <summary>
##	Get attributes of generic files in the /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_getattr_config_files',`
	gen_require(`
		type xc_config_t;
	')

	allow $1 xc_config_t:file getattr;
')

########################################
## <summary>
##	Read generic files in the /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_config_files',`
	gen_require(`
		type xc_config_t;
	')

	xc_config_dir_search($1)
	allow $1 xc_config_t:file read_file_perms;
')

########################################
## <summary>
##	Unlink objects in the /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_unlink_config_objs',`
	gen_require(`
		type xc_config_t;
	')

	allow $1 xc_config_t:dir del_entry_dir_perms;
')

########################################
## <summary>
##	Manage generic dirs in the /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_manage_config_dirs',`
	gen_require(`
		type xc_config_t;
	')

	allow $1 xc_config_t:dir manage_dir_perms;
')

########################################
## <summary>
##	Relabelfrom generic dirs in the /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_relabelfrom_config_dirs',`
	gen_require(`
		type xc_config_t;
	')

	allow $1 xc_config_t:dir relabelfrom_dir_perms;
')

########################################
## <summary>
##	Read generic files in the /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_config_files_read',`
	gen_require(`
		type xc_config_t;
	')

	xc_config_dir_search($1)
	allow $1 xc_config_t:file read_file_perms;
')

########################################
## <summary>
##	Write generic files in the /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_config_files_write',`
	gen_require(`
		type xc_config_t;
	')

	write_files_pattern($1, xc_config_t, xc_config_t)
')

########################################
## <summary>
##	Manage generic socket files in the /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_config_socks_manage',`
	gen_require(`
		type xc_config_t;
	')

	manage_sock_files_pattern($1, xc_config_t, xc_config_t)
')

########################################
## <summary>
##	Getattrs of the service VM disk directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_getattr_service_disk_dir',`
	gen_require(`
		type xc_service_disk_t;
	')

	allow $1 xc_service_disk_t:dir getattr_dir_perms;
')

########################################
## <summary>
##	Search in the service VM disk directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_search_service_disk_dir',`
	gen_require(`
		type xc_service_disk_t;
	')

	allow $1 xc_service_disk_t:dir search_dir_perms;
')

########################################
## <summary>
##	Getattrs of the service VM disks.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_getattr_service_disk_files',`
	gen_require(`
		type xc_service_disk_t;
	')

	allow $1 xc_service_disk_t:file getattr_file_perms;
')

########################################
## <summary>
##	Read service VM disk files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_service_disk_files',`
	gen_require(`
		type xc_service_disk_t;
	')

	xc_search_service_disk_dir($1)
	read_files_pattern($1, xc_service_disk_t, xc_service_disk_t)
')

########################################
## <summary>
##	Read/Write service VM disk files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_rw_service_disk_files',`
	gen_require(`
		type xc_service_disk_t;
	')

	xc_read_service_disk_files($1)
	write_files_pattern($1, xc_service_disk_t, xc_service_disk_t)
')

########################################
## <summary>
##	Getattrs of the secure ramfs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_secure_dir_getattr',`
	gen_require(`
		type xc_secure_t;
	')
	allow $1 xc_secure_t:dir getattr_dir_perms;
')

########################################
## <summary>
##	Read the contents of the secure ramfs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_secure_files_read',`
	gen_require(`
		type xc_secure_t;
	')

	allow $1 xc_secure_t:dir search_dir_perms;
	allow $1 xc_secure_t:file read_file_perms;
')

########################################
## <summary>
##	Write the contents of the secure ramfs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_secure_files_write',`
	gen_require(`
		type xc_secure_t;
	')

	allow $1 xc_secure_t:dir search_dir_perms;
	allow $1 xc_secure_t:file write_file_perms;
')

########################################
## <summary>
##	Mange the contents of the secure ramfs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_secure_files_manage',`
	gen_require(`
		type xc_secure_t;
	')
	
	allow $1 xc_secure_t:dir rw_dir_perms;
	allow $1 xc_secure_t:file manage_file_perms;
')

########################################
## <summary>
##	Dontaudit attempts to write to the secure dirs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_dontaudit_write_secure_dirs',`
	gen_require(`
		type xc_secure_t;
	')
	
	allow $1 xc_secure_t:dir write;
')

########################################
## <summary>
##	List XC iso files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_list_iso_files',`
	gen_require(`
		type xc_config_t, xc_iso_t;
	')

	list_dirs_pattern($1, xc_config_t, xc_iso_t)
')

########################################
## <summary>
##	Getattrs XC iso files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_getattr_iso_files',`
	gen_require(`
		type xc_iso_t;
	')

	allow $1 xc_iso_t:file getattr_file_perms;
')

########################################
## <summary>
##	Read XC iso files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_iso_files',`
	gen_require(`
		attribute xc_iso;
	')
	
	read_files_pattern($1, xc_iso, xc_iso)
')

########################################
## <summary>
##	Write XC iso files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_write_iso_files',`
	gen_require(`
		attribute xc_iso;
	')
	write_files_pattern($1, xc_iso, xc_iso)
')

########################################
## <summary>
##	Do not audit attempts to get ISO file attributes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_dontaudit_getattr_iso_dirs',`
	gen_require(`
		type xc_iso_t;
	')

	dontaudit $1 xc_iso_t:dir getattr_dir_perms;
')

########################################
## <summary>
##	Don't audit write attempts on XC iso files.
##	Qemu opens iso files as read/write.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_dontaudit_write_iso_files',`
	gen_require(`
		type xc_iso_t;
	')
	
	dontaudit $1 xc_iso_t:file write_file_perms;
')

########################################
## <summary>
##	Search through /config directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_search_config_dirs',`
	gen_require(`
		type xc_config_t;
	')
	
	search_dirs_pattern($1, xc_config_t, xc_config_t)
')

########################################
## <summary>
##	Search through /config/sec/
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_search_config_sec_dirs',`
	gen_require(`
		type xc_config_t, xc_config_sec_t;
	')
	
	search_dirs_pattern($1, xc_config_t, xc_config_sec_t)
')

########################################
## <summary>
##	Do  not audit attempts to write to /config dir
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_dontaudit_write_config_dirs',`
	gen_require(`
		type xc_config_t;
	')
	
	dontaudit $1 xc_config_t:dir write_file_perms;
')

########################################
## <summary>
##	List the contents of /config/sec/
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_config_sec_dir_list',`
	gen_require(`
		type xc_config_sec_t;
	')
	
	allow $1 xc_config_sec_t:dir list_dir_perms;
')

########################################
## <summary>
##	Read files in /config/sec/
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_config_sec_files_read',`
	gen_require(`
		type xc_config_sec_t;
	')
	
	allow $1 xc_config_sec_t:dir search_dir_perms;
	allow $1 xc_config_sec_t:file read_file_perms;
')

########################################
## <summary>
##	Do  not audit attempts to read files in /config/sec/
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_dontaudit_config_sec_files_read',`
	gen_require(`
		type xc_config_sec_t;
	')
	
	dontaudit $1 xc_config_sec_t:file read_file_perms;
')

########################################
## <summary>
##	Manage files in /config/sec/
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_manage_config_sec_files',`
	gen_require(`
		type xc_config_sec_t;
	')
	
	manage_files_pattern($1, xc_config_sec_t, xc_config_sec_t)
')

########################################
## <summary>
##	Manage dirs in /config/sec/
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_manage_config_sec_dirs',`
	gen_require(`
		type xc_config_sec_t;
	')
	
	manage_dirs_pattern($1, xc_config_sec_t, xc_config_sec_t)
')

########################################
## <summary>
##	Get attributes of /config/platform-crypto-keys directory
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_getattr_vhd_key_dirs',`
	gen_require(`
		type xc_config_t, xc_vhd_key_t;
	')
	
	getattr_dirs_pattern($1, xc_config_t, xc_vhd_key_t)
')

########################################
## <summary>
##	Search through the /config/platform-crypto-keys directory
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_search_vhd_key_dirs',`
	gen_require(`
		type xc_config_t, xc_vhd_key_t;
	')
	
        search_dirs_pattern($1, xc_config_t, xc_vhd_key_t)
')

########################################
## <summary>
##	List through the /config/platform-crypto-keys directory
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_list_vhd_key_dirs',`
	gen_require(`
		type xc_config_t, xc_vhd_key_t;
	')
	
        list_dirs_pattern($1, xc_config_t, xc_vhd_key_t)
')

########################################
## <summary>
##	Read files containing VHD encryption keys.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_vhd_key_files',`
	gen_require(`
		type xc_vhd_key_t;
	')

	read_files_pattern($1, xc_vhd_key_t, xc_vhd_key_t)
')

########################################
## <summary>
##	Delete files containing VHD encryption keys.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_delete_vhd_key_files',`
	gen_require(`
		type xc_vhd_key_t;
	')

	delete_files_pattern($1, xc_vhd_key_t, xc_vhd_key_t)
')

########################################
## <summary>
##	Manage files containing VHD encryption keys.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_manage_vhd_key_files',`
	gen_require(`
		type xc_vhd_key_t;
	')

	manage_files_pattern($1, xc_vhd_key_t, xc_vhd_key_t)
')

########################################
## <summary>
##	Create an object in the XenClient config key directory, with a private
##	type using a type transition.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="private type">
##	<summary>
##	The type of the object to be created.
##	</summary>
## </param>
## <param name="object">
##	<summary>
##	The object class of the object being created.
##	</summary>
## </param>
#
interface(`xc_config_key_filetrans',`
	gen_require(`
		type xc_config_key_t;
	')

	filetrans_pattern($1, xc_config_key_t, $2, $3)
')

########################################
## <summary>
##	Search for files in /boot/system/config
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_config_key_dir_search',`
	gen_require(`
		type xc_config_key_t;
	')

        search_dirs_pattern($1, xc_config_key_t, xc_config_key_t)	
')

########################################
## <summary>
##	Search for files in /boot/system/config
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_list_config_key_dirs',`
	gen_require(`
		type xc_config_key_t;
	')

	list_dirs_pattern($1, xc_config_key_t, xc_config_key_t)
')

########################################
## <summary>
##	Read XC config keys.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_config_key_files',`
	gen_require(`
		type xc_config_key_t;
	')

        read_files_pattern($1, xc_config_key_t, xc_config_key_t)	
')

########################################
## <summary>
##	Manage XC config keys.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_manage_config_key_files',`
	gen_require(`
		type xc_config_key_t;
	')

        manage_files_pattern($1, xc_config_key_t, xc_config_key_t)	
')

########################################
## <summary>
##	Read from /config/repo-cert.conf
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_repo_config_file',`
	gen_require(`
		type xc_config_t, xc_repo_config_t;
	')

	read_files_pattern($1, xc_config_t, xc_repo_config_t)
')

########################################
## <summary>
##	Read repo certs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_repo_cert_file',`
	gen_require(`
		type xc_repo_cert_t;
	')

	files_search_usr($1)
	read_lnk_files_pattern($1, xc_repo_cert_t, xc_repo_cert_t)
	read_files_pattern($1, xc_repo_cert_t, xc_repo_cert_t)
')

########################################
## <summary>
##	Don't audit attempts to get attributes of the
##	reserved space file.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_dontaudit_getattr_reserved_files',`
	gen_require(`
		type xc_reserved_t;
	')

	dontaudit $1 xc_reserved_t:file getattr_file_perms;
')

########################################
## <summary>
##	Read NILF VM file system archive and VM config file.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`xc_read_nilf_files',`
	gen_require(`
		type xc_nilf_t;
	')

	read_files_pattern($1, xc_nilf_t, xc_nilf_t)
')
########################################
## <summary>
##	Create an object in the XenClient ovf /var/lib/ovf directory, with a private
##	type using a type transition.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="private type">
##	<summary>
##	The type of the object to be created.
##	</summary>
## </param>
## <param name="object">
##	<summary>
##	The object class of the object being created.
##	</summary>
## </param>
#
interface(`xc_ovf_var_lib_filetrans',`
	gen_require(`
		type xc_ovf_var_lib_t;
	')

	filetrans_pattern($1, xc_ovf_var_lib_t, $2, $3)
')
