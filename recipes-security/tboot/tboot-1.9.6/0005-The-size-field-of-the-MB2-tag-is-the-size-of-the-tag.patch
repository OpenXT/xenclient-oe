From 886f7632c11924025d1bf8638e6651431bea74a9 Mon Sep 17 00:00:00 2001
From: Ning Sun <ning.sun@intel.com>
Date: Wed, 4 Oct 2017 11:13:07 -0700
Subject: [PATCH 05/22] The size field of the MB2 tag is the size of the tag
 header + the size of the memmap entries. So we need to subtract the size of
 the header before returning the memmap size.

Test Plan: Boot with 4.11 kernel. Verify system boots correctly and
"Invalid EFI memory map entries" message is not present in dmesg.

Signed-off-by: Sahil Rihan <srihan@fb.com>
Reviewed-by: Ning Sun <ning.sun@intel.com>
(cherry picked from commit ac63a6a27168f6f5d3dd3c67114943b2fa1d0791)
---
 tboot/common/loader.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/tboot/common/loader.c b/tboot/common/loader.c
index cb38ceb..188cd39 100644
--- a/tboot/common/loader.c
+++ b/tboot/common/loader.c
@@ -1977,8 +1977,12 @@ find_efi_memmap(loader_ctx *lctx, uint32_t *descr_size,
     efi_mmap = (struct mb2_tag_efi_mmap *)hit;
     *descr_size = efi_mmap->descr_size;
     *descr_vers = efi_mmap->descr_vers;
-    *mmap_size = efi_mmap->size;
-    return (uint32_t)(&efi_mmap->efi_mmap); 
+    *mmap_size = efi_mmap->size - sizeof(struct mb2_tag_efi_mmap);
+    if (*mmap_size % *descr_size) {
+        printk(TBOOT_WARN "EFI memmmap (0x%x) should be a multiple of descriptor size (0x%x)\n",
+	       *mmap_size, *descr_size);
+    }
+    return (uint32_t)(&efi_mmap->efi_mmap);
 }
 
 bool
-- 
2.16.1

