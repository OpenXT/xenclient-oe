diff -uNr uim-1.3.1.orig/helper/toolbar-common-gtk.c uim-1.3.1/helper/toolbar-common-gtk.c
--- uim-1.3.1.orig/helper/toolbar-common-gtk.c	2011-10-21 14:09:05.627410365 +0100
+++ uim-1.3.1/helper/toolbar-common-gtk.c	2011-10-21 14:19:06.034948243 +0100
@@ -651,15 +651,29 @@
 				    indication_id, iconic_label, tooltip_str);
 	append_prop_button(widget, button);
       } else if (!strcmp("leaf", cols[0]) && has_n_strs(cols, 7)) {
+	const char *var = NULL;
+	int add = 1;
 	indication_id = cols[1];
 	iconic_label  = safe_gettext(cols[2]);
 	label         = safe_gettext(cols[3]);
 	tooltip_str   = safe_gettext(cols[4]);
 	action_id     = cols[5];
 	is_selected   = cols[6];
-	prop_button_append_menu(button,
-				indication_id, label, tooltip_str, action_id,
-				is_selected);
+
+	if (strcmp(indication_id, "anthy") == 0)
+	  var = "UIM_ENABLE_ANTHY";
+	else if (strcmp(indication_id, "py") == 0)
+	  var = "UIM_ENABLE_PY";
+
+	if (var) {
+	  const char *env = getenv(var);
+	  add = !env || strcmp(env, "1") == 0;
+	}
+
+	if (add)
+	  prop_button_append_menu(button,
+				  indication_id, label, tooltip_str, action_id,
+				  is_selected);
       }
       g_strfreev(cols);
     }
@@ -931,6 +945,8 @@
   if (type != TYPE_ICON) {
     /* delay initialization until getting "embedded" signal */
     uim_toolbar_check_helper_connection(hbox);
+    /* set input method to direct when applet starts */
+    uim_helper_send_message(uim_fd, "prop_activate\naction_imsw_direct\n");
     uim_helper_client_get_prop_list();
     uim_toolbar_get_im_list();
   }
