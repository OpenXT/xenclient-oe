diff -uNr uim-1.3.1.orig/helper/toolbar-common-gtk.c uim-1.3.1/helper/toolbar-common-gtk.c
--- uim-1.3.1.orig/helper/toolbar-common-gtk.c	2006-12-22 04:32:37.000000000 +0000
+++ uim-1.3.1/helper/toolbar-common-gtk.c	2011-09-12 18:30:42.050639868 +0100
@@ -50,6 +50,8 @@
 #define OBJECT_DATA_BUTTON_TYPE "BUTTON_TYPE"
 #define OBJECT_DATA_COMMAND "COMMAND"
 
+#define XC_ICON_SIZE GTK_ICON_SIZE_SMALL_TOOLBAR
+
 /* exported functions */
 GtkWidget *uim_toolbar_standalone_new(void);
 GtkWidget *uim_toolbar_trayicon_new(void);
@@ -490,7 +492,7 @@
   sg = g_object_get_data(G_OBJECT(widget), OBJECT_DATA_SIZE_GROUP);
 
   if (register_icon(icon_name)) {
-    GtkWidget *img = gtk_image_new_from_stock(icon_name, GTK_ICON_SIZE_MENU);
+    GtkWidget *img = gtk_image_new_from_stock(icon_name, XC_ICON_SIZE);
     button = gtk_button_new();
     gtk_container_add(GTK_CONTAINER(button), img);
   } else {
@@ -678,7 +680,7 @@
 		      (gpointer)command_entry[i].command);
     if (command_entry[i].icon)
       img = gtk_image_new_from_stock(command_entry[i].icon,
-				     GTK_ICON_SIZE_MENU);
+				     XC_ICON_SIZE);
     else {
       img = gtk_label_new("");
       gtk_label_set_markup(GTK_LABEL(img), command_entry[i].label);
@@ -899,7 +901,7 @@
 
   /* prop menu button */
   if (register_icon("uim-icon")) {
-    GtkWidget *img = gtk_image_new_from_stock("uim-icon", GTK_ICON_SIZE_MENU);
+    GtkWidget *img = gtk_image_new_from_stock("uim-icon", XC_ICON_SIZE);
     button = gtk_button_new();
     gtk_container_add(GTK_CONTAINER(button), img);
   } else {
diff -uNr uim-1.3.1.orig/helper/toolbar-standalone-gtk.c uim-1.3.1/helper/toolbar-standalone-gtk.c
--- uim-1.3.1.orig/helper/toolbar-standalone-gtk.c	2006-12-22 04:32:37.000000000 +0000
+++ uim-1.3.1/helper/toolbar-standalone-gtk.c	2011-09-12 18:31:23.654053650 +0100
@@ -42,6 +42,9 @@
 #include <gtk/gtk.h>
 #include "uim/uim.h"
 
+#define XC_TOOLBAR_HEIGHT 35
+#define XC_TOOLBAR_POSITION_LEFT 10
+
 extern GtkWidget *uim_toolbar_standalone_new(void);
 
 static gboolean toolbar_dragging = FALSE;
@@ -212,8 +215,10 @@
   GtkWidget *toolbar;
   GtkWidget *window;
   GtkWidget *hbox;
+#if 0
   GtkWidget *handle;
   GtkWidget *frame;
+#endif
 
   setlocale(LC_ALL, "");
   bindtextdomain(PACKAGE, LOCALEDIR);
@@ -228,6 +233,8 @@
 
   window = gtk_window_new(GTK_WINDOW_POPUP);
 
+  gtk_widget_set_name(GTK_WIDGET(window), "uim-toolbar");
+
   gtk_window_set_type_hint(GTK_WINDOW(window), GDK_WINDOW_TYPE_HINT_DOCK);
 
   gtk_window_set_skip_taskbar_hint(GTK_WINDOW(window), TRUE);
@@ -236,31 +243,42 @@
 
   gtk_widget_add_events(window, GDK_BUTTON_PRESS_MASK);
 
+#if 0
   frame = gtk_frame_new(NULL);
   gtk_frame_set_shadow_type(GTK_FRAME(frame), GTK_SHADOW_OUT);
   gtk_container_add(GTK_CONTAINER(window), frame);
+#endif
 
   hbox = gtk_hbox_new(FALSE, 0);
+#if 0
   gtk_container_add(GTK_CONTAINER(frame), hbox);
+#endif
+  gtk_container_add(GTK_CONTAINER(window), hbox);
 
+#if 0
   handle = gtk_drawing_area_new();
   gtk_widget_set_size_request(handle, 8, -1);
   gtk_box_pack_start(GTK_BOX(hbox), handle, FALSE, FALSE, 0);
+#endif
 
   toolbar = (GtkWidget*)uim_toolbar_standalone_new();
   gtk_box_pack_start(GTK_BOX(hbox), toolbar, FALSE, FALSE, 0);
 
+#if 0
   g_signal_connect(G_OBJECT(handle), "expose-event",
 		   G_CALLBACK(handle_expose_event_cb), NULL);
+#endif
 
   g_signal_connect(G_OBJECT(window), "delete_event",
 		   G_CALLBACK(delete_event), NULL);
+#if 0
   g_signal_connect(G_OBJECT(window), "button-press-event",
 		   G_CALLBACK(button_press_event_cb), toolbar);
   g_signal_connect(G_OBJECT(window), "button-release-event",
 		   G_CALLBACK(button_release_event_cb), NULL);
   g_signal_connect(G_OBJECT(window), "motion-notify-event",
 		   G_CALLBACK(motion_notify_event_cb), NULL);
+#endif
   g_signal_connect(G_OBJECT(window), "size-allocate",
 		   G_CALLBACK(size_allocate_cb), NULL);
   g_signal_connect(G_OBJECT(window), "size-request",
@@ -268,6 +286,13 @@
 
   gtk_widget_show_all(GTK_WIDGET(window));
 
+  {
+     GdkGeometry geometry = {-1, XC_TOOLBAR_HEIGHT, 0, 0, 0, 0, 0, 0, 0.0, 0.0,
+                             GDK_GRAVITY_NORTH_WEST};
+     gtk_window_set_geometry_hints(GTK_WIDGET(window), window, &geometry,
+	                           GDK_HINT_MIN_SIZE);
+  }
+
   if (argc > 1) {
     if (!gtk_window_parse_geometry(GTK_WINDOW(window), argv[1])) {
 
@@ -285,8 +310,12 @@
     sc_w = gdk_screen_width();
     sc_h = gdk_screen_height();
 
+#if 0
     x = sc_w - w;
     y = sc_h - h - panel_height; /* FIXME! */
+#endif
+    x = XC_TOOLBAR_POSITION_LEFT;
+    y = sc_h - h;
     helper_win_set_position(window, x, y);
   }
 
