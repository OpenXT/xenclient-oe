diff --git a/hw/piix4acpi.c b/hw/piix4acpi.c
index 4510dd7..074a99f 100644
--- a/hw/piix4acpi.c
+++ b/hw/piix4acpi.c
@@ -68,6 +68,9 @@
 #define SLP_TYP_S3_V1     (1 << 10)
 #define SLP_TYP_S5_V1     (0 << 10)
 
+#define ACPI_RESET_REG_ADDR  0xcf9
+#define ACPI_RESET_REG_VAL   6
+
 #define ACPI_DBG_IO_ADDR  0xb044
 #define ACPI_PHP_IO_ADDR  0x10c0
 
@@ -313,6 +316,12 @@ static inline void clear_bit(uint8_t *map, int bit)
     map[bit / 8] &= ~(1 << (bit % 8));
 }
 
+static void acpi_reset_reg_writeb(void *opaque, uint32_t addr, uint32_t val)
+{
+    if (val == ACPI_RESET_REG_VAL)
+        qemu_system_reset_request();
+}
+
 static void acpi_dbg_writel(void *opaque, uint32_t addr, uint32_t val)
 {
     PIIX4ACPI_LOG(PIIX4ACPI_LOG_DEBUG, "ACPI: DBG: 0x%08x\n", val);
@@ -902,6 +911,8 @@ i2c_bus *piix4_pm_init(PCIBus *bus, int devfn, uint32_t smb_io_base,
 #ifdef CONFIG_PASSTHROUGH
     php_devfn_init();
 #endif
+    register_ioport_write(ACPI_RESET_REG_ADDR, 1, 1, acpi_reset_reg_writeb, d);
+
     register_ioport_write(ACPI_DBG_IO_ADDR, 4, 4, acpi_dbg_writel, d);
 
     register_savevm("piix4acpi", 0, 2, piix4acpi_save, piix4acpi_load, d);
