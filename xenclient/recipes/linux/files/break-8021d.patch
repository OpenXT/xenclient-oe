diff --git a/net/bridge/br_if.c b/net/bridge/br_if.c
index 60044f5..b5b2997 100644
--- a/net/bridge/br_if.c
+++ b/net/bridge/br_if.c
@@ -244,6 +244,7 @@ static struct net_bridge_port *new_nbp(struct net_bridge *br,
 int br_add_bridge(struct net *net, const char *name)
 {
 	struct net_device *dev;
+	struct net_bridge *br;
 	int res;
 
 	dev = alloc_netdev(sizeof(struct net_bridge), name,
@@ -252,6 +253,9 @@ int br_add_bridge(struct net *net, const char *name)
 	if (!dev)
 		return -ENOMEM;
 
+	br = netdev_priv(dev);
+	br->break_8021d = 0;
+
 	dev_net_set(dev, net);
 	dev->rtnl_link_ops = &br_link_ops;
 
diff --git a/net/bridge/br_input.c b/net/bridge/br_input.c
index 4b34207..801aa48 100644
--- a/net/bridge/br_input.c
+++ b/net/bridge/br_input.c
@@ -165,7 +165,7 @@ rx_handler_result_t br_handle_frame(struct sk_buff **pskb)
 		case 0x00:	/* Bridge Group Address */
 			/* If STP is turned off,
 			   then must forward to keep loop detection */
-			if (p->br->stp_enabled == BR_NO_STP)
+			if (p->br->stp_enabled == BR_NO_STP && p->br->break_8021d)
 				goto forward;
 			break;
 
diff --git a/net/bridge/br_private.h b/net/bridge/br_private.h
index 711094a..8876ce7 100644
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@ -255,6 +255,8 @@ struct net_bridge
 	struct timer_list		multicast_query_timer;
 #endif
 
+	u8				break_8021d;
+
 	struct timer_list		hello_timer;
 	struct timer_list		tcn_timer;
 	struct timer_list		topology_change_timer;
diff --git a/net/bridge/br_sysfs_br.c b/net/bridge/br_sysfs_br.c
index 7d509c5..ec08f34 100644
--- a/net/bridge/br_sysfs_br.c
+++ b/net/bridge/br_sysfs_br.c
@@ -709,6 +709,36 @@ static DEVICE_ATTR(nf_call_arptables, S_IRUGO | S_IWUSR,
 		   show_nf_call_arptables, store_nf_call_arptables);
 #endif
 
+static ssize_t show_break_8021d(struct device *d,
+				struct device_attribute *attr,
+				char *buf)
+{
+	return sprintf(buf, "%x\n", to_bridge(d)->break_8021d);
+}
+
+static ssize_t store_break_8021d(struct device *d,
+				 struct device_attribute *attr,
+				 const char *buf, size_t len)
+{
+	struct net_bridge *br = to_bridge(d);
+
+	spin_lock_bh(&br->lock);
+	switch (buf[0]) {
+	case '1':
+		br->break_8021d = 1;
+		break;
+	case '0':
+		br->break_8021d = 0;
+		break;
+	}
+
+	spin_unlock_bh(&br->lock);
+	return len;
+}
+
+static DEVICE_ATTR(break_8021d, S_IRUGO | S_IWUSR,
+		   show_break_8021d, store_break_8021d);
+
 static struct attribute *bridge_attrs[] = {
 	&dev_attr_forward_delay.attr,
 	&dev_attr_hello_time.attr,
@@ -750,6 +780,7 @@ static struct attribute *bridge_attrs[] = {
 	&dev_attr_nf_call_ip6tables.attr,
 	&dev_attr_nf_call_arptables.attr,
 #endif
+	&dev_attr_break_8021d.attr,
 	NULL
 };
 
