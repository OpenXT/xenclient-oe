diff --git a/hw/pci/pci.c b/hw/pci/pci.c
index 2b2fec5..63793cc 100644
--- a/hw/pci/pci.c
+++ b/hw/pci/pci.c
@@ -767,6 +767,20 @@ static void pci_config_free(PCIDevice *pci_dev)
     g_free(pci_dev->used);
 }
 
+/* Check if a devfn is reserved */
+static int pci_devfn_reserved(int devfn)
+{
+    /* XenClient: Surfman
+     * Reserved 00:02.* if there is no vga card.
+     * It can be used by surfman.
+     */
+    if ((devfn & (~0x7)) == (2 << 3) && vga_interface_type == VGA_NONE) {
+        return -1;
+    }
+
+    return 0;
+}
+
 /* -1 for devfn means auto assign */
 static PCIDevice *do_pci_register_device(PCIDevice *pci_dev, PCIBus *bus,
                                          const char *name, int devfn)
@@ -778,15 +792,31 @@ static PCIDevice *do_pci_register_device(PCIDevice *pci_dev, PCIBus *bus,
     if (devfn < 0) {
         for(devfn = bus->devfn_min ; devfn < ARRAY_SIZE(bus->devices);
             devfn += PCI_FUNC_MAX) {
-            if (!bus->devices[devfn])
+            if (pci_devfn_reserved(devfn)) {
+                continue;
+            }
+            if (!bus->devices[devfn]) {
+                /* XenClient: surfman
+                 * Reserved 00:02.* if there is no vga card.
+                 * It can be used by surfman.
+                 * */
                 goto found;
+            }
         }
         error_report("PCI: no slot/function available for %s, all in use", name);
         return NULL;
     found: ;
-    } else if (bus->devices[devfn]) {
-        error_report("PCI: slot %d function %d not available for %s, in use by %s",
-                     PCI_SLOT(devfn), PCI_FUNC(devfn), name, bus->devices[devfn]->name);
+    } else if (bus->devices[devfn] || pci_devfn_reserved(devfn)) {
+        if (bus->devices[devfn]) {
+            error_report("PCI: slot %d function %d not available for %s, "
+                         "in use by %s",
+                         PCI_SLOT(devfn), PCI_FUNC(devfn), name,
+                         bus->devices[devfn]->name);
+        } else {
+            error_report("PCI: slot %d function %d not available for %s, "
+                         "reserved by another device model",
+                         PCI_SLOT(devfn), PCI_FUNC(devfn), name);
+        }
         return NULL;
     }
     pci_dev->bus = bus;
