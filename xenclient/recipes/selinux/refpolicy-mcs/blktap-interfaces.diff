diff --git a/policy/modules/contrib/qemu.te b/policy/modules/contrib/qemu.te
index 2f7c305..1790eff 100644
--- a/policy/modules/contrib/qemu.te
+++ b/policy/modules/contrib/qemu.te
@@ -90,6 +90,11 @@ ifdef(`enable_mls',`
 # Unconfined local policy
 #
 
+# qemu emulates disk for early boot code
+optional_policy(`
+	blktap_rw_blk_file(qemu_t)
+')
+
 optional_policy(`
 	type unconfined_qemu_t;
 	typealias unconfined_qemu_t alias qemu_unconfined_t;
diff --git a/policy/modules/contrib/xen.te b/policy/modules/contrib/xen.te
index f832156..7f1e978 100644
--- a/policy/modules/contrib/xen.te
+++ b/policy/modules/contrib/xen.te
@@ -255,6 +255,15 @@ qemu_signull(xend_t)
 # transition to dmidecode
 dmidecode_domtrans(xend_t)
 
+blktap_getattr_blk_file(xend_t)
+blktap_relabel_blk_file(xend_t)
+# this may be a leaked fd or something, dontaudit?
+blktap_read_blk_file(xend_t)
+
+# transition to tapdisk utilities
+tapdisk_domtrans(xend_t)
+tapctl_domtrans(xend_t)
+
 kernel_read_kernel_sysctls(xend_t)
 kernel_read_system_state(xend_t)
 kernel_write_xen_state(xend_t)
diff --git a/policy/modules/roles/sysadm.te b/policy/modules/roles/sysadm.te
index bfa165d..216196a 100644
--- a/policy/modules/roles/sysadm.te
+++ b/policy/modules/roles/sysadm.te
@@ -354,6 +354,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	tapctl_run(sysadm_t, sysadm_r)
+')
+
+optional_policy(`
 	thunderbird_role(sysadm_r, sysadm_t)
 ')
 
diff --git a/policy/modules/system/lvm.te b/policy/modules/system/lvm.te
index 7830ef0..9e94e1d 100644
--- a/policy/modules/system/lvm.te
+++ b/policy/modules/system/lvm.te
@@ -332,6 +332,10 @@ ifdef(`distro_redhat',`
 ')
 
 optional_policy(`
+	blktap_rw_blk_file(lvm_t)
+')
+
+optional_policy(`
 	bootloader_rw_tmp_files(lvm_t)
 ')
 
diff --git a/policy/modules/system/mount.te b/policy/modules/system/mount.te
index 3f1d641..eee5465 100644
--- a/policy/modules/system/mount.te
+++ b/policy/modules/system/mount.te
@@ -173,6 +173,10 @@ tunable_policy(`allow_mount_anyfile',`
 ')
 
 optional_policy(`
+	blktap_read_blk_file(mount_t)
+')
+
+optional_policy(`
 	# for nfs
 	corenet_all_recvfrom_unlabeled(mount_t)
 	corenet_all_recvfrom_netlabel(mount_t)
