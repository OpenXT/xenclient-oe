diff --git a/policy/modules/services/ssh.fc b/policy/modules/services/ssh.fc
index 41f9da8..44e413a 100644
--- a/policy/modules/services/ssh.fc
+++ b/policy/modules/services/ssh.fc
@@ -1,8 +1,18 @@
 HOME_DIR/\.ssh(/.*)?			gen_context(system_u:object_r:ssh_home_t,s0)
+#
+# we don't have HOME_DIR working proper in teh build yet
+#
+/root/\.ssh(/.*)?			gen_context(system_u:object_r:ssh_home_t,s0)
+
+/etc/rc\.d/init\.d/sshd		--	gen_context(system_u:object_r:sshd_initrc_exec_t,s0)
 
 /etc/ssh/primes			--	gen_context(system_u:object_r:sshd_key_t,s0)
-/etc/ssh/ssh_host.*_key		--	gen_context(system_u:object_r:sshd_key_t,s0)
+/etc/ssh/ssh_host.*_key.*      --      gen_context(system_u:object_r:sshd_key_t,s0)
+/config/etc/ssh/ssh_host.*_key.* --    gen_context(system_u:object_r:sshd_key_t,s0)
+
+/usr/bin/sshv4v			--	gen_context(system_u:object_r:ssh_exec_t,s0)
 
+/usr/bin/ssh                   -l      gen_context(system_u:object_r:ssh_exec_t,s0)
 /usr/bin/ssh			--	gen_context(system_u:object_r:ssh_exec_t,s0)
 /usr/bin/ssh\.openssh		--	gen_context(system_u:object_r:ssh_exec_t,s0)
 /usr/bin/ssh-agent		--	gen_context(system_u:object_r:ssh_agent_exec_t,s0)
diff --git a/policy/modules/services/ssh.if b/policy/modules/services/ssh.if
index fe0c682..dd1e4eb 100644
--- a/policy/modules/services/ssh.if
+++ b/policy/modules/services/ssh.if
@@ -603,6 +603,24 @@ interface(`ssh_domtrans',`
 	domtrans_pattern($1, sshd_exec_t, sshd_t)
 ')
 
+#####################################
+## <summary>
+##	Execute sshd in the sshd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`ssh_initrc_domtrans',`
+	gen_require(`
+		type sshd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, sshd_initrc_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute the ssh client in the caller domain.
@@ -736,6 +754,24 @@ interface(`ssh_manage_home_files',`
 	userdom_search_user_home_dirs($1)
 ')
 
+######################################
+## <summary>
+##	Dontaudit attempts to write to .ssh in userhomedirs
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ssh_dontaudit_write_home_dirs',`
+	gen_require(`
+		type ssh_home_t;
+	')
+
+	dontaudit $1 ssh_home_t:dir write;
+')
+
 #######################################
 ## <summary>
 ##	Delete from the ssh temp files.
@@ -754,3 +790,42 @@ interface(`ssh_delete_tmp',`
 	files_search_tmp($1)
 	delete_files_pattern($1, sshd_tmp_t, sshd_tmp_t)
 ')
+
+#######################################
+## <summary>
+##	Allow ssh to inherit AT_SECURE ELF
+##	auxiliary vector.  This allows ssh
+##	to inherit environment variables from
+##	the source domain in a transition.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ssh_inherit_env',`
+	gen_require(`
+		type ssh_t;
+	')
+
+	allow $1 ssh_t:process noatsecure;
+')
+
+########################################
+## <summary>
+##      Use file descriptors for ssh
+## </summary>
+## <param name="domain">
+##      <summary>
+##      The type of the process performing this action.
+##      </summary>
+## </param>
+#
+interface(`ssh_use_fds',`
+        gen_require(`
+                type ssh_t;
+        ')
+
+        allow $1 ssh_t:fd use;
+')
diff --git a/policy/modules/services/ssh.te b/policy/modules/services/ssh.te
index eada65c..874997a 100644
--- a/policy/modules/services/ssh.te
+++ b/policy/modules/services/ssh.te
@@ -30,6 +30,9 @@ role system_r types ssh_keygen_t;
 type sshd_exec_t;
 corecmd_executable_file(sshd_exec_t)
 
+type sshd_initrc_exec_t;
+init_script_file(sshd_initrc_exec_t)
+
 ssh_server_template(sshd)
 init_daemon_domain(sshd_t, sshd_exec_t)
 
@@ -73,6 +76,7 @@ type ssh_home_t;
 typealias ssh_home_t alias { home_ssh_t user_ssh_home_t user_home_ssh_t staff_home_ssh_t sysadm_home_ssh_t };
 typealias ssh_home_t alias { auditadm_home_ssh_t secadm_home_ssh_t };
 userdom_user_home_content(ssh_home_t)
+files_mountpoint(ssh_home_t)
 
 ##############################
 #
@@ -134,6 +138,10 @@ corenet_tcp_sendrecv_all_ports(ssh_t)
 corenet_tcp_connect_ssh_port(ssh_t)
 corenet_sendrecv_ssh_client_packets(ssh_t)
 
+corenet_tcp_connect_generic_port(ssh_t)
+ssh_exec(ssh_t)
+allow ssh_t self:file exec_file_perms;
+
 dev_read_urand(ssh_t)
 
 fs_getattr_all_fs(ssh_t)
@@ -223,6 +231,7 @@ optional_policy(`
 # so a tunnel can point to another ssh tunnel
 allow sshd_t self:netlink_route_socket r_netlink_socket_perms;
 allow sshd_t self:key { search link write };
+allow sshd_t sshd_key_t:dir { getattr search };
 
 manage_dirs_pattern(sshd_t, sshd_tmp_t, sshd_tmp_t)
 manage_files_pattern(sshd_t, sshd_tmp_t, sshd_tmp_t)
@@ -236,6 +245,11 @@ term_use_all_ptys(sshd_t)
 term_setattr_all_ptys(sshd_t)
 term_relabelto_all_ptys(sshd_t)
 
+# leaked descriptors from xend when it restarts sshd
+xen_dontaudit_use_fds(sshd_t)
+xen_dontaudit_rw_unix_stream_sockets(sshd_t)
+xen_dontaudit_rw_unix_fifo_files(sshd_t)
+
 # for X forwarding
 corenet_tcp_bind_xserver_port(sshd_t)
 corenet_sendrecv_xserver_server_packets(sshd_t)
@@ -299,6 +313,7 @@ allow ssh_keygen_t self:process { sigchld sigkill sigstop signull signal };
 
 allow ssh_keygen_t self:unix_stream_socket create_stream_socket_perms;
 
+allow ssh_keygen_t sshd_key_t:dir manage_dir_perms;
 allow ssh_keygen_t sshd_key_t:file manage_file_perms;
 files_etc_filetrans(ssh_keygen_t, sshd_key_t, file)
 
@@ -331,3 +346,6 @@ optional_policy(`
 optional_policy(`
 	udev_read_db(ssh_keygen_t)
 ')
+
+# load v4v module
+kernel_request_load_module(sshd_t)
