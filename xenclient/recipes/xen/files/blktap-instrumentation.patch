diff --git a/tools/blktap2/control/tap-ctl-ipc.c b/tools/blktap2/control/tap-ctl-ipc.c
index c7e42d9..74654f8 100644
--- a/tools/blktap2/control/tap-ctl-ipc.c
+++ b/tools/blktap2/control/tap-ctl-ipc.c
@@ -67,18 +67,26 @@ tap_ctl_read_message(int fd, tapdisk_message_t *message, int timeout)
 		if (ret == -1) {
 			if (errno == EINTR)
 				continue;
+			EPRINTF("%d from select() reading message\n", errno);
 			break;
 		}
 		else if (FD_ISSET(fd, &readfds)) {
 			ret = read(fd, message + offset, len - offset);
-			if (ret <= 0) {
+			if (ret == 0) {
+				EPRINTF("EOF from read() reading message\n");
+				break;
+			} else if (ret <= 0) {
 				if (errno == EINTR)
 					continue;
+				EPRINTF("%d from read() reading message\n", errno);
 				break;
 			}
 			offset += ret;
-		} else
+		} else {
+			EPRINTF("timeout from select reading message (ret %d)\n", ret);
+
 			break;
+		}
 	}
 
 	if (offset != len) {
@@ -123,18 +131,25 @@ tap_ctl_write_message(int fd, tapdisk_message_t *message, int timeout)
 		if (ret == -1) {
 			if (errno == EINTR)
 				continue;
+			EPRINTF("%d from select() writing message\n", errno);
 			break;
 		}
 		else if (FD_ISSET(fd, &writefds)) {
 			ret = write(fd, message + offset, len - offset);
-			if (ret <= 0) {
+			if (ret == 0) {
+				EPRINTF("Got zero from write() writing message\n");
+				break;
+			} else if (ret < 0) {
 				if (errno == EINTR)
 					continue;
+				EPRINTF("%d from write() writing message\n", errno);
 				break;
 			}
 			offset += ret;
-		} else
+		} else {
+			EPRINTF("timeout from select() writing message (ret=%d)\n", ret);
 			break;
+		}
 	}
 
 	if (offset != len) {
diff --git a/tools/blktap2/drivers/tapdisk-control.c b/tools/blktap2/drivers/tapdisk-control.c
index 0b5cf3c..c0937e6 100644
--- a/tools/blktap2/drivers/tapdisk-control.c
+++ b/tools/blktap2/drivers/tapdisk-control.c
@@ -133,15 +133,28 @@ tapdisk_control_read_message(int fd, tapdisk_message_t *message, int timeout)
 		FD_SET(fd, &readfds);
 
 		ret = select(fd + 1, &readfds, NULL, NULL, t);
-		if (ret == -1)
+		if (ret == -1) {
+			if (errno == EINTR)
+				continue;
+ 			EPRINTF("%d from select() reading message\n", errno);
 			break;
-		else if (FD_ISSET(fd, &readfds)) {
+		} else if (FD_ISSET(fd, &readfds)) {
 			ret = read(fd, message + offset, len - offset);
-			if (ret <= 0)
+			if (ret == 0) {
+				EPRINTF("EOF from read() reading message\n");
 				break;
+			} else if (ret < 0) {
+				if (errno == EINTR)
+					continue;
+				EPRINTF("%d from read() reading message\n", errno);
+				break;
+			}
 			offset += ret;
-		} else
+		} else {
+			EPRINTF("timeout from select() reading message (ret=%d)\n", ret);
+
 			break;
+		}
 	}
 
 	if (offset != len) {
@@ -184,15 +197,28 @@ tapdisk_control_write_message(int fd, tapdisk_message_t *message, int timeout)
 		 * bit more time than expected. */
 
 		ret = select(fd + 1, NULL, &writefds, NULL, t);
-		if (ret == -1)
+		if (ret == -1) {
+			if (errno == EINTR)
+				continue;
+ 			EPRINTF("%d from select() writing message\n", errno);
 			break;
-		else if (FD_ISSET(fd, &writefds)) {
+		} else if (FD_ISSET(fd, &writefds)) {
 			ret = write(fd, message + offset, len - offset);
-			if (ret <= 0)
+			if (ret == 0) {
+				EPRINTF("Got zero from write() writing message\n");
 				break;
+			} else if (ret < 0) {
+				if (errno == EINTR)
+					continue;
+				EPRINTF("%d from write() writing message\n", errno);
+				break;
+			}
 			offset += ret;
-		} else
+		} else {
+			EPRINTF("timeout from select() writing message (ret=%d)\n", ret);
+
 			break;
+		}
 	}
 
 	if (offset != len) {
