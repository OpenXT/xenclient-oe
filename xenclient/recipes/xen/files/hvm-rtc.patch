# HG cw_domainshangeset patch
# Parent fe77a14721a9a4a9c47aef2b57484ce68fd92662

diff --git a/xen/arch/x86/acpi/power.c b/xen/arch/x86/acpi/power.c
index 9985736..d3882bb 100644
--- a/xen/arch/x86/acpi/power.c
+++ b/xen/arch/x86/acpi/power.c
@@ -99,6 +99,8 @@ static void thaw_domains(void)
     for_each_domain ( d )
     {
         restore_vcpu_affinity(d);
+	if ( is_hvm_domain(d) )
+	    rtc_update_clock(d);
         domain_unpause(d);
     }
     rcu_read_unlock(&domlist_read_lock);
diff --git a/xen/arch/x86/hvm/io.c b/xen/arch/x86/hvm/io.c
index 4ae2c0c..aedd6b4 100644
--- a/xen/arch/x86/hvm/io.c
+++ b/xen/arch/x86/hvm/io.c
@@ -129,9 +129,6 @@ void send_timeoffset_req(unsigned long timeoff)
 {
     ioreq_t p[1];
 
-    if ( timeoff == 0 )
-        return;
-
     memset(p, 0, sizeof(*p));
 
     p->type = IOREQ_TYPE_TIMEOFFSET;
diff --git a/xen/arch/x86/hvm/rtc.c b/xen/arch/x86/hvm/rtc.c
index 26ab12c..e497733 100644
--- a/xen/arch/x86/hvm/rtc.c
+++ b/xen/arch/x86/hvm/rtc.c
@@ -525,7 +525,7 @@ static void rtc_set_time(RTCState *s)
 {
     struct tm *tm = &s->current_tm;
     struct domain *d = vrtc_domain(s);
-    unsigned long before, after; /* XXX s_time_t */
+    unsigned long before, after, adjustment; /* XXX s_time_t */
       
     ASSERT(spin_is_locked(&s->lock));
 
@@ -545,10 +545,14 @@ static void rtc_set_time(RTCState *s)
 
     /* We use the guest's setting of the RTC to define the local-time 
      * offset for this domain. */
-    d->time_offset_seconds += (after - before);
+    adjustment = after - before;
+
+    if (adjustment) {
+	d->time_offset_seconds += adjustment;
+	/* Also tell qemu-dm about it so it will be remembered for next boot. */
+	send_timeoffset_req(d->time_offset_seconds);
+    }
     update_domain_wallclock_time(d);
-    /* Also tell qemu-dm about it so it will be remembered for next boot. */
-    send_timeoffset_req(after - before);
 }
 
 static void rtc_copy_date(RTCState *s)
