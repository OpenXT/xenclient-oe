diff --git a/tools/firmware/vgabios/vbe.c b/tools/firmware/vgabios/vbe.c
index a13e223..3e0b766 100644
--- a/tools/firmware/vgabios/vbe.c
+++ b/tools/firmware/vgabios/vbe.c
@@ -38,6 +38,8 @@
 #include "vbe.h"
 #include "vbetables.h"
 
+#define VBE_TOTAL_VIDEO_MEMORY_DIV_64K (VBE_DISPI_TOTAL_VIDEO_MEMORY_MB*1024/64)
+
 // The current OEM Software Revision of this VBE Bios
 #define VBE_OEM_SOFTWARE_REV 0x0002;
 
@@ -842,8 +844,7 @@ Bit16u *AX;Bit16u ES;Bit16u DI;
         vbe_info_block.VideoModePtr_Off= DI + 34;
 
         // VBE Total Memory (in 64b blocks)
-        outw(VBE_DISPI_IOPORT_INDEX, VBE_DISPI_INDEX_VIDEO_MEMORY_64K);
-        vbe_info_block.TotalMemory = inw(VBE_DISPI_IOPORT_DATA);
+        vbe_info_block.TotalMemory = VBE_TOTAL_VIDEO_MEMORY_DIV_64K;
 
         if (vbe2_info)
 	{
@@ -867,12 +868,10 @@ Bit16u *AX;Bit16u ES;Bit16u DI;
                 
         do
         {
-                Bit16u size_64k = size64(cur_info->info.XResolution, cur_info->info.YResolution, cur_info->info.BitsPerPixel);
                 Bit16u max_bpp = dispi_get_max_bpp();
 
                 if ((cur_info->info.XResolution <= dispi_get_max_xres()) &&
-                    (cur_info->info.BitsPerPixel <= max_bpp) &&
-                    (size_64k <= vbe_info_block.TotalMemory)) {
+                    (cur_info->info.BitsPerPixel <= max_bpp)) {
 #ifdef DEBUG
                   printf("VBE found mode %x => %x\n", cur_info->mode,cur_mode);
 #endif
@@ -881,7 +880,7 @@ Bit16u *AX;Bit16u ES;Bit16u DI;
                   cur_ptr+=2;
                 } else {
 #ifdef DEBUG
-                  printf("VBE mode %x (xres=%x / bpp=%02x) not supported \n", cur_info->mode,cur_info->info.XResolution,cur_info->info.BitsPerPixel);
+                  printf("VBE mode %x (xres=%x / bpp=%02x) not supported by display\n", cur_info->mode,cur_info->info.XResolution,cur_info->info.BitsPerPixel);
 #endif
                 }
                 cur_info++;
@@ -932,8 +931,7 @@ Bit16u *AX;Bit16u CX; Bit16u ES;Bit16u DI;
                 Bit16u size_64k;
                 Bit16u totalMemory;
 
-                outw(VBE_DISPI_IOPORT_INDEX, VBE_DISPI_INDEX_VIDEO_MEMORY_64K);
-                totalMemory = inw(VBE_DISPI_IOPORT_DATA);
+                totalMemory = VBE_TOTAL_VIDEO_MEMORY_DIV_64K;
 #ifdef DEBUG
                 printf("VBE found mode %x\n",CX);
 #endif        
@@ -951,13 +949,7 @@ Bit16u *AX;Bit16u CX; Bit16u ES;Bit16u DI;
                   info.WinFuncPtr = 0xC0000000UL;
                   *(Bit16u *)&(info.WinFuncPtr) = (Bit16u)(dispi_set_bank_farcall);
                 }
-                outw(VBE_DISPI_IOPORT_INDEX,VBE_DISPI_INDEX_LFB_ADDRESS_H);
-                info.PhysBasePtr = inw(VBE_DISPI_IOPORT_DATA);
-                info.PhysBasePtr = info.PhysBasePtr << 16;
-#if 0					
-                outw(VBE_DISPI_IOPORT_INDEX,VBE_DISPI_INDEX_LFB_ADDRESS_L);
-                info.PhysBasePtr |= inw(VBE_DISPI_IOPORT_DATA);
-#endif 							
+
                 result = 0x4f;
 
                 // copy updates in mode_info_block back
diff --git a/tools/firmware/vgabios/vbe.h b/tools/firmware/vgabios/vbe.h
index 3b78582..d598405 100644
--- a/tools/firmware/vgabios/vbe.h
+++ b/tools/firmware/vgabios/vbe.h
@@ -278,8 +278,8 @@ typedef struct ModeInfoListItem
   #define VBE_DISPI_BANK_ADDRESS           0xA0000
   #define VBE_DISPI_BANK_SIZE_KB           64
   
-  #define VBE_DISPI_MAX_XRES               2560
-  #define VBE_DISPI_MAX_YRES               1600
+  #define VBE_DISPI_MAX_XRES               1920
+  #define VBE_DISPI_MAX_YRES               1200
   
   #define VBE_DISPI_IOPORT_INDEX           0x01CE
   #define VBE_DISPI_IOPORT_DATA            0x01CF
@@ -294,9 +294,6 @@ typedef struct ModeInfoListItem
   #define VBE_DISPI_INDEX_VIRT_HEIGHT      0x7
   #define VBE_DISPI_INDEX_X_OFFSET         0x8
   #define VBE_DISPI_INDEX_Y_OFFSET         0x9
-  #define VBE_DISPI_INDEX_VIDEO_MEMORY_64K 0xa
-  #define VBE_DISPI_INDEX_LFB_ADDRESS_H    0xb
-  #define VBE_DISPI_INDEX_LFB_ADDRESS_L    0xc
 
   #define VBE_DISPI_LFB_PHYSICAL_ADDRESS   0xE0000000
   #define VBE_DISPI_ID0                    0xB0C0
