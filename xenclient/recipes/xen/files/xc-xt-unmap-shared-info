diff --git a/xen/arch/x86/mm.c b/xen/arch/x86/mm.c
index 5a47641..6b2a65b 100644
--- a/xen/arch/x86/mm.c
+++ b/xen/arch/x86/mm.c
@@ -4557,12 +4557,18 @@ static int xenmem_add_to_physmap_once(
     unsigned long prev_mfn, mfn = 0, gpfn, idx;
     int rc;
     p2m_type_t p2mt;
+    int unmap_shinfo = 0;
+    unsigned long gpfn_new = xatp->gpfn;
 
     switch ( xatp->space )
     {
         case XENMAPSPACE_shared_info:
             if ( xatp->idx == 0 )
                 mfn = virt_to_mfn(d->shared_info);
+            /* unmap shared info page if guest passed INVALID_MFN */
+            if ( gpfn_new == (hvm_guest_x86_mode(current) == 8
+                              ? INVALID_MFN : INVALID_MFN >> 32) )
+                unmap_shinfo = 1;
             break;
         case XENMAPSPACE_grant_table:
             spin_lock(&d->grant_table->lock);
@@ -4628,19 +4634,31 @@ static int xenmem_add_to_physmap_once(
     if ( page )
         put_page(page);
 
+    if ( unmap_shinfo )
+    {
+        if ( d->prev_mfn_shinfo  != INVALID_MFN &&
+             d->prev_gpfn_shinfo != INVALID_MFN )
+        {
+            gpfn_new = d->prev_gpfn_shinfo;
+            mfn = d->prev_mfn_shinfo;
+        }
+        else
+            printk("unmapping of shared info requested while not mapped\n");
+    }
+
     /* Remove previously mapped page if it was present. */
-    prev_mfn = mfn_x(get_gfn(d, xatp->gpfn, &p2mt));
+    prev_mfn = mfn_x(get_gfn(d, gpfn_new, &p2mt));
     if ( mfn_valid(prev_mfn) )
     {
         if ( is_xen_heap_mfn(prev_mfn) )
             /* Xen heap frames are simply unhooked from this phys slot. */
-            guest_physmap_remove_page(d, xatp->gpfn, prev_mfn, PAGE_ORDER_4K);
-        else
+            guest_physmap_remove_page(d, gpfn_new, prev_mfn, PAGE_ORDER_4K);
+        else if ( xatp->space != XENMAPSPACE_shared_info )
             /* Normal domain memory is freed, to avoid leaking memory. */
-            guest_remove_page(d, xatp->gpfn);
+            guest_remove_page(d, gpfn_new);
     }
     /* In the XENMAPSPACE_gmfn case we still hold a ref on the old page. */
-    put_gfn(d, xatp->gpfn);
+    put_gfn(d, gpfn_new);
 
     /* Unmap from old location, if any. */
     gpfn = get_gpfn_from_mfn(mfn);
@@ -4648,16 +4666,31 @@ static int xenmem_add_to_physmap_once(
     if ( xatp->space == XENMAPSPACE_gmfn ||
          xatp->space == XENMAPSPACE_gmfn_range )
         ASSERT( gpfn == gfn );
-    if ( gpfn != INVALID_M2P_ENTRY )
+    if ( gpfn != INVALID_M2P_ENTRY ) {
         guest_physmap_remove_page(d, gpfn, mfn, PAGE_ORDER_4K);
-
+    }
     /* Map at new location. */
-    rc = guest_physmap_add_page(d, xatp->gpfn, mfn, PAGE_ORDER_4K);
+    rc = guest_physmap_add_page(d, gpfn_new, mfn, PAGE_ORDER_4K);
 
     /* In the XENMAPSPACE_gmfn, we took a ref of the gfn at the top */
     if ( xatp->space == XENMAPSPACE_gmfn ||
          xatp->space == XENMAPSPACE_gmfn_range )
         put_gfn(d, gfn);
+
+    if ( xatp->space == XENMAPSPACE_shared_info )
+    {
+        /* save the shared info mapping to restore, if we are not unmapping */
+        if (!unmap_shinfo)
+        {
+            d->prev_mfn_shinfo = prev_mfn;
+            d->prev_gpfn_shinfo = gpfn_new;
+        }
+        else
+        {
+            d->prev_mfn_shinfo = INVALID_MFN;
+            d->prev_gpfn_shinfo = INVALID_MFN;
+        }
+    }
     domain_unlock(d);
 
     return rc;
diff --git a/xen/common/domain.c b/xen/common/domain.c
index b53a8b5..102498d 100644
--- a/xen/common/domain.c
+++ b/xen/common/domain.c
@@ -318,6 +318,9 @@ struct domain *domain_create(
         spin_unlock(&domlist_update_lock);
     }
 
+    d->prev_mfn_shinfo = INVALID_MFN;
+    d->prev_gpfn_shinfo = INVALID_MFN;
+
     return d;
 
  fail:
diff --git a/xen/include/xen/sched.h b/xen/include/xen/sched.h
index 6237ae1..e2acaff 100644
--- a/xen/include/xen/sched.h
+++ b/xen/include/xen/sched.h
@@ -391,6 +391,10 @@ struct domain
     /*v4v*/
     rwlock_t v4v_lock;
     struct v4v_domain	*v4v;
+
+    unsigned long prev_mfn_shinfo;
+    unsigned long prev_gpfn_shinfo;
+
 };
 
 struct domain_setup_info
