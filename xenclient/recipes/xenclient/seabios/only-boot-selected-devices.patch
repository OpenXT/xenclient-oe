diff --git a/src/boot.c b/src/boot.c
index 4e3015a..675bac4 100644
--- a/src/boot.c
+++ b/src/boot.c
@@ -224,6 +224,10 @@ static int DefaultFloppyPrio = 101;
 static int DefaultCDPrio     = 102;
 static int DefaultHDPrio     = 103;
 static int DefaultBEVPrio    = 104;
+static int SelectedFloppy    = 0;
+static int SelectedCD        = 0;
+static int SelectedHD        = 0;
+static int SelectedBEV       = 0;
 
 void
 boot_setup(void)
@@ -246,10 +250,10 @@ boot_setup(void)
             u32 val = bootorder & 0x0f;
             bootorder >>= 4;
             switch (val) {
-            case 1: DefaultFloppyPrio = i; break;
-            case 2: DefaultHDPrio = i;     break;
-            case 3: DefaultCDPrio = i;     break;
-            case 4: DefaultBEVPrio = i;    break;
+            case 1: DefaultFloppyPrio = i; SelectedFloppy = 1; break;
+            case 2: DefaultHDPrio = i; SelectedHD = 1; break;
+            case 3: DefaultCDPrio = i; SelectedCD = 1; break;
+            case 4: DefaultBEVPrio = i; SelectedBEV = 1; break;
             }
         }
     }
@@ -330,47 +334,56 @@ static inline int defPrio(int priority, int defaultprio) {
 void
 boot_add_bev(u16 seg, u16 bev, u16 desc, int prio)
 {
-    bootentry_add(IPL_TYPE_BEV, defPrio(prio, DefaultBEVPrio)
-                  , SEGOFF(seg, bev).segoff
-                  , desc ? MAKE_FLATPTR(seg, desc) : "Unknown");
-    DefaultBEVPrio = DEFAULT_PRIO;
+    if (SelectedBEV) {
+        bootentry_add(IPL_TYPE_BEV, defPrio(prio, DefaultBEVPrio)
+                      , SEGOFF(seg, bev).segoff
+                      , desc ? MAKE_FLATPTR(seg, desc) : "Unknown");
+        DefaultBEVPrio = DEFAULT_PRIO;
+    }
 }
 
 // Add a bcv entry for an expansion card harddrive or legacy option rom
 void
 boot_add_bcv(u16 seg, u16 ip, u16 desc, int prio)
 {
+#if 0
     bootentry_add(IPL_TYPE_BCV, defPrio(prio, DefaultHDPrio)
                   , SEGOFF(seg, ip).segoff
                   , desc ? MAKE_FLATPTR(seg, desc) : "Legacy option rom");
+#endif
 }
 
 void
 boot_add_floppy(struct drive_s *drive_g, const char *desc, int prio)
 {
-    bootentry_add(IPL_TYPE_FLOPPY, defPrio(prio, DefaultFloppyPrio)
-                  , (u32)drive_g, desc);
+    if (SelectedFloppy)
+        bootentry_add(IPL_TYPE_FLOPPY, defPrio(prio, DefaultFloppyPrio)
+                      , (u32)drive_g, desc);
 }
 
 void
 boot_add_hd(struct drive_s *drive_g, const char *desc, int prio)
 {
-    bootentry_add(IPL_TYPE_HARDDISK, defPrio(prio, DefaultHDPrio)
-                  , (u32)drive_g, desc);
+    if (SelectedHD)
+        bootentry_add(IPL_TYPE_HARDDISK, defPrio(prio, DefaultHDPrio)
+                      , (u32)drive_g, desc);
 }
 
 void
 boot_add_cd(struct drive_s *drive_g, const char *desc, int prio)
 {
-    bootentry_add(IPL_TYPE_CDROM, defPrio(prio, DefaultCDPrio)
-                  , (u32)drive_g, desc);
+    if (SelectedCD)
+        bootentry_add(IPL_TYPE_CDROM, defPrio(prio, DefaultCDPrio)
+                      , (u32)drive_g, desc);
 }
 
 // Add a CBFS payload entry
 void
 boot_add_cbfs(void *data, const char *desc, int prio)
 {
+#if 0
     bootentry_add(IPL_TYPE_CBFS, defPrio(prio, DEFAULT_PRIO), (u32)data, desc);
+#endif
 }
 
 
@@ -504,9 +517,11 @@ boot_prep(void)
         pos = pos->next;
     }
 
+#if 0
     // If nothing added a floppy/hd boot - add it manually.
     add_bev(IPL_TYPE_FLOPPY, 0);
     add_bev(IPL_TYPE_HARDDISK, 0);
+#endif
 }
 
 
